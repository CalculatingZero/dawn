"use strict";
(self["webpackChunkthirdweb_learn_theme"] = self["webpackChunkthirdweb_learn_theme"] || []).push([["vendors-node_modules_thirdweb-dev_wallets_evm_connectors_paper_dist_thirdweb-dev-wallets-evm--401d76"],{

/***/ "./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   n: () => (/* binding */ normalizeChainId)
/* harmony export */ });
function normalizeChainId(chainId) {
  if (typeof chainId === "string") {
    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === "0x" ? 16 : 10);
  }
  if (typeof chainId === "bigint") {
    return Number(chainId);
  }
  return chainId;
}




/***/ }),

/***/ "./node_modules/@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PaperWalletConnector: () => (/* binding */ PaperWalletConnector)
/* harmony export */ });
/* harmony import */ var _dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js */ "./node_modules/@thirdweb-dev/wallets/dist/classPrivateFieldSet-a5db7c83.browser.esm.js");
/* harmony import */ var _dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../dist/defineProperty-c8ecdc07.browser.esm.js */ "./node_modules/@thirdweb-dev/wallets/dist/defineProperty-c8ecdc07.browser.esm.js");
/* harmony import */ var _dist_connector_c1e1817a_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/connector-c1e1817a.browser.esm.js */ "./node_modules/@thirdweb-dev/wallets/dist/connector-c1e1817a.browser.esm.js");
/* harmony import */ var _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @paperxyz/embedded-wallet-service-sdk */ "./node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs");
/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _dist_walletIds_1ea97411_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../dist/walletIds-1ea97411.browser.esm.js */ "./node_modules/@thirdweb-dev/wallets/dist/walletIds-1ea97411.browser.esm.js");
/* harmony import */ var _dist_normalizeChainId_e4cc0175_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../dist/normalizeChainId-e4cc0175.browser.esm.js */ "./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.mjs");









var _paper = /*#__PURE__*/new WeakMap();
var _signer = /*#__PURE__*/new WeakMap();
class PaperWalletConnector extends _dist_connector_c1e1817a_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.C {
  constructor(options) {
    super();
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "id", _dist_walletIds_1ea97411_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.w.paper);
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "name", "Paper Wallet");
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "ready", true);
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "user", null);
    (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this, _paper, {
      writable: true,
      value: void 0
    });
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "options", void 0);
    (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this, _signer, {
      writable: true,
      value: void 0
    });
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "onAccountsChanged", async accounts => {
      if (accounts.length === 0) {
        await this.onDisconnect();
      } else {
        this.emit("change", {
          account: ethers__WEBPACK_IMPORTED_MODULE_6__.getAddress(accounts[0])
        });
      }
    });
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "onChainChanged", chainId => {
      const id = (0,_dist_normalizeChainId_e4cc0175_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.n)(chainId);
      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;
      this.emit("change", {
        chain: {
          id,
          unsupported
        }
      });
    });
    (0,_dist_defineProperty_c8ecdc07_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, "onDisconnect", async () => {
      this.emit("disconnect");
    });
    this.options = options;
  }
  getPaperSDK() {
    if (!(0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _paper)) {
      (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.a)(this, _paper, new Promise(async (resolve, reject) => {
        try {
          const {
            PaperEmbeddedWalletSdk
          } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @paperxyz/embedded-wallet-service-sdk */ "./node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs"));
          resolve(new PaperEmbeddedWalletSdk({
            clientId: this.options.clientId,
            chain: "Ethereum" // just pass Ethereum no matter what chain we are going to connect
          }));
        } catch (err) {
          reject(err);
        }
      }));
    }
    return (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _paper);
  }
  async connect(options) {
    const paperSDK = await this.getPaperSDK();
    if (!paperSDK) {
      throw new Error("Paper SDK not initialized");
    }
    let user = await paperSDK.getUser();
    switch (user.status) {
      case _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.UserStatus.LOGGED_OUT:
        {
          let authResult;
          if (options?.email) {
            authResult = await paperSDK.auth.loginWithPaperEmailOtp({
              email: options.email
            });
          } else {
            authResult = await paperSDK.auth.loginWithPaperModal();
          }
          this.user = authResult.user;
          break;
        }
      case _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.UserStatus.LOGGED_IN_WALLET_INITIALIZED:
        {
          this.user = user;
          break;
        }
    }
    if (!this.user) {
      throw new Error("Error connecting User");
    }
    this.setupListeners();
    return this.getAddress();
  }
  async disconnect() {
    const paper = await (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _paper);
    await paper?.auth.logout();
    this.user = null;
  }
  async getAddress() {
    const signer = await this.getSigner();
    return signer.getAddress();
  }
  async isConnected() {
    try {
      const addr = await this.getAddress();
      return !!addr;
    } catch (e) {
      return false;
    }
  }
  async getProvider() {
    const signer = await this.getSigner();
    if (!signer.provider) {
      throw new Error("Provider not found");
    }
    return signer.provider;
  }
  async getSigner() {
    if ((0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _signer)) {
      return (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _signer);
    }
    if (!this.user) {
      const paperSDK = await this.getPaperSDK();
      let user = await paperSDK.getUser();
      switch (user.status) {
        case _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.UserStatus.LOGGED_IN_WALLET_INITIALIZED:
          {
            this.user = user;
            break;
          }
      }
    }
    const signer = await this.user?.wallet.getEthersJsSigner({
      rpcEndpoint: this.options.chain.rpc[0]
    });
    if (!signer) {
      throw new Error("Signer not found");
    }
    (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.a)(this, _signer, signer);
    return signer;
  }
  async isAuthorized() {
    return false;
  }
  async switchChain(chainId) {
    const chain = this.options.chains.find(c => c.chainId === chainId);
    if (!chain) {
      throw new Error("Chain not configured");
    }

    // update chain in wallet
    await this.user?.wallet.setChain({
      chain: "Ethereum"
    }); // just pass Ethereum no matter what chain we are going to connect

    // update signer
    (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.a)(this, _signer, await this.user?.wallet.getEthersJsSigner({
      rpcEndpoint: chain.rpc[0]
    }));
    this.emit("change", {
      chain: {
        id: chainId,
        unsupported: false
      }
    });
  }

  // private getUser() {
  //   if (!this.user) {
  //     throw new Error("User not found");
  //   }
  //   return this.user;
  // }

  async setupListeners() {
    const provider = await this.getProvider();
    if (provider.on) {
      provider.on("accountsChanged", this.onAccountsChanged);
      provider.on("chainChanged", this.onChainChanged);
      provider.on("disconnect", this.onDisconnect);
    }
  }
  updateChains(chains) {
    this.options.chains = chains;
  }
  async getEmail() {
    await this.getProvider();
    if (!this.user) {
      throw new Error("No user found, Paper Wallet is not connected");
    }
    return this.user.authDetails.email;
  }
}




/***/ }),

/***/ "./node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AUTH_TOKEN_LOCAL_STORAGE_NAME: () => (/* binding */ L),
/* harmony export */   AuthProvider: () => (/* binding */ q),
/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME: () => (/* binding */ f),
/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED: () => (/* binding */ re),
/* harmony export */   EMBEDDED_WALLET_PATH: () => (/* binding */ y),
/* harmony export */   PaperEmbeddedWalletSdk: () => (/* binding */ M),
/* harmony export */   UserStatus: () => (/* binding */ G),
/* harmony export */   UserWalletStatus: () => (/* binding */ R),
/* harmony export */   WALLET_USER_ID_LOCAL_STORAGE_NAME: () => (/* binding */ A)
/* harmony export */ });
/* harmony import */ var _paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @paperxyz/sdk-common-utilities */ "./node_modules/@paperxyz/sdk-common-utilities/dist/index.mjs");
/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/providers */ "./node_modules/@ethersproject/providers/lib.esm/index.js");
/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/abstract-signer */ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
var Q=Object.defineProperty,F=Object.defineProperties;var H=Object.getOwnPropertyDescriptors;var b=Object.getOwnPropertySymbols;var z=Object.prototype.hasOwnProperty,V=Object.prototype.propertyIsEnumerable;var N=(a,e,t)=>e in a?Q(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,u=(a,e)=>{for(var t in e||(e={}))z.call(e,t)&&N(a,t,e[t]);if(b)for(var t of b(e))V.call(e,t)&&N(a,t,e[t]);return a},E=(a,e)=>F(a,H(e));var i=(a,e,t)=>new Promise((r,s)=>{var n=l=>{try{d(t.next(l))}catch(p){s(p)}},o=l=>{try{d(t.throw(l))}catch(p){s(p)}},d=l=>l.done?r(l.value):Promise.resolve(l.value).then(n,o);d((t=t.apply(a,e)).next())});var y="/sdk/2022-08-12/embedded-wallet",A=a=>`paperEwsWalletUserId-${a}`,j="walletToken",L=a=>`${j}-${a}`,P="a",f=(a,e)=>`${P}-${a}-${e}`,re=a=>`${P}-${a}`;var q=(n=>(n.PAPER_EMAIL_OTP="PaperEmailOTP",n.GOOGLE="Google",n.TWITTER="Twitter",n.AUTH0="Auth0",n.CUSTOM_JWT="CustomJWT",n))(q||{});var G=(t=>(t.LOGGED_OUT="Logged Out",t.LOGGED_IN_WALLET_INITIALIZED="Logged In, Wallet Initialized",t))(G||{}),R=(s=>(s.LOGGED_OUT="Logged Out",s.LOGGED_IN_WALLET_UNINITIALIZED="Logged In, Wallet Uninitialized",s.LOGGED_IN_NEW_DEVICE="Logged In, New Device",s.LOGGED_IN_WALLET_INITIALIZED="Logged In, Wallet Initialized",s))(R||{});var x=new Map,m=class{constructor({clientId:e}){this.isSupported=typeof window!="undefined"&&!!window.localStorage,this.clientId=e}getItem(e){return i(this,null,function*(){var t;return this.isSupported?window.localStorage.getItem(e):(t=x.get(e))!=null?t:null})}setItem(e,t){return i(this,null,function*(){if(this.isSupported)return window.localStorage.setItem(e,t);x.set(e,t)})}removeItem(e){return i(this,null,function*(){let t=yield this.getItem(e);return this.isSupported&&t?(window.localStorage.removeItem(e),!0):!1})}saveAuthCookie(e){return i(this,null,function*(){yield this.setItem(L(this.clientId),e)})}getAuthCookie(){return i(this,null,function*(){return this.getItem(L(this.clientId))})}removeAuthCookie(){return i(this,null,function*(){return this.removeItem(L(this.clientId))})}saveDeviceShare(e,t){return i(this,null,function*(){yield this.saveWalletUserId(t),yield this.setItem(f(this.clientId,t),e)})}getDeviceShare(){return i(this,null,function*(){let e=yield this.getWalletUserId();return e?this.getItem(f(this.clientId,e)):null})}removeDeviceShare(){return i(this,null,function*(){let e=yield this.getWalletUserId();return e?this.removeItem(f(this.clientId,e)):!1})}getWalletUserId(){return i(this,null,function*(){return this.getItem(A(this.clientId))})}saveWalletUserId(e){return i(this,null,function*(){yield this.setItem(A(this.clientId),e)})}removeWalletUserId(){return i(this,null,function*(){return this.removeItem(A(this.clientId))})}};function C(a){return new Promise(e=>{setTimeout(e,a*1e3)})}var Z={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none"},v=new Map,_=class{constructor({link:e,iframeId:t,container:r=document.body,iframeStyles:s,onIframeInitialize:n}){this.POLLING_INTERVAL_SECONDS=1.4;this.POST_LOAD_BUFFER_SECONDS=1;let o=document.getElementById(t),d=new URL(e),l="1.0.1";if(!l)throw new Error("Missing SDK_VERSION env var");if(d.searchParams.set("sdkVersion",l),!o||o.src!=d.href){if(!o){o=document.createElement("iframe");let p=u(u({},Z),s);Object.assign(o.style,p),o.setAttribute("id",t),r.appendChild(o)}o.src=d.href,o.setAttribute("data-version",l),o.onload=this.onIframeLoadHandler(o,this.POST_LOAD_BUFFER_SECONDS,n)}this.iframe=o}onIframeLoadedInitVariables(){return i(this,null,function*(){return{}})}onIframeLoadHandler(e,t,r){return()=>i(this,null,function*(){yield new Promise((n,o)=>i(this,null,function*(){var p;let d=new MessageChannel;d.port1.onmessage=T=>{let{data:h}=T;return d.port1.close(),h.success?(v.set(e.src,!0),r&&r(),n(!0)):o(new Error(h.error))},yield C(t);let l="initIframe";(p=e==null?void 0:e.contentWindow)==null||p.postMessage({eventType:l,data:yield this.onIframeLoadedInitVariables()},`${(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()}${y}`,[d.port2])}))})}call(n){return i(this,arguments,function*({procedureName:e,params:t,showIframe:r=!1,injectRecoveryCode:s={isInjectRecoveryCode:!1}}){for(;!v.get(this.iframe.src);)yield C(this.POLLING_INTERVAL_SECONDS);return r&&(this.iframe.style.display="block",yield C(.005)),new Promise((d,l)=>{var T;if(s.isInjectRecoveryCode){let h=c=>i(this,null,function*(){var O,U;if(c.origin!==(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()||c.data.type!=="paper_getRecoveryCode"||typeof c.data.userWalletId!="string")return;let k=yield(O=s.getRecoveryCode)==null?void 0:O.call(s,c.data.userWalletId);(U=this.iframe.contentWindow)==null||U.postMessage({type:"paper_getRecoveryCode_response",recoveryCode:k},(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()),window.removeEventListener("message",h)});window.addEventListener("message",h)}let p=new MessageChannel;p.port1.onmessage=h=>i(this,null,function*(){let{data:c}=h;p.port1.close(),r&&(yield C(.1),this.iframe.style.display="none"),c.success?d(c.data):l(new Error(c.error))}),(T=this.iframe.contentWindow)==null||T.postMessage({eventType:e,data:t},`${(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()}${y}`,[p.port2])})})}destroy(){v.delete(this.iframe.src)}};var w=class extends _{constructor({clientId:t,customizationOptions:r}){super({iframeId:J,link:B({clientId:t,path:y,queryParams:r}).href,container:document.body});this.clientId=t}onIframeLoadedInitVariables(){return i(this,null,function*(){let t=new m({clientId:this.clientId});return{authCookie:yield t.getAuthCookie(),deviceShareStored:yield t.getDeviceShare(),walletUserId:yield t.getWalletUserId(),clientId:this.clientId}})}};function B({clientId:a,path:e,queryParams:t}){var s;let r=new URL(e,(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)());if(t)for(let n of Object.keys(t))r.searchParams.set(n,((s=t[n])==null?void 0:s.toString())||"");return r.searchParams.set("clientId",a),r}var J="paper-embedded-wallet-iframe";var D=class{constructor({clientId:e,querier:t,onAuthSuccess:r}){this.clientId=e,this.AuthQuerier=t,this.localStorage=new m({clientId:e}),this.onAuthSuccess=r}preLogin(){return i(this,null,function*(){yield this.logout()})}postLogin(r){return i(this,arguments,function*({storedToken:e,walletDetails:t}){return e.shouldStoreCookieString&&(yield this.localStorage.saveAuthCookie(e.cookieString)),yield this.onAuthSuccess({storedToken:e,walletDetails:t})})}loginWithJwtAuth(s){return i(this,arguments,function*({token:e,authProvider:t,recoveryCode:r}){yield this.preLogin();let n=yield this.AuthQuerier.call({procedureName:"loginWithJwtAuthCallback",params:{token:e,authProvider:t,recoveryCode:r}});return this.postLogin(n)})}loginWithPaperModal(e){return i(this,null,function*(){yield this.preLogin();let t=yield this.AuthQuerier.call({procedureName:"loginWithPaperModal",params:void 0,showIframe:!0,injectRecoveryCode:{isInjectRecoveryCode:!0,getRecoveryCode:e==null?void 0:e.getRecoveryCode}});return this.postLogin(t)})}loginWithPaperEmailOtp(r){return i(this,arguments,function*({email:e,recoveryCode:t}){yield this.preLogin();let s=yield this.AuthQuerier.call({procedureName:"loginWithPaperModal",params:{email:e,recoveryCode:t},showIframe:!0,injectRecoveryCode:{isInjectRecoveryCode:!0}});return this.postLogin(s)})}sendPaperEmailLoginOtp(t){return i(this,arguments,function*({email:e}){yield this.preLogin();let{isNewUser:r,isNewDevice:s}=yield this.AuthQuerier.call({procedureName:"sendPaperEmailLoginOtp",params:{email:e}});return{isNewUser:r,isNewDevice:s}})}verifyPaperEmailLoginOtp(s){return i(this,arguments,function*({email:e,otp:t,recoveryCode:r}){let n=yield this.AuthQuerier.call({procedureName:"verifyPaperEmailLoginOtp",params:{email:e,otp:t,recoveryCode:r},injectRecoveryCode:{isInjectRecoveryCode:!0}});return this.postLogin(n)})}logout(){return i(this,null,function*(){let{success:e}=yield this.AuthQuerier.call({procedureName:"logout",params:void 0}),t=yield this.localStorage.removeAuthCookie(),r=yield this.localStorage.removeWalletUserId();return{success:e||t||r}})}};var I=class{constructor({chain:e,clientId:t,querier:r}){this.chain=e,this.clientId=t,this.gaslessTransactionQuerier=r}callContract(s){return i(this,arguments,function*({contractAddress:e,methodArgs:t,methodInterface:r}){return yield this.gaslessTransactionQuerier.call({procedureName:"callContract",params:{chain:this.chain,contractAddress:e,method:{args:t,stub:r}}})})}};var g=class extends _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_1__.Signer{constructor({provider:t,clientId:r,querier:s}){var n;super();this.DEFAULT_ETHEREUM_CHAIN_ID=5;this.clientId=r,this.querier=s,this.endpoint=(n=t.connection)==null?void 0:n.url,(0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this,"provider",t)}getAddress(){return i(this,null,function*(){let{address:t}=yield this.querier.call({procedureName:"getAddress",params:void 0});return t})}signMessage(t){return i(this,null,function*(){var n,o,d,l;let r=yield(n=this.provider)==null?void 0:n.getNetwork();r&&r._defaultProvider;let{signedMessage:s}=yield this.querier.call({procedureName:"signMessage",params:{message:t,chainId:(l=(d=yield(o=this.provider)==null?void 0:o.getNetwork())==null?void 0:d.chainId)!=null?l:this.DEFAULT_ETHEREUM_CHAIN_ID,rpcEndpoint:this.endpoint}});return s})}signTransaction(t){return i(this,null,function*(){var s,n,o;let{signedTransaction:r}=yield this.querier.call({procedureName:"signTransaction",params:{transaction:t,chainId:(o=(n=yield(s=this.provider)==null?void 0:s.getNetwork())==null?void 0:n.chainId)!=null?o:this.DEFAULT_ETHEREUM_CHAIN_ID,rpcEndpoint:this.endpoint}});return r})}_signTypedData(t,r,s){return i(this,null,function*(){var o,d,l;let{signedTypedData:n}=yield this.querier.call({procedureName:"signTypedDataV4",params:{domain:t,types:r,message:s,chainId:(l=(d=yield(o=this.provider)==null?void 0:o.getNetwork())==null?void 0:d.chainId)!=null?l:this.DEFAULT_ETHEREUM_CHAIN_ID,rpcEndpoint:this.endpoint}});return n})}connect(t){return new g({clientId:this.clientId,provider:t,querier:this.querier})}};var S=class{constructor({clientId:e,chain:t,querier:r}){this.clientId=e,this.chain=t,this.walletManagerQuerier=r,this.gasless=new I({chain:t,clientId:e,querier:r}),this.localStorage=new m({clientId:e})}postWalletSetUp(n){return i(this,arguments,function*({deviceShareStored:e,walletAddress:t,isIframeStorageEnabled:r,walletUserId:s}){return r||(yield this.localStorage.saveDeviceShare(e,s)),{walletAddress:t}})}getUserWalletStatus(){return i(this,null,function*(){let e=yield this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return e.status==="Logged In, Wallet Initialized"?{status:"Logged In, Wallet Initialized",user:E(u({},e.user),{wallet:this})}:e})}setChain(t){return i(this,arguments,function*({chain:e}){this.chain=e,this.gasless=new I({chain:e,clientId:this.clientId,querier:this.walletManagerQuerier})})}getEthersJsSigner(e){return i(this,null,function*(){var r;return new g({clientId:this.clientId,provider:(0,_ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__.getDefaultProvider)((r=e==null?void 0:e.rpcEndpoint)!=null?r:_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.ChainToPublicRpc[this.chain]),querier:this.walletManagerQuerier})})}};var M=class{constructor({clientId:e,chain:t,styles:r}){this.clientId=e,this.querier=new w({clientId:e,customizationOptions:r}),this.wallet=new S({clientId:e,chain:t,querier:this.querier}),this.auth=new D({clientId:e,querier:this.querier,onAuthSuccess:s=>i(this,null,function*(){return yield this.wallet.postWalletSetUp(E(u({},s.walletDetails),{walletUserId:s.storedToken.authDetails.userWalletId})),{user:{status:"Logged In, Wallet Initialized",authDetails:s.storedToken.authDetails,wallet:this.wallet,walletAddress:s.walletDetails.walletAddress}}})})}getUser(){return i(this,null,function*(){let e=yield this.wallet.getUserWalletStatus();switch(e.status){case"Logged In, New Device":case"Logged In, Wallet Uninitialized":return yield this.auth.logout(),this.getUser();case"Logged Out":return{status:"Logged Out"};case"Logged In, Wallet Initialized":return u({status:"Logged In, Wallet Initialized"},e.user)}})}};
//# sourceMappingURL=index.mjs.map

/***/ }),

/***/ "./node_modules/@paperxyz/sdk-common-utilities/dist/index.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@paperxyz/sdk-common-utilities/dist/index.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChainToPublicRpc: () => (/* binding */ o),
/* harmony export */   DEFAULT_BRAND_OPTIONS: () => (/* binding */ n),
/* harmony export */   getPaperOriginUrl: () => (/* binding */ i)
/* harmony export */ });
var o={Ethereum:"https://rpc.ankr.com/eth",Goerli:"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",Mumbai:"https://rpc-mumbai.maticvigil.com",Polygon:"https://rpc-mainnet.maticvigil.com",Avalanche:"https://api.avax.network/ext/bc/C/rpc",Optimism:"https://optimism.rpc.thirdweb.com",OptimismGoerli:"https://optimism-goerli.rpc.thirdweb.com",BSC:"https://binance.rpc.thirdweb.com",BSCTestnet:"https://binance-testnet.rpc.thirdweb.com",ArbitrumOne:"https://arbitrum.rpc.thirdweb.com",ArbitrumGoerli:"https://arbitrum-goerli.rpc.thirdweb.com",Fantom:"https://fantom.rpc.thirdweb.com",FantomTestnet:"https://fantom-testnet.rpc.thirdweb.com"};var e=()=>typeof window!="undefined"&&window.localStorage.getItem("IS_PAPER_DEV")==="true",r=()=>typeof window!="undefined"&&window.location.origin.includes("paper.xyz"),i=()=>{var t;return e()?(t=window.localStorage.getItem("PAPER_DEV_URL"))!=null?t:"http://localhost:3000":r()?window.location.origin:"https://withpaper.com"};var n={colorPrimary:"#cf3781",colorBackground:"#ffffff",colorText:"#1a202c",borderRadius:12,fontFamily:"Open Sans"};
//# sourceMappingURL=index.mjs.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhpcmR3ZWItZGV2LXdhbGxldHMtZXZtLWNvbm5lY3RvcnMtcGFwZXItZGlzdC10aGlyZHdlYi1kZXYtd2FsbGV0cy1ldm0tNDAxZDc2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ1Z1STtBQUN6RTtBQUNYO0FBQ2pCO0FBQ3BDO0FBQ3FEO0FBQ2M7QUFDM0U7O0FBRXZCO0FBQ0E7QUFDQSxtQ0FBbUMsc0VBQVM7QUFDNUM7QUFDQTtBQUNBLElBQUksK0VBQWUsYUFBYSxzRUFBUztBQUN6QyxJQUFJLCtFQUFlO0FBQ25CLElBQUksK0VBQWU7QUFDbkIsSUFBSSwrRUFBZTtBQUNuQixJQUFJLHFGQUEwQjtBQUM5QjtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksK0VBQWU7QUFDbkIsSUFBSSxxRkFBMEI7QUFDOUI7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLCtFQUFlO0FBQ25CO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxtQkFBbUIsOENBQWdCO0FBQ25DLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTCxJQUFJLCtFQUFlO0FBQ25CLGlCQUFpQixpRkFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxJQUFJLCtFQUFlO0FBQ25CO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVMscUZBQXFCO0FBQzlCLE1BQU0scUZBQXFCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUSx3TUFBK0M7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsV0FBVyxxRkFBcUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNkVBQVU7QUFDckI7QUFD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QzFtWTs7Ozs7Ozs7Ozs7Ozs7OztBQ0RBLE9BQU8sb29CQUFvb0IsaUxBQWlMLE1BQU0sZ0pBQWdKLE9BQU8sNkdBQTZMO0FBQ3RwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RoaXJkd2ViLWxlYXJuLXRoZW1lLy4vbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvd2FsbGV0cy9kaXN0L25vcm1hbGl6ZUNoYWluSWQtZTRjYzAxNzUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGhpcmR3ZWItbGVhcm4tdGhlbWUvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi93YWxsZXRzL2V2bS9jb25uZWN0b3JzL3BhcGVyL2Rpc3QvdGhpcmR3ZWItZGV2LXdhbGxldHMtZXZtLWNvbm5lY3RvcnMtcGFwZXIuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGhpcmR3ZWItbGVhcm4tdGhlbWUvLi9ub2RlX21vZHVsZXMvQHBhcGVyeHl6L2VtYmVkZGVkLXdhbGxldC1zZXJ2aWNlLXNkay9kaXN0L2luZGV4Lm1qcyIsIndlYnBhY2s6Ly90aGlyZHdlYi1sZWFybi10aGVtZS8uL25vZGVfbW9kdWxlcy9AcGFwZXJ4eXovc2RrLWNvbW1vbi11dGlsaXRpZXMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbm9ybWFsaXplQ2hhaW5JZChjaGFpbklkKSB7XG4gIGlmICh0eXBlb2YgY2hhaW5JZCA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoY2hhaW5JZCwgY2hhaW5JZC50cmltKCkuc3Vic3RyaW5nKDAsIDIpID09PSBcIjB4XCIgPyAxNiA6IDEwKTtcbiAgfVxuICBpZiAodHlwZW9mIGNoYWluSWQgPT09IFwiYmlnaW50XCIpIHtcbiAgICByZXR1cm4gTnVtYmVyKGNoYWluSWQpO1xuICB9XG4gIHJldHVybiBjaGFpbklkO1xufVxuXG5leHBvcnQgeyBub3JtYWxpemVDaGFpbklkIGFzIG4gfTtcbiIsImltcG9ydCB7IF8gYXMgX2NsYXNzUHJpdmF0ZUZpZWxkSW5pdFNwZWMsIGIgYXMgX2NsYXNzUHJpdmF0ZUZpZWxkR2V0LCBhIGFzIF9jbGFzc1ByaXZhdGVGaWVsZFNldCB9IGZyb20gJy4uLy4uLy4uLy4uL2Rpc3QvY2xhc3NQcml2YXRlRmllbGRTZXQtYTVkYjdjODMuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgXyBhcyBfZGVmaW5lUHJvcGVydHkgfSBmcm9tICcuLi8uLi8uLi8uLi9kaXN0L2RlZmluZVByb3BlcnR5LWM4ZWNkYzA3LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IEMgYXMgQ29ubmVjdG9yIH0gZnJvbSAnLi4vLi4vLi4vLi4vZGlzdC9jb25uZWN0b3ItYzFlMTgxN2EuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgVXNlclN0YXR1cyB9IGZyb20gJ0BwYXBlcnh5ei9lbWJlZGRlZC13YWxsZXQtc2VydmljZS1zZGsnO1xuaW1wb3J0IHsgdXRpbHMgfSBmcm9tICdldGhlcnMnO1xuaW1wb3J0IHsgdyBhcyB3YWxsZXRJZHMgfSBmcm9tICcuLi8uLi8uLi8uLi9kaXN0L3dhbGxldElkcy0xZWE5NzQxMS5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBuIGFzIG5vcm1hbGl6ZUNoYWluSWQgfSBmcm9tICcuLi8uLi8uLi8uLi9kaXN0L25vcm1hbGl6ZUNoYWluSWQtZTRjYzAxNzUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICdldmVudGVtaXR0ZXIzJztcblxudmFyIF9wYXBlciA9IC8qI19fUFVSRV9fKi9uZXcgV2Vha01hcCgpO1xudmFyIF9zaWduZXIgPSAvKiNfX1BVUkVfXyovbmV3IFdlYWtNYXAoKTtcbmNsYXNzIFBhcGVyV2FsbGV0Q29ubmVjdG9yIGV4dGVuZHMgQ29ubmVjdG9yIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKCk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaWRcIiwgd2FsbGV0SWRzLnBhcGVyKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIFwiUGFwZXIgV2FsbGV0XCIpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJlYWR5XCIsIHRydWUpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInVzZXJcIiwgbnVsbCk7XG4gICAgX2NsYXNzUHJpdmF0ZUZpZWxkSW5pdFNwZWModGhpcywgX3BhcGVyLCB7XG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICB9KTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJvcHRpb25zXCIsIHZvaWQgMCk7XG4gICAgX2NsYXNzUHJpdmF0ZUZpZWxkSW5pdFNwZWModGhpcywgX3NpZ25lciwge1xuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogdm9pZCAwXG4gICAgfSk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwib25BY2NvdW50c0NoYW5nZWRcIiwgYXN5bmMgYWNjb3VudHMgPT4ge1xuICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBhd2FpdCB0aGlzLm9uRGlzY29ubmVjdCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lbWl0KFwiY2hhbmdlXCIsIHtcbiAgICAgICAgICBhY2NvdW50OiB1dGlscy5nZXRBZGRyZXNzKGFjY291bnRzWzBdKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJvbkNoYWluQ2hhbmdlZFwiLCBjaGFpbklkID0+IHtcbiAgICAgIGNvbnN0IGlkID0gbm9ybWFsaXplQ2hhaW5JZChjaGFpbklkKTtcbiAgICAgIGNvbnN0IHVuc3VwcG9ydGVkID0gdGhpcy5vcHRpb25zLmNoYWlucy5maW5kSW5kZXgoYyA9PiBjLmNoYWluSWQgPT09IGlkKSA9PT0gLTE7XG4gICAgICB0aGlzLmVtaXQoXCJjaGFuZ2VcIiwge1xuICAgICAgICBjaGFpbjoge1xuICAgICAgICAgIGlkLFxuICAgICAgICAgIHVuc3VwcG9ydGVkXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9uRGlzY29ubmVjdFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICB0aGlzLmVtaXQoXCJkaXNjb25uZWN0XCIpO1xuICAgIH0pO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cbiAgZ2V0UGFwZXJTREsoKSB7XG4gICAgaWYgKCFfY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX3BhcGVyKSkge1xuICAgICAgX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9wYXBlciwgbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIFBhcGVyRW1iZWRkZWRXYWxsZXRTZGtcbiAgICAgICAgICB9ID0gYXdhaXQgaW1wb3J0KCdAcGFwZXJ4eXovZW1iZWRkZWQtd2FsbGV0LXNlcnZpY2Utc2RrJyk7XG4gICAgICAgICAgcmVzb2x2ZShuZXcgUGFwZXJFbWJlZGRlZFdhbGxldFNkayh7XG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5vcHRpb25zLmNsaWVudElkLFxuICAgICAgICAgICAgY2hhaW46IFwiRXRoZXJldW1cIiAvLyBqdXN0IHBhc3MgRXRoZXJldW0gbm8gbWF0dGVyIHdoYXQgY2hhaW4gd2UgYXJlIGdvaW5nIHRvIGNvbm5lY3RcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgfVxuICAgIHJldHVybiBfY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX3BhcGVyKTtcbiAgfVxuICBhc3luYyBjb25uZWN0KG9wdGlvbnMpIHtcbiAgICBjb25zdCBwYXBlclNESyA9IGF3YWl0IHRoaXMuZ2V0UGFwZXJTREsoKTtcbiAgICBpZiAoIXBhcGVyU0RLKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXBlciBTREsgbm90IGluaXRpYWxpemVkXCIpO1xuICAgIH1cbiAgICBsZXQgdXNlciA9IGF3YWl0IHBhcGVyU0RLLmdldFVzZXIoKTtcbiAgICBzd2l0Y2ggKHVzZXIuc3RhdHVzKSB7XG4gICAgICBjYXNlIFVzZXJTdGF0dXMuTE9HR0VEX09VVDpcbiAgICAgICAge1xuICAgICAgICAgIGxldCBhdXRoUmVzdWx0O1xuICAgICAgICAgIGlmIChvcHRpb25zPy5lbWFpbCkge1xuICAgICAgICAgICAgYXV0aFJlc3VsdCA9IGF3YWl0IHBhcGVyU0RLLmF1dGgubG9naW5XaXRoUGFwZXJFbWFpbE90cCh7XG4gICAgICAgICAgICAgIGVtYWlsOiBvcHRpb25zLmVtYWlsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXV0aFJlc3VsdCA9IGF3YWl0IHBhcGVyU0RLLmF1dGgubG9naW5XaXRoUGFwZXJNb2RhbCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLnVzZXIgPSBhdXRoUmVzdWx0LnVzZXI7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIGNhc2UgVXNlclN0YXR1cy5MT0dHRURfSU5fV0FMTEVUX0lOSVRJQUxJWkVEOlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy51c2VyID0gdXNlcjtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXRoaXMudXNlcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgY29ubmVjdGluZyBVc2VyXCIpO1xuICAgIH1cbiAgICB0aGlzLnNldHVwTGlzdGVuZXJzKCk7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QWRkcmVzcygpO1xuICB9XG4gIGFzeW5jIGRpc2Nvbm5lY3QoKSB7XG4gICAgY29uc3QgcGFwZXIgPSBhd2FpdCBfY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX3BhcGVyKTtcbiAgICBhd2FpdCBwYXBlcj8uYXV0aC5sb2dvdXQoKTtcbiAgICB0aGlzLnVzZXIgPSBudWxsO1xuICB9XG4gIGFzeW5jIGdldEFkZHJlc3MoKSB7XG4gICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgdGhpcy5nZXRTaWduZXIoKTtcbiAgICByZXR1cm4gc2lnbmVyLmdldEFkZHJlc3MoKTtcbiAgfVxuICBhc3luYyBpc0Nvbm5lY3RlZCgpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgYWRkciA9IGF3YWl0IHRoaXMuZ2V0QWRkcmVzcygpO1xuICAgICAgcmV0dXJuICEhYWRkcjtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGFzeW5jIGdldFByb3ZpZGVyKCkge1xuICAgIGNvbnN0IHNpZ25lciA9IGF3YWl0IHRoaXMuZ2V0U2lnbmVyKCk7XG4gICAgaWYgKCFzaWduZXIucHJvdmlkZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlByb3ZpZGVyIG5vdCBmb3VuZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNpZ25lci5wcm92aWRlcjtcbiAgfVxuICBhc3luYyBnZXRTaWduZXIoKSB7XG4gICAgaWYgKF9jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfc2lnbmVyKSkge1xuICAgICAgcmV0dXJuIF9jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfc2lnbmVyKTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLnVzZXIpIHtcbiAgICAgIGNvbnN0IHBhcGVyU0RLID0gYXdhaXQgdGhpcy5nZXRQYXBlclNESygpO1xuICAgICAgbGV0IHVzZXIgPSBhd2FpdCBwYXBlclNESy5nZXRVc2VyKCk7XG4gICAgICBzd2l0Y2ggKHVzZXIuc3RhdHVzKSB7XG4gICAgICAgIGNhc2UgVXNlclN0YXR1cy5MT0dHRURfSU5fV0FMTEVUX0lOSVRJQUxJWkVEOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNpZ25lciA9IGF3YWl0IHRoaXMudXNlcj8ud2FsbGV0LmdldEV0aGVyc0pzU2lnbmVyKHtcbiAgICAgIHJwY0VuZHBvaW50OiB0aGlzLm9wdGlvbnMuY2hhaW4ucnBjWzBdXG4gICAgfSk7XG4gICAgaWYgKCFzaWduZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlNpZ25lciBub3QgZm91bmRcIik7XG4gICAgfVxuICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfc2lnbmVyLCBzaWduZXIpO1xuICAgIHJldHVybiBzaWduZXI7XG4gIH1cbiAgYXN5bmMgaXNBdXRob3JpemVkKCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBhc3luYyBzd2l0Y2hDaGFpbihjaGFpbklkKSB7XG4gICAgY29uc3QgY2hhaW4gPSB0aGlzLm9wdGlvbnMuY2hhaW5zLmZpbmQoYyA9PiBjLmNoYWluSWQgPT09IGNoYWluSWQpO1xuICAgIGlmICghY2hhaW4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNoYWluIG5vdCBjb25maWd1cmVkXCIpO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSBjaGFpbiBpbiB3YWxsZXRcbiAgICBhd2FpdCB0aGlzLnVzZXI/LndhbGxldC5zZXRDaGFpbih7XG4gICAgICBjaGFpbjogXCJFdGhlcmV1bVwiXG4gICAgfSk7IC8vIGp1c3QgcGFzcyBFdGhlcmV1bSBubyBtYXR0ZXIgd2hhdCBjaGFpbiB3ZSBhcmUgZ29pbmcgdG8gY29ubmVjdFxuXG4gICAgLy8gdXBkYXRlIHNpZ25lclxuICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfc2lnbmVyLCBhd2FpdCB0aGlzLnVzZXI/LndhbGxldC5nZXRFdGhlcnNKc1NpZ25lcih7XG4gICAgICBycGNFbmRwb2ludDogY2hhaW4ucnBjWzBdXG4gICAgfSkpO1xuICAgIHRoaXMuZW1pdChcImNoYW5nZVwiLCB7XG4gICAgICBjaGFpbjoge1xuICAgICAgICBpZDogY2hhaW5JZCxcbiAgICAgICAgdW5zdXBwb3J0ZWQ6IGZhbHNlXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvLyBwcml2YXRlIGdldFVzZXIoKSB7XG4gIC8vICAgaWYgKCF0aGlzLnVzZXIpIHtcbiAgLy8gICAgIHRocm93IG5ldyBFcnJvcihcIlVzZXIgbm90IGZvdW5kXCIpO1xuICAvLyAgIH1cbiAgLy8gICByZXR1cm4gdGhpcy51c2VyO1xuICAvLyB9XG5cbiAgYXN5bmMgc2V0dXBMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKCk7XG4gICAgaWYgKHByb3ZpZGVyLm9uKSB7XG4gICAgICBwcm92aWRlci5vbihcImFjY291bnRzQ2hhbmdlZFwiLCB0aGlzLm9uQWNjb3VudHNDaGFuZ2VkKTtcbiAgICAgIHByb3ZpZGVyLm9uKFwiY2hhaW5DaGFuZ2VkXCIsIHRoaXMub25DaGFpbkNoYW5nZWQpO1xuICAgICAgcHJvdmlkZXIub24oXCJkaXNjb25uZWN0XCIsIHRoaXMub25EaXNjb25uZWN0KTtcbiAgICB9XG4gIH1cbiAgdXBkYXRlQ2hhaW5zKGNoYWlucykge1xuICAgIHRoaXMub3B0aW9ucy5jaGFpbnMgPSBjaGFpbnM7XG4gIH1cbiAgYXN5bmMgZ2V0RW1haWwoKSB7XG4gICAgYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpO1xuICAgIGlmICghdGhpcy51c2VyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyB1c2VyIGZvdW5kLCBQYXBlciBXYWxsZXQgaXMgbm90IGNvbm5lY3RlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudXNlci5hdXRoRGV0YWlscy5lbWFpbDtcbiAgfVxufVxuXG5leHBvcnQgeyBQYXBlcldhbGxldENvbm5lY3RvciB9O1xuIiwidmFyIFE9T2JqZWN0LmRlZmluZVByb3BlcnR5LEY9T2JqZWN0LmRlZmluZVByb3BlcnRpZXM7dmFyIEg9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7dmFyIGI9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sczt2YXIgej1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFY9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTt2YXIgTj0oYSxlLHQpPT5lIGluIGE/UShhLGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnR9KTphW2VdPXQsdT0oYSxlKT0+e2Zvcih2YXIgdCBpbiBlfHwoZT17fSkpei5jYWxsKGUsdCkmJk4oYSx0LGVbdF0pO2lmKGIpZm9yKHZhciB0IG9mIGIoZSkpVi5jYWxsKGUsdCkmJk4oYSx0LGVbdF0pO3JldHVybiBhfSxFPShhLGUpPT5GKGEsSChlKSk7dmFyIGk9KGEsZSx0KT0+bmV3IFByb21pc2UoKHIscyk9Pnt2YXIgbj1sPT57dHJ5e2QodC5uZXh0KGwpKX1jYXRjaChwKXtzKHApfX0sbz1sPT57dHJ5e2QodC50aHJvdyhsKSl9Y2F0Y2gocCl7cyhwKX19LGQ9bD0+bC5kb25lP3IobC52YWx1ZSk6UHJvbWlzZS5yZXNvbHZlKGwudmFsdWUpLnRoZW4obixvKTtkKCh0PXQuYXBwbHkoYSxlKSkubmV4dCgpKX0pO3ZhciB5PVwiL3Nkay8yMDIyLTA4LTEyL2VtYmVkZGVkLXdhbGxldFwiLEE9YT0+YHBhcGVyRXdzV2FsbGV0VXNlcklkLSR7YX1gLGo9XCJ3YWxsZXRUb2tlblwiLEw9YT0+YCR7an0tJHthfWAsUD1cImFcIixmPShhLGUpPT5gJHtQfS0ke2F9LSR7ZX1gLHJlPWE9PmAke1B9LSR7YX1gO3ZhciBxPShuPT4obi5QQVBFUl9FTUFJTF9PVFA9XCJQYXBlckVtYWlsT1RQXCIsbi5HT09HTEU9XCJHb29nbGVcIixuLlRXSVRURVI9XCJUd2l0dGVyXCIsbi5BVVRIMD1cIkF1dGgwXCIsbi5DVVNUT01fSldUPVwiQ3VzdG9tSldUXCIsbikpKHF8fHt9KTt2YXIgRz0odD0+KHQuTE9HR0VEX09VVD1cIkxvZ2dlZCBPdXRcIix0LkxPR0dFRF9JTl9XQUxMRVRfSU5JVElBTElaRUQ9XCJMb2dnZWQgSW4sIFdhbGxldCBJbml0aWFsaXplZFwiLHQpKShHfHx7fSksUj0ocz0+KHMuTE9HR0VEX09VVD1cIkxvZ2dlZCBPdXRcIixzLkxPR0dFRF9JTl9XQUxMRVRfVU5JTklUSUFMSVpFRD1cIkxvZ2dlZCBJbiwgV2FsbGV0IFVuaW5pdGlhbGl6ZWRcIixzLkxPR0dFRF9JTl9ORVdfREVWSUNFPVwiTG9nZ2VkIEluLCBOZXcgRGV2aWNlXCIscy5MT0dHRURfSU5fV0FMTEVUX0lOSVRJQUxJWkVEPVwiTG9nZ2VkIEluLCBXYWxsZXQgSW5pdGlhbGl6ZWRcIixzKSkoUnx8e30pO2ltcG9ydHtnZXRQYXBlck9yaWdpblVybCBhcyAkfWZyb21cIkBwYXBlcnh5ei9zZGstY29tbW9uLXV0aWxpdGllc1wiO3ZhciB4PW5ldyBNYXAsbT1jbGFzc3tjb25zdHJ1Y3Rvcih7Y2xpZW50SWQ6ZX0pe3RoaXMuaXNTdXBwb3J0ZWQ9dHlwZW9mIHdpbmRvdyE9XCJ1bmRlZmluZWRcIiYmISF3aW5kb3cubG9jYWxTdG9yYWdlLHRoaXMuY2xpZW50SWQ9ZX1nZXRJdGVtKGUpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXt2YXIgdDtyZXR1cm4gdGhpcy5pc1N1cHBvcnRlZD93aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oZSk6KHQ9eC5nZXQoZSkpIT1udWxsP3Q6bnVsbH0pfXNldEl0ZW0oZSx0KXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7aWYodGhpcy5pc1N1cHBvcnRlZClyZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKGUsdCk7eC5zZXQoZSx0KX0pfXJlbW92ZUl0ZW0oZSl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe2xldCB0PXlpZWxkIHRoaXMuZ2V0SXRlbShlKTtyZXR1cm4gdGhpcy5pc1N1cHBvcnRlZCYmdD8od2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGUpLCEwKTohMX0pfXNhdmVBdXRoQ29va2llKGUpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXt5aWVsZCB0aGlzLnNldEl0ZW0oTCh0aGlzLmNsaWVudElkKSxlKX0pfWdldEF1dGhDb29raWUoKXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7cmV0dXJuIHRoaXMuZ2V0SXRlbShMKHRoaXMuY2xpZW50SWQpKX0pfXJlbW92ZUF1dGhDb29raWUoKXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7cmV0dXJuIHRoaXMucmVtb3ZlSXRlbShMKHRoaXMuY2xpZW50SWQpKX0pfXNhdmVEZXZpY2VTaGFyZShlLHQpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXt5aWVsZCB0aGlzLnNhdmVXYWxsZXRVc2VySWQodCkseWllbGQgdGhpcy5zZXRJdGVtKGYodGhpcy5jbGllbnRJZCx0KSxlKX0pfWdldERldmljZVNoYXJlKCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe2xldCBlPXlpZWxkIHRoaXMuZ2V0V2FsbGV0VXNlcklkKCk7cmV0dXJuIGU/dGhpcy5nZXRJdGVtKGYodGhpcy5jbGllbnRJZCxlKSk6bnVsbH0pfXJlbW92ZURldmljZVNoYXJlKCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe2xldCBlPXlpZWxkIHRoaXMuZ2V0V2FsbGV0VXNlcklkKCk7cmV0dXJuIGU/dGhpcy5yZW1vdmVJdGVtKGYodGhpcy5jbGllbnRJZCxlKSk6ITF9KX1nZXRXYWxsZXRVc2VySWQoKXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7cmV0dXJuIHRoaXMuZ2V0SXRlbShBKHRoaXMuY2xpZW50SWQpKX0pfXNhdmVXYWxsZXRVc2VySWQoZSl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe3lpZWxkIHRoaXMuc2V0SXRlbShBKHRoaXMuY2xpZW50SWQpLGUpfSl9cmVtb3ZlV2FsbGV0VXNlcklkKCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe3JldHVybiB0aGlzLnJlbW92ZUl0ZW0oQSh0aGlzLmNsaWVudElkKSl9KX19O2ltcG9ydHtnZXRQYXBlck9yaWdpblVybCBhcyBXfWZyb21cIkBwYXBlcnh5ei9zZGstY29tbW9uLXV0aWxpdGllc1wiO2Z1bmN0aW9uIEMoYSl7cmV0dXJuIG5ldyBQcm9taXNlKGU9PntzZXRUaW1lb3V0KGUsYSoxZTMpfSl9dmFyIFo9e2hlaWdodDpcIjEwMCVcIix3aWR0aDpcIjEwMCVcIixib3JkZXI6XCJub25lXCIsYmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIixjb2xvclNjaGVtZTpcImxpZ2h0XCIscG9zaXRpb246XCJmaXhlZFwiLHRvcDpcIjBweFwiLHJpZ2h0OlwiMHB4XCIsekluZGV4OlwiMjE0NzQ4MzY0NlwiLGRpc3BsYXk6XCJub25lXCJ9LHY9bmV3IE1hcCxfPWNsYXNze2NvbnN0cnVjdG9yKHtsaW5rOmUsaWZyYW1lSWQ6dCxjb250YWluZXI6cj1kb2N1bWVudC5ib2R5LGlmcmFtZVN0eWxlczpzLG9uSWZyYW1lSW5pdGlhbGl6ZTpufSl7dGhpcy5QT0xMSU5HX0lOVEVSVkFMX1NFQ09ORFM9MS40O3RoaXMuUE9TVF9MT0FEX0JVRkZFUl9TRUNPTkRTPTE7bGV0IG89ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodCksZD1uZXcgVVJMKGUpLGw9XCIxLjAuMVwiO2lmKCFsKXRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgU0RLX1ZFUlNJT04gZW52IHZhclwiKTtpZihkLnNlYXJjaFBhcmFtcy5zZXQoXCJzZGtWZXJzaW9uXCIsbCksIW98fG8uc3JjIT1kLmhyZWYpe2lmKCFvKXtvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7bGV0IHA9dSh1KHt9LFopLHMpO09iamVjdC5hc3NpZ24oby5zdHlsZSxwKSxvLnNldEF0dHJpYnV0ZShcImlkXCIsdCksci5hcHBlbmRDaGlsZChvKX1vLnNyYz1kLmhyZWYsby5zZXRBdHRyaWJ1dGUoXCJkYXRhLXZlcnNpb25cIixsKSxvLm9ubG9hZD10aGlzLm9uSWZyYW1lTG9hZEhhbmRsZXIobyx0aGlzLlBPU1RfTE9BRF9CVUZGRVJfU0VDT05EUyxuKX10aGlzLmlmcmFtZT1vfW9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXtyZXR1cm57fX0pfW9uSWZyYW1lTG9hZEhhbmRsZXIoZSx0LHIpe3JldHVybigpPT5pKHRoaXMsbnVsbCxmdW5jdGlvbiooKXt5aWVsZCBuZXcgUHJvbWlzZSgobixvKT0+aSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7dmFyIHA7bGV0IGQ9bmV3IE1lc3NhZ2VDaGFubmVsO2QucG9ydDEub25tZXNzYWdlPVQ9PntsZXR7ZGF0YTpofT1UO3JldHVybiBkLnBvcnQxLmNsb3NlKCksaC5zdWNjZXNzPyh2LnNldChlLnNyYywhMCksciYmcigpLG4oITApKTpvKG5ldyBFcnJvcihoLmVycm9yKSl9LHlpZWxkIEModCk7bGV0IGw9XCJpbml0SWZyYW1lXCI7KHA9ZT09bnVsbD92b2lkIDA6ZS5jb250ZW50V2luZG93KT09bnVsbHx8cC5wb3N0TWVzc2FnZSh7ZXZlbnRUeXBlOmwsZGF0YTp5aWVsZCB0aGlzLm9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpfSxgJHtXKCl9JHt5fWAsW2QucG9ydDJdKX0pKX0pfWNhbGwobil7cmV0dXJuIGkodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24qKHtwcm9jZWR1cmVOYW1lOmUscGFyYW1zOnQsc2hvd0lmcmFtZTpyPSExLGluamVjdFJlY292ZXJ5Q29kZTpzPXtpc0luamVjdFJlY292ZXJ5Q29kZTohMX19KXtmb3IoOyF2LmdldCh0aGlzLmlmcmFtZS5zcmMpOyl5aWVsZCBDKHRoaXMuUE9MTElOR19JTlRFUlZBTF9TRUNPTkRTKTtyZXR1cm4gciYmKHRoaXMuaWZyYW1lLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiLHlpZWxkIEMoLjAwNSkpLG5ldyBQcm9taXNlKChkLGwpPT57dmFyIFQ7aWYocy5pc0luamVjdFJlY292ZXJ5Q29kZSl7bGV0IGg9Yz0+aSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7dmFyIE8sVTtpZihjLm9yaWdpbiE9PVcoKXx8Yy5kYXRhLnR5cGUhPT1cInBhcGVyX2dldFJlY292ZXJ5Q29kZVwifHx0eXBlb2YgYy5kYXRhLnVzZXJXYWxsZXRJZCE9XCJzdHJpbmdcIilyZXR1cm47bGV0IGs9eWllbGQoTz1zLmdldFJlY292ZXJ5Q29kZSk9PW51bGw/dm9pZCAwOk8uY2FsbChzLGMuZGF0YS51c2VyV2FsbGV0SWQpOyhVPXRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpPT1udWxsfHxVLnBvc3RNZXNzYWdlKHt0eXBlOlwicGFwZXJfZ2V0UmVjb3ZlcnlDb2RlX3Jlc3BvbnNlXCIscmVjb3ZlcnlDb2RlOmt9LFcoKSksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsaCl9KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixoKX1sZXQgcD1uZXcgTWVzc2FnZUNoYW5uZWw7cC5wb3J0MS5vbm1lc3NhZ2U9aD0+aSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7bGV0e2RhdGE6Y309aDtwLnBvcnQxLmNsb3NlKCksciYmKHlpZWxkIEMoLjEpLHRoaXMuaWZyYW1lLnN0eWxlLmRpc3BsYXk9XCJub25lXCIpLGMuc3VjY2Vzcz9kKGMuZGF0YSk6bChuZXcgRXJyb3IoYy5lcnJvcikpfSksKFQ9dGhpcy5pZnJhbWUuY29udGVudFdpbmRvdyk9PW51bGx8fFQucG9zdE1lc3NhZ2Uoe2V2ZW50VHlwZTplLGRhdGE6dH0sYCR7VygpfSR7eX1gLFtwLnBvcnQyXSl9KX0pfWRlc3Ryb3koKXt2LmRlbGV0ZSh0aGlzLmlmcmFtZS5zcmMpfX07dmFyIHc9Y2xhc3MgZXh0ZW5kcyBfe2NvbnN0cnVjdG9yKHtjbGllbnRJZDp0LGN1c3RvbWl6YXRpb25PcHRpb25zOnJ9KXtzdXBlcih7aWZyYW1lSWQ6SixsaW5rOkIoe2NsaWVudElkOnQscGF0aDp5LHF1ZXJ5UGFyYW1zOnJ9KS5ocmVmLGNvbnRhaW5lcjpkb2N1bWVudC5ib2R5fSk7dGhpcy5jbGllbnRJZD10fW9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXtsZXQgdD1uZXcgbSh7Y2xpZW50SWQ6dGhpcy5jbGllbnRJZH0pO3JldHVybnthdXRoQ29va2llOnlpZWxkIHQuZ2V0QXV0aENvb2tpZSgpLGRldmljZVNoYXJlU3RvcmVkOnlpZWxkIHQuZ2V0RGV2aWNlU2hhcmUoKSx3YWxsZXRVc2VySWQ6eWllbGQgdC5nZXRXYWxsZXRVc2VySWQoKSxjbGllbnRJZDp0aGlzLmNsaWVudElkfX0pfX07ZnVuY3Rpb24gQih7Y2xpZW50SWQ6YSxwYXRoOmUscXVlcnlQYXJhbXM6dH0pe3ZhciBzO2xldCByPW5ldyBVUkwoZSwkKCkpO2lmKHQpZm9yKGxldCBuIG9mIE9iamVjdC5rZXlzKHQpKXIuc2VhcmNoUGFyYW1zLnNldChuLCgocz10W25dKT09bnVsbD92b2lkIDA6cy50b1N0cmluZygpKXx8XCJcIik7cmV0dXJuIHIuc2VhcmNoUGFyYW1zLnNldChcImNsaWVudElkXCIsYSkscn12YXIgSj1cInBhcGVyLWVtYmVkZGVkLXdhbGxldC1pZnJhbWVcIjt2YXIgRD1jbGFzc3tjb25zdHJ1Y3Rvcih7Y2xpZW50SWQ6ZSxxdWVyaWVyOnQsb25BdXRoU3VjY2VzczpyfSl7dGhpcy5jbGllbnRJZD1lLHRoaXMuQXV0aFF1ZXJpZXI9dCx0aGlzLmxvY2FsU3RvcmFnZT1uZXcgbSh7Y2xpZW50SWQ6ZX0pLHRoaXMub25BdXRoU3VjY2Vzcz1yfXByZUxvZ2luKCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe3lpZWxkIHRoaXMubG9nb3V0KCl9KX1wb3N0TG9naW4ocil7cmV0dXJuIGkodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24qKHtzdG9yZWRUb2tlbjplLHdhbGxldERldGFpbHM6dH0pe3JldHVybiBlLnNob3VsZFN0b3JlQ29va2llU3RyaW5nJiYoeWllbGQgdGhpcy5sb2NhbFN0b3JhZ2Uuc2F2ZUF1dGhDb29raWUoZS5jb29raWVTdHJpbmcpKSx5aWVsZCB0aGlzLm9uQXV0aFN1Y2Nlc3Moe3N0b3JlZFRva2VuOmUsd2FsbGV0RGV0YWlsczp0fSl9KX1sb2dpbldpdGhKd3RBdXRoKHMpe3JldHVybiBpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKih7dG9rZW46ZSxhdXRoUHJvdmlkZXI6dCxyZWNvdmVyeUNvZGU6cn0pe3lpZWxkIHRoaXMucHJlTG9naW4oKTtsZXQgbj15aWVsZCB0aGlzLkF1dGhRdWVyaWVyLmNhbGwoe3Byb2NlZHVyZU5hbWU6XCJsb2dpbldpdGhKd3RBdXRoQ2FsbGJhY2tcIixwYXJhbXM6e3Rva2VuOmUsYXV0aFByb3ZpZGVyOnQscmVjb3ZlcnlDb2RlOnJ9fSk7cmV0dXJuIHRoaXMucG9zdExvZ2luKG4pfSl9bG9naW5XaXRoUGFwZXJNb2RhbChlKXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7eWllbGQgdGhpcy5wcmVMb2dpbigpO2xldCB0PXlpZWxkIHRoaXMuQXV0aFF1ZXJpZXIuY2FsbCh7cHJvY2VkdXJlTmFtZTpcImxvZ2luV2l0aFBhcGVyTW9kYWxcIixwYXJhbXM6dm9pZCAwLHNob3dJZnJhbWU6ITAsaW5qZWN0UmVjb3ZlcnlDb2RlOntpc0luamVjdFJlY292ZXJ5Q29kZTohMCxnZXRSZWNvdmVyeUNvZGU6ZT09bnVsbD92b2lkIDA6ZS5nZXRSZWNvdmVyeUNvZGV9fSk7cmV0dXJuIHRoaXMucG9zdExvZ2luKHQpfSl9bG9naW5XaXRoUGFwZXJFbWFpbE90cChyKXtyZXR1cm4gaSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbiooe2VtYWlsOmUscmVjb3ZlcnlDb2RlOnR9KXt5aWVsZCB0aGlzLnByZUxvZ2luKCk7bGV0IHM9eWllbGQgdGhpcy5BdXRoUXVlcmllci5jYWxsKHtwcm9jZWR1cmVOYW1lOlwibG9naW5XaXRoUGFwZXJNb2RhbFwiLHBhcmFtczp7ZW1haWw6ZSxyZWNvdmVyeUNvZGU6dH0sc2hvd0lmcmFtZTohMCxpbmplY3RSZWNvdmVyeUNvZGU6e2lzSW5qZWN0UmVjb3ZlcnlDb2RlOiEwfX0pO3JldHVybiB0aGlzLnBvc3RMb2dpbihzKX0pfXNlbmRQYXBlckVtYWlsTG9naW5PdHAodCl7cmV0dXJuIGkodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24qKHtlbWFpbDplfSl7eWllbGQgdGhpcy5wcmVMb2dpbigpO2xldHtpc05ld1VzZXI6cixpc05ld0RldmljZTpzfT15aWVsZCB0aGlzLkF1dGhRdWVyaWVyLmNhbGwoe3Byb2NlZHVyZU5hbWU6XCJzZW5kUGFwZXJFbWFpbExvZ2luT3RwXCIscGFyYW1zOntlbWFpbDplfX0pO3JldHVybntpc05ld1VzZXI6cixpc05ld0RldmljZTpzfX0pfXZlcmlmeVBhcGVyRW1haWxMb2dpbk90cChzKXtyZXR1cm4gaSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbiooe2VtYWlsOmUsb3RwOnQscmVjb3ZlcnlDb2RlOnJ9KXtsZXQgbj15aWVsZCB0aGlzLkF1dGhRdWVyaWVyLmNhbGwoe3Byb2NlZHVyZU5hbWU6XCJ2ZXJpZnlQYXBlckVtYWlsTG9naW5PdHBcIixwYXJhbXM6e2VtYWlsOmUsb3RwOnQscmVjb3ZlcnlDb2RlOnJ9LGluamVjdFJlY292ZXJ5Q29kZTp7aXNJbmplY3RSZWNvdmVyeUNvZGU6ITB9fSk7cmV0dXJuIHRoaXMucG9zdExvZ2luKG4pfSl9bG9nb3V0KCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe2xldHtzdWNjZXNzOmV9PXlpZWxkIHRoaXMuQXV0aFF1ZXJpZXIuY2FsbCh7cHJvY2VkdXJlTmFtZTpcImxvZ291dFwiLHBhcmFtczp2b2lkIDB9KSx0PXlpZWxkIHRoaXMubG9jYWxTdG9yYWdlLnJlbW92ZUF1dGhDb29raWUoKSxyPXlpZWxkIHRoaXMubG9jYWxTdG9yYWdlLnJlbW92ZVdhbGxldFVzZXJJZCgpO3JldHVybntzdWNjZXNzOmV8fHR8fHJ9fSl9fTtpbXBvcnR7Z2V0RGVmYXVsdFByb3ZpZGVyIGFzIFl9ZnJvbVwiQGV0aGVyc3Byb2plY3QvcHJvdmlkZXJzXCI7aW1wb3J0e0NoYWluVG9QdWJsaWNScGMgYXMgZWV9ZnJvbVwiQHBhcGVyeHl6L3Nkay1jb21tb24tdXRpbGl0aWVzXCI7dmFyIEk9Y2xhc3N7Y29uc3RydWN0b3Ioe2NoYWluOmUsY2xpZW50SWQ6dCxxdWVyaWVyOnJ9KXt0aGlzLmNoYWluPWUsdGhpcy5jbGllbnRJZD10LHRoaXMuZ2FzbGVzc1RyYW5zYWN0aW9uUXVlcmllcj1yfWNhbGxDb250cmFjdChzKXtyZXR1cm4gaSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbiooe2NvbnRyYWN0QWRkcmVzczplLG1ldGhvZEFyZ3M6dCxtZXRob2RJbnRlcmZhY2U6cn0pe3JldHVybiB5aWVsZCB0aGlzLmdhc2xlc3NUcmFuc2FjdGlvblF1ZXJpZXIuY2FsbCh7cHJvY2VkdXJlTmFtZTpcImNhbGxDb250cmFjdFwiLHBhcmFtczp7Y2hhaW46dGhpcy5jaGFpbixjb250cmFjdEFkZHJlc3M6ZSxtZXRob2Q6e2FyZ3M6dCxzdHViOnJ9fX0pfSl9fTtpbXBvcnR7U2lnbmVyIGFzIEt9ZnJvbVwiQGV0aGVyc3Byb2plY3QvYWJzdHJhY3Qtc2lnbmVyXCI7aW1wb3J0e2RlZmluZVJlYWRPbmx5IGFzIFh9ZnJvbVwiQGV0aGVyc3Byb2plY3QvcHJvcGVydGllc1wiO3ZhciBnPWNsYXNzIGV4dGVuZHMgS3tjb25zdHJ1Y3Rvcih7cHJvdmlkZXI6dCxjbGllbnRJZDpyLHF1ZXJpZXI6c30pe3ZhciBuO3N1cGVyKCk7dGhpcy5ERUZBVUxUX0VUSEVSRVVNX0NIQUlOX0lEPTU7dGhpcy5jbGllbnRJZD1yLHRoaXMucXVlcmllcj1zLHRoaXMuZW5kcG9pbnQ9KG49dC5jb25uZWN0aW9uKT09bnVsbD92b2lkIDA6bi51cmwsWCh0aGlzLFwicHJvdmlkZXJcIix0KX1nZXRBZGRyZXNzKCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe2xldHthZGRyZXNzOnR9PXlpZWxkIHRoaXMucXVlcmllci5jYWxsKHtwcm9jZWR1cmVOYW1lOlwiZ2V0QWRkcmVzc1wiLHBhcmFtczp2b2lkIDB9KTtyZXR1cm4gdH0pfXNpZ25NZXNzYWdlKHQpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXt2YXIgbixvLGQsbDtsZXQgcj15aWVsZChuPXRoaXMucHJvdmlkZXIpPT1udWxsP3ZvaWQgMDpuLmdldE5ldHdvcmsoKTtyJiZyLl9kZWZhdWx0UHJvdmlkZXI7bGV0e3NpZ25lZE1lc3NhZ2U6c309eWllbGQgdGhpcy5xdWVyaWVyLmNhbGwoe3Byb2NlZHVyZU5hbWU6XCJzaWduTWVzc2FnZVwiLHBhcmFtczp7bWVzc2FnZTp0LGNoYWluSWQ6KGw9KGQ9eWllbGQobz10aGlzLnByb3ZpZGVyKT09bnVsbD92b2lkIDA6by5nZXROZXR3b3JrKCkpPT1udWxsP3ZvaWQgMDpkLmNoYWluSWQpIT1udWxsP2w6dGhpcy5ERUZBVUxUX0VUSEVSRVVNX0NIQUlOX0lELHJwY0VuZHBvaW50OnRoaXMuZW5kcG9pbnR9fSk7cmV0dXJuIHN9KX1zaWduVHJhbnNhY3Rpb24odCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe3ZhciBzLG4sbztsZXR7c2lnbmVkVHJhbnNhY3Rpb246cn09eWllbGQgdGhpcy5xdWVyaWVyLmNhbGwoe3Byb2NlZHVyZU5hbWU6XCJzaWduVHJhbnNhY3Rpb25cIixwYXJhbXM6e3RyYW5zYWN0aW9uOnQsY2hhaW5JZDoobz0obj15aWVsZChzPXRoaXMucHJvdmlkZXIpPT1udWxsP3ZvaWQgMDpzLmdldE5ldHdvcmsoKSk9PW51bGw/dm9pZCAwOm4uY2hhaW5JZCkhPW51bGw/bzp0aGlzLkRFRkFVTFRfRVRIRVJFVU1fQ0hBSU5fSUQscnBjRW5kcG9pbnQ6dGhpcy5lbmRwb2ludH19KTtyZXR1cm4gcn0pfV9zaWduVHlwZWREYXRhKHQscixzKXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7dmFyIG8sZCxsO2xldHtzaWduZWRUeXBlZERhdGE6bn09eWllbGQgdGhpcy5xdWVyaWVyLmNhbGwoe3Byb2NlZHVyZU5hbWU6XCJzaWduVHlwZWREYXRhVjRcIixwYXJhbXM6e2RvbWFpbjp0LHR5cGVzOnIsbWVzc2FnZTpzLGNoYWluSWQ6KGw9KGQ9eWllbGQobz10aGlzLnByb3ZpZGVyKT09bnVsbD92b2lkIDA6by5nZXROZXR3b3JrKCkpPT1udWxsP3ZvaWQgMDpkLmNoYWluSWQpIT1udWxsP2w6dGhpcy5ERUZBVUxUX0VUSEVSRVVNX0NIQUlOX0lELHJwY0VuZHBvaW50OnRoaXMuZW5kcG9pbnR9fSk7cmV0dXJuIG59KX1jb25uZWN0KHQpe3JldHVybiBuZXcgZyh7Y2xpZW50SWQ6dGhpcy5jbGllbnRJZCxwcm92aWRlcjp0LHF1ZXJpZXI6dGhpcy5xdWVyaWVyfSl9fTt2YXIgUz1jbGFzc3tjb25zdHJ1Y3Rvcih7Y2xpZW50SWQ6ZSxjaGFpbjp0LHF1ZXJpZXI6cn0pe3RoaXMuY2xpZW50SWQ9ZSx0aGlzLmNoYWluPXQsdGhpcy53YWxsZXRNYW5hZ2VyUXVlcmllcj1yLHRoaXMuZ2FzbGVzcz1uZXcgSSh7Y2hhaW46dCxjbGllbnRJZDplLHF1ZXJpZXI6cn0pLHRoaXMubG9jYWxTdG9yYWdlPW5ldyBtKHtjbGllbnRJZDplfSl9cG9zdFdhbGxldFNldFVwKG4pe3JldHVybiBpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKih7ZGV2aWNlU2hhcmVTdG9yZWQ6ZSx3YWxsZXRBZGRyZXNzOnQsaXNJZnJhbWVTdG9yYWdlRW5hYmxlZDpyLHdhbGxldFVzZXJJZDpzfSl7cmV0dXJuIHJ8fCh5aWVsZCB0aGlzLmxvY2FsU3RvcmFnZS5zYXZlRGV2aWNlU2hhcmUoZSxzKSkse3dhbGxldEFkZHJlc3M6dH19KX1nZXRVc2VyV2FsbGV0U3RhdHVzKCl7cmV0dXJuIGkodGhpcyxudWxsLGZ1bmN0aW9uKigpe2xldCBlPXlpZWxkIHRoaXMud2FsbGV0TWFuYWdlclF1ZXJpZXIuY2FsbCh7cHJvY2VkdXJlTmFtZTpcImdldFVzZXJTdGF0dXNcIixwYXJhbXM6dm9pZCAwfSk7cmV0dXJuIGUuc3RhdHVzPT09XCJMb2dnZWQgSW4sIFdhbGxldCBJbml0aWFsaXplZFwiP3tzdGF0dXM6XCJMb2dnZWQgSW4sIFdhbGxldCBJbml0aWFsaXplZFwiLHVzZXI6RSh1KHt9LGUudXNlcikse3dhbGxldDp0aGlzfSl9OmV9KX1zZXRDaGFpbih0KXtyZXR1cm4gaSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbiooe2NoYWluOmV9KXt0aGlzLmNoYWluPWUsdGhpcy5nYXNsZXNzPW5ldyBJKHtjaGFpbjplLGNsaWVudElkOnRoaXMuY2xpZW50SWQscXVlcmllcjp0aGlzLndhbGxldE1hbmFnZXJRdWVyaWVyfSl9KX1nZXRFdGhlcnNKc1NpZ25lcihlKXtyZXR1cm4gaSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7dmFyIHI7cmV0dXJuIG5ldyBnKHtjbGllbnRJZDp0aGlzLmNsaWVudElkLHByb3ZpZGVyOlkoKHI9ZT09bnVsbD92b2lkIDA6ZS5ycGNFbmRwb2ludCkhPW51bGw/cjplZVt0aGlzLmNoYWluXSkscXVlcmllcjp0aGlzLndhbGxldE1hbmFnZXJRdWVyaWVyfSl9KX19O3ZhciBNPWNsYXNze2NvbnN0cnVjdG9yKHtjbGllbnRJZDplLGNoYWluOnQsc3R5bGVzOnJ9KXt0aGlzLmNsaWVudElkPWUsdGhpcy5xdWVyaWVyPW5ldyB3KHtjbGllbnRJZDplLGN1c3RvbWl6YXRpb25PcHRpb25zOnJ9KSx0aGlzLndhbGxldD1uZXcgUyh7Y2xpZW50SWQ6ZSxjaGFpbjp0LHF1ZXJpZXI6dGhpcy5xdWVyaWVyfSksdGhpcy5hdXRoPW5ldyBEKHtjbGllbnRJZDplLHF1ZXJpZXI6dGhpcy5xdWVyaWVyLG9uQXV0aFN1Y2Nlc3M6cz0+aSh0aGlzLG51bGwsZnVuY3Rpb24qKCl7cmV0dXJuIHlpZWxkIHRoaXMud2FsbGV0LnBvc3RXYWxsZXRTZXRVcChFKHUoe30scy53YWxsZXREZXRhaWxzKSx7d2FsbGV0VXNlcklkOnMuc3RvcmVkVG9rZW4uYXV0aERldGFpbHMudXNlcldhbGxldElkfSkpLHt1c2VyOntzdGF0dXM6XCJMb2dnZWQgSW4sIFdhbGxldCBJbml0aWFsaXplZFwiLGF1dGhEZXRhaWxzOnMuc3RvcmVkVG9rZW4uYXV0aERldGFpbHMsd2FsbGV0OnRoaXMud2FsbGV0LHdhbGxldEFkZHJlc3M6cy53YWxsZXREZXRhaWxzLndhbGxldEFkZHJlc3N9fX0pfSl9Z2V0VXNlcigpe3JldHVybiBpKHRoaXMsbnVsbCxmdW5jdGlvbiooKXtsZXQgZT15aWVsZCB0aGlzLndhbGxldC5nZXRVc2VyV2FsbGV0U3RhdHVzKCk7c3dpdGNoKGUuc3RhdHVzKXtjYXNlXCJMb2dnZWQgSW4sIE5ldyBEZXZpY2VcIjpjYXNlXCJMb2dnZWQgSW4sIFdhbGxldCBVbmluaXRpYWxpemVkXCI6cmV0dXJuIHlpZWxkIHRoaXMuYXV0aC5sb2dvdXQoKSx0aGlzLmdldFVzZXIoKTtjYXNlXCJMb2dnZWQgT3V0XCI6cmV0dXJue3N0YXR1czpcIkxvZ2dlZCBPdXRcIn07Y2FzZVwiTG9nZ2VkIEluLCBXYWxsZXQgSW5pdGlhbGl6ZWRcIjpyZXR1cm4gdSh7c3RhdHVzOlwiTG9nZ2VkIEluLCBXYWxsZXQgSW5pdGlhbGl6ZWRcIn0sZS51c2VyKX19KX19O2V4cG9ydHtMIGFzIEFVVEhfVE9LRU5fTE9DQUxfU1RPUkFHRV9OQU1FLHEgYXMgQXV0aFByb3ZpZGVyLGYgYXMgREVWSUNFX1NIQVJFX0xPQ0FMX1NUT1JBR0VfTkFNRSxyZSBhcyBERVZJQ0VfU0hBUkVfTE9DQUxfU1RPUkFHRV9OQU1FX0RFUFJFQ0FURUQseSBhcyBFTUJFRERFRF9XQUxMRVRfUEFUSCxNIGFzIFBhcGVyRW1iZWRkZWRXYWxsZXRTZGssRyBhcyBVc2VyU3RhdHVzLFIgYXMgVXNlcldhbGxldFN0YXR1cyxBIGFzIFdBTExFVF9VU0VSX0lEX0xPQ0FMX1NUT1JBR0VfTkFNRX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIiwidmFyIG89e0V0aGVyZXVtOlwiaHR0cHM6Ly9ycGMuYW5rci5jb20vZXRoXCIsR29lcmxpOlwiaHR0cHM6Ly9nb2VybGkuaW5mdXJhLmlvL3YzLzlhYTNkOTViM2JjNDQwZmE4OGVhMTJlYWE0NDU2MTYxXCIsTXVtYmFpOlwiaHR0cHM6Ly9ycGMtbXVtYmFpLm1hdGljdmlnaWwuY29tXCIsUG9seWdvbjpcImh0dHBzOi8vcnBjLW1haW5uZXQubWF0aWN2aWdpbC5jb21cIixBdmFsYW5jaGU6XCJodHRwczovL2FwaS5hdmF4Lm5ldHdvcmsvZXh0L2JjL0MvcnBjXCIsT3B0aW1pc206XCJodHRwczovL29wdGltaXNtLnJwYy50aGlyZHdlYi5jb21cIixPcHRpbWlzbUdvZXJsaTpcImh0dHBzOi8vb3B0aW1pc20tZ29lcmxpLnJwYy50aGlyZHdlYi5jb21cIixCU0M6XCJodHRwczovL2JpbmFuY2UucnBjLnRoaXJkd2ViLmNvbVwiLEJTQ1Rlc3RuZXQ6XCJodHRwczovL2JpbmFuY2UtdGVzdG5ldC5ycGMudGhpcmR3ZWIuY29tXCIsQXJiaXRydW1PbmU6XCJodHRwczovL2FyYml0cnVtLnJwYy50aGlyZHdlYi5jb21cIixBcmJpdHJ1bUdvZXJsaTpcImh0dHBzOi8vYXJiaXRydW0tZ29lcmxpLnJwYy50aGlyZHdlYi5jb21cIixGYW50b206XCJodHRwczovL2ZhbnRvbS5ycGMudGhpcmR3ZWIuY29tXCIsRmFudG9tVGVzdG5ldDpcImh0dHBzOi8vZmFudG9tLXRlc3RuZXQucnBjLnRoaXJkd2ViLmNvbVwifTt2YXIgZT0oKT0+dHlwZW9mIHdpbmRvdyE9XCJ1bmRlZmluZWRcIiYmd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiSVNfUEFQRVJfREVWXCIpPT09XCJ0cnVlXCIscj0oKT0+dHlwZW9mIHdpbmRvdyE9XCJ1bmRlZmluZWRcIiYmd2luZG93LmxvY2F0aW9uLm9yaWdpbi5pbmNsdWRlcyhcInBhcGVyLnh5elwiKSxpPSgpPT57dmFyIHQ7cmV0dXJuIGUoKT8odD13aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQQVBFUl9ERVZfVVJMXCIpKSE9bnVsbD90OlwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCI6cigpP3dpbmRvdy5sb2NhdGlvbi5vcmlnaW46XCJodHRwczovL3dpdGhwYXBlci5jb21cIn07dmFyIG49e2NvbG9yUHJpbWFyeTpcIiNjZjM3ODFcIixjb2xvckJhY2tncm91bmQ6XCIjZmZmZmZmXCIsY29sb3JUZXh0OlwiIzFhMjAyY1wiLGJvcmRlclJhZGl1czoxMixmb250RmFtaWx5OlwiT3BlbiBTYW5zXCJ9O2V4cG9ydHtvIGFzIENoYWluVG9QdWJsaWNScGMsbiBhcyBERUZBVUxUX0JSQU5EX09QVElPTlMsaSBhcyBnZXRQYXBlck9yaWdpblVybH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9