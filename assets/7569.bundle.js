"use strict";(self.webpackChunkthirdweb_learn_theme=self.webpackChunkthirdweb_learn_theme||[]).push([[7569],{73931:(t,r,a)=>{a.d(r,{S:()=>n});var e=a(17249),s=a(16817);class n{get chainId(){return this._chainId}constructor(t,r,a){(0,e._)(this,"contractWrapper",void 0),(0,e._)(this,"storage",void 0),(0,e._)(this,"erc20",void 0),(0,e._)(this,"_chainId",void 0),(0,e._)(this,"transfer",(0,s.ds)((async(t,r)=>this.erc20.transfer.prepare(t,r)))),(0,e._)(this,"transferFrom",(0,s.ds)((async(t,r,a)=>this.erc20.transferFrom.prepare(t,r,a)))),(0,e._)(this,"setAllowance",(0,s.ds)((async(t,r)=>this.erc20.setAllowance.prepare(t,r)))),(0,e._)(this,"transferBatch",(0,s.ds)((async t=>this.erc20.transferBatch.prepare(t)))),this.contractWrapper=t,this.storage=r,this.erc20=new s.an(this.contractWrapper,this.storage,a),this._chainId=a}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async get(){return this.erc20.get()}async balance(){return await this.erc20.balance()}async balanceOf(t){return this.erc20.balanceOf(t)}async totalSupply(){return await this.erc20.totalSupply()}async allowance(t){return await this.erc20.allowance(t)}async allowanceOf(t,r){return await this.erc20.allowanceOf(t,r)}}},97569:(t,r,a)=>{a.r(r),a.d(r,{Token:()=>h});var e=a(17249),s=a(16817),n=a(9279),i=a(2593);class c{constructor(t,r){(0,e._)(this,"events",void 0),(0,e._)(this,"contractWrapper",void 0),this.contractWrapper=t,this.events=r}async getAllHolderBalances(){const t=(await this.events.getEvents("Transfer")).map((t=>t.data)),r={};return t.forEach((t=>{const a=t?.from,e=t?.to,s=t?.value;a!==n.d&&(a in r||(r[a]=i.O$.from(0)),r[a]=r[a].sub(s)),e!==n.d&&(e in r||(r[e]=i.O$.from(0)),r[e]=r[e].add(s))})),Promise.all(Object.keys(r).map((async t=>({holder:t,balance:await(0,s.b9)(this.contractWrapper.getProvider(),this.contractWrapper.readContract.address,r[t])}))))}}var o=a(73931);a(13550),a(54146),a(54098),a(2162),a(64063),a(77191);class h extends o.S{constructor(t,r,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new s.dz(t,r,i,n),a,o),(0,e._)(this,"abi",void 0),(0,e._)(this,"metadata",void 0),(0,e._)(this,"app",void 0),(0,e._)(this,"roles",void 0),(0,e._)(this,"encoder",void 0),(0,e._)(this,"estimator",void 0),(0,e._)(this,"history",void 0),(0,e._)(this,"events",void 0),(0,e._)(this,"platformFees",void 0),(0,e._)(this,"sales",void 0),(0,e._)(this,"signature",void 0),(0,e._)(this,"interceptor",void 0),(0,e._)(this,"mint",(0,s.ds)((async t=>this.erc20.mint.prepare(t)))),(0,e._)(this,"mintTo",(0,s.ds)((async(t,r)=>this.erc20.mintTo.prepare(t,r)))),(0,e._)(this,"mintBatchTo",(0,s.ds)((async t=>this.erc20.mintBatchTo.prepare(t)))),(0,e._)(this,"delegateTo",(0,s.ds)((async t=>s.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await(0,s.cH)(t)]})))),(0,e._)(this,"burn",(0,s.ds)((t=>this.erc20.burn.prepare(t)))),(0,e._)(this,"burnFrom",(0,s.ds)((async(t,r)=>this.erc20.burnFrom.prepare(t,r)))),this.abi=s.e.parse(i||[]),this.metadata=new s.ag(this.contractWrapper,s.dS,this.storage),this.app=new s.a$(this.contractWrapper,this.metadata,this.storage),this.roles=new s.ah(this.contractWrapper,h.contractRoles),this.sales=new s.aj(this.contractWrapper),this.events=new s.aQ(this.contractWrapper),this.history=new c(this.contractWrapper,this.events),this.encoder=new s.af(this.contractWrapper),this.estimator=new s.aP(this.contractWrapper),this.platformFees=new s.aS(this.contractWrapper),this.interceptor=new s.aR(this.contractWrapper),this.signature=new s.ar(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(t))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.readContract.delegates(await(0,s.cH)(t))}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole((0,s.bE)("transfer"),n.d)}async getMintTransaction(t,r){return this.erc20.getMintTransaction(t,r)}async prepare(t,r,a){return s.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}}(0,e._)(h,"contractRoles",["admin","minter","transfer"])}}]);