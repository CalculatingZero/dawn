"use strict";(self.webpackChunkthirdweb_learn_theme=self.webpackChunkthirdweb_learn_theme||[]).push([[6044],{6215:(t,e,s)=>{s.d(e,{W:()=>o});var i=s(42009),n=s(6475),a=s(54146);class o extends a.Z{constructor(t){let{chains:e=n.gL9,options:s}=t;super(),(0,i._)(this,"id",void 0),(0,i._)(this,"name",void 0),(0,i._)(this,"chains",void 0),(0,i._)(this,"options",void 0),(0,i._)(this,"ready",void 0),this.chains=e,this.options=s}getBlockExplorerUrls(t){const e=t.explorers?.map((t=>t.url))??[];return e.length>0?e:void 0}isChainUnsupported(t){return!this.chains.some((e=>e.chainId===t))}updateChains(t){this.chains=t}}},10393:(t,e,s)=>{s.d(e,{A:()=>o,C:()=>r,R:()=>c,S:()=>d,U:()=>l,a:()=>h});var i=s(42009);class n extends Error{constructor(t,e){const{cause:s,code:n,data:a}=e;if(!Number.isInteger(n))throw new Error('"code" must be an integer.');if(!t||"string"!=typeof t)throw new Error('"message" must be a nonempty string.');super(t),(0,i._)(this,"cause",void 0),(0,i._)(this,"code",void 0),(0,i._)(this,"data",void 0),this.cause=s,this.code=n,this.data=a}}class a extends n{constructor(t,e){const{cause:s,code:i,data:n}=e;if(!(Number.isInteger(i)&&i>=1e3&&i<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,{cause:s,code:i,data:n})}}class o extends Error{constructor(){super(...arguments),(0,i._)(this,"name","AddChainError"),(0,i._)(this,"message","Error adding chain")}}class r extends Error{constructor(t){let{chainId:e,connectorId:s}=t;super(`Chain "${e}" not configured for connector "${s}".`),(0,i._)(this,"name","ChainNotConfigured")}}class h extends Error{constructor(){super(...arguments),(0,i._)(this,"name","ConnectorNotFoundError"),(0,i._)(this,"message","Connector not found")}}class c extends n{constructor(t){super("Resource unavailable",{cause:t,code:-32002}),(0,i._)(this,"name","ResourceUnavailable")}}class d extends a{constructor(t){super("Error switching chain",{cause:t,code:4902}),(0,i._)(this,"name","SwitchChainError")}}class l extends a{constructor(t){super("User rejected request",{cause:t,code:4001}),(0,i._)(this,"name","UserRejectedRequestError")}}},76044:(t,e,s)=>{s.d(e,{WalletConnectConnector:()=>k});var i=s(71958),n=s(16074),a=s(42009),o=s(64594),r=s(241),h=s(93286),c=s(23123),d=s(6215),l=s(10393);s(54146);const u="eip155",p="wagmi.requestedChains",w="wallet_addEthereumChain",g="last-used-chain-id";var m=new WeakMap,v=new WeakMap,b=new WeakMap,C=new WeakSet,_=new WeakSet,f=new WeakSet,y=new WeakSet,I=new WeakSet,E=new WeakSet,S=new WeakSet,x=new WeakSet;class k extends d.W{constructor(t){super({...t,options:{isNewChainsStale:!0,...t.options}}),(0,i._)(this,x),(0,i._)(this,S),(0,i._)(this,E),(0,i._)(this,I),(0,i._)(this,y),(0,i._)(this,f),(0,i._)(this,_),(0,i._)(this,C),(0,a._)(this,"id",c.w.walletConnect),(0,a._)(this,"name","WalletConnect"),(0,a._)(this,"ready",!0),(0,n._)(this,m,{writable:!0,value:void 0}),(0,n._)(this,v,{writable:!0,value:void 0}),(0,n._)(this,b,{writable:!0,value:void 0}),(0,a._)(this,"onAccountsChanged",(t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:o.getAddress(t[0])})})),(0,a._)(this,"onChainChanged",(t=>{const e=Number(t),s=this.isChainUnsupported(e);(0,n.b)(this,b).setItem(g,String(t)),this.emit("change",{chain:{id:e,unsupported:s}})})),(0,a._)(this,"onDisconnect",(()=>{(0,i.a)(this,I,L).call(this,[]),(0,n.b)(this,b).removeItem(g),this.emit("disconnect")})),(0,a._)(this,"onDisplayUri",(t=>{this.emit("message",{type:"display_uri",data:t})})),(0,a._)(this,"onConnect",(()=>{this.emit("connect",{provider:(0,n.b)(this,m)})})),(0,n.a)(this,b,t.options.storage),(0,i.a)(this,C,N).call(this)}async connect(){let{chainId:t,pairingTopic:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let s=t;if(!s){const t=await(0,n.b)(this,b).getItem(g),e=t?parseInt(t):void 0;s=e&&!this.isChainUnsupported(e)?e:this.chains[0]?.chainId}if(!s)throw new Error("No chains found on connector.");const a=await this.getProvider();this.setupListeners();const h=await(0,i.a)(this,f,A).call(this);if(a.session&&h&&await a.disconnect(),!a.session||h){const t=this.chains.filter((t=>t.chainId!==s)).map((t=>t.chainId));this.emit("message",{type:"connecting"}),await a.connect({pairingTopic:e,chains:[s],optionalChains:t.length>0?t:[s]}),(0,i.a)(this,I,L).call(this,this.chains.map((t=>{let{chainId:e}=t;return e})))}const c=await a.enable();if(0===c.length)throw new Error("No accounts found on provider.");const d=o.getAddress(c[0]),l=await this.getChainId();return{account:d,chain:{id:l,unsupported:this.isChainUnsupported(l)},provider:new r.Q(a)}}catch(t){if(/user rejected/i.test(t?.message))throw new l.U(t);throw t}}async disconnect(){const t=await this.getProvider();try{await t.disconnect()}catch(t){if(!/No matching key/i.test(t.message))throw t}finally{(0,i.a)(this,y,W).call(this),(0,i.a)(this,I,L).call(this,[])}}async getAccount(){const{accounts:t}=await this.getProvider();if(0===t.length)throw new Error("No accounts found on provider.");return o.getAddress(t[0])}async getChainId(){const{chainId:t}=await this.getProvider();return t}async getProvider(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if((0,n.b)(this,m)||await(0,i.a)(this,C,N).call(this),t&&await this.switchChain(t),!(0,n.b)(this,m))throw new Error("No provider found.");return(0,n.b)(this,m)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[e,s]=await Promise.all([this.getProvider({chainId:t}),this.getAccount()]);return new r.Q(e,t).getSigner(s)}async isAuthorized(){try{const[t,e]=await Promise.all([this.getAccount(),this.getProvider()]),s=await(0,i.a)(this,f,A).call(this);if(!t)return!1;if(s&&e.session){try{await e.disconnect()}catch{}return!1}return!0}catch{return!1}}async switchChain(t){const e=this.chains.find((e=>e.chainId===t));if(!e)throw new l.S(new Error("chain not found on connector."));try{const s=await this.getProvider(),n=(0,i.a)(this,S,P).call(this),a=(0,i.a)(this,x,D).call(this);if(!n.includes(t)&&a.includes(w)){await s.request({method:w,params:[{chainId:h.hexValue(e.chainId),blockExplorerUrls:[e.explorers?.length?e.explorers[0]:void 0],chainName:e.name,nativeCurrency:e.nativeCurrency,rpcUrls:[...e.rpc]}]});const n=await(0,i.a)(this,E,M).call(this);n.push(t),(0,i.a)(this,I,L).call(this,n)}return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:h.hexValue(t)}]}),e}catch(t){if(/user rejected request/i.test("string"==typeof t?t:t?.message))throw new l.U(t);throw new l.S(t)}}async setupListeners(){(0,n.b)(this,m)&&((0,i.a)(this,y,W).call(this),(0,n.b)(this,m).on("accountsChanged",this.onAccountsChanged),(0,n.b)(this,m).on("chainChanged",this.onChainChanged),(0,n.b)(this,m).on("disconnect",this.onDisconnect),(0,n.b)(this,m).on("session_delete",this.onDisconnect),(0,n.b)(this,m).on("display_uri",this.onDisplayUri),(0,n.b)(this,m).on("connect",this.onConnect))}}async function N(){return(0,n.b)(this,v)||(0,n.a)(this,v,(0,i.a)(this,_,U).call(this)),(0,n.b)(this,v)}async function U(){const{default:t,OPTIONAL_EVENTS:e,OPTIONAL_METHODS:i}=await s.e(6543).then(s.bind(s,96543)),[a,...o]=this.chains.map((t=>{let{chainId:e}=t;return e}));a&&(0,n.a)(this,m,await t.init({showQrModal:!1!==this.options.qrcode,projectId:this.options.projectId,optionalMethods:i,optionalEvents:e,chains:[a],optionalChains:o,metadata:{name:this.options.dappMetadata.name,description:this.options.dappMetadata.description||"",url:this.options.dappMetadata.url,icons:[this.options.dappMetadata.logoUrl||""]},rpcMap:Object.fromEntries(this.chains.map((t=>[t.chainId,t.rpc[0]]))),qrModalOptions:{...this.options.qrModalOptions,explorerAllowList:[],explorerDenyList:[]}}))}async function A(){if((0,i.a)(this,x,D).call(this).includes(w))return!1;if(!this.options.isNewChainsStale)return!1;const t=await(0,i.a)(this,E,M).call(this),e=this.chains.map((t=>{let{chainId:e}=t;return e})),s=(0,i.a)(this,S,P).call(this);return!(s.length&&!s.some((t=>e.includes(t)))||e.every((e=>t.includes(e))))}function W(){(0,n.b)(this,m)&&((0,n.b)(this,m).removeListener("accountsChanged",this.onAccountsChanged),(0,n.b)(this,m).removeListener("chainChanged",this.onChainChanged),(0,n.b)(this,m).removeListener("disconnect",this.onDisconnect),(0,n.b)(this,m).removeListener("session_delete",this.onDisconnect),(0,n.b)(this,m).removeListener("display_uri",this.onDisplayUri),(0,n.b)(this,m).removeListener("connect",this.onConnect))}function L(t){(0,n.b)(this,b).setItem(p,JSON.stringify(t))}async function M(){const t=await(0,n.b)(this,b).getItem(p);return t?JSON.parse(t):[]}function P(){if(!(0,n.b)(this,m))return[];const t=(0,n.b)(this,m).session?.namespaces[u]?.chains?.map((t=>parseInt(t.split(":")[1]||"")));return t??[]}function D(){if(!(0,n.b)(this,m))return[];const t=(0,n.b)(this,m).session?.namespaces[u]?.methods;return t??[]}}}]);