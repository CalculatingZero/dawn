"use strict";
(self["webpackChunkthirdweb_learn_theme"] = self["webpackChunkthirdweb_learn_theme"] || []).push([["vendors-node_modules_walletconnect_ethereum-provider_dist_index_es_js"],{

/***/ "./node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EthereumProvider: () => (/* binding */ Y),
/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ U),
/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ D),
/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ u),
/* harmony export */   REQUIRED_METHODS: () => (/* binding */ p),
/* harmony export */   "default": () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/universal-provider */ "./node_modules/@walletconnect/universal-provider/dist/index.es.js");
const j="wc",$="ethereum_provider",q=`${j}@${2}:${$}:`,N="https://rpc.walletconnect.com/v1/",p=["eth_sendTransaction","personal_sign"],D=["eth_accounts","eth_requestAccounts","eth_call","eth_getBalance","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode"],u=["chainChanged","accountsChanged"],U=["message","disconnect","connect"];var Q=Object.defineProperty,L=Object.defineProperties,H=Object.getOwnPropertyDescriptors,_=Object.getOwnPropertySymbols,G=Object.prototype.hasOwnProperty,K=Object.prototype.propertyIsEnumerable,y=(a,t,s)=>t in a?Q(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s,I=(a,t)=>{for(var s in t||(t={}))G.call(t,s)&&y(a,s,t[s]);if(_)for(var s of _(t))K.call(t,s)&&y(a,s,t[s]);return a},O=(a,t)=>L(a,H(t));function C(a){return Number(a[0].split(":")[1])}function w(a){return`0x${a.toString(16)}`}function V(a){const{chains:t,optionalChains:s,methods:i,optionalMethods:e,events:n,optionalEvents:c,rpcMap:h}=a;if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(t))throw new Error("Invalid chains");const o=t,r=i||p,f=n||u,M={[C(o)]:h[C(o)]},E={chains:o,methods:r,events:f,rpcMap:M},l=n?.filter(g=>!u.includes(g)),d=i?.filter(g=>!p.includes(g));if(!s&&!c&&!e&&!(l!=null&&l.length)&&!(d!=null&&d.length))return{required:E};const b=l?.length&&d?.length||!s,A={chains:[...new Set(b?o.concat(s||[]):s)],methods:[...new Set(r.concat(e||[]))],events:[...new Set(f.concat(c||[]))],rpcMap:h};return{required:E,optional:A}}class m{constructor(){this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.namespace="eip155",this.accounts=[],this.chainId=1,this.STORAGE_KEY=q,this.on=(t,s)=>(this.events.on(t,s),this),this.once=(t,s)=>(this.events.once(t,s),this),this.removeListener=(t,s)=>(this.events.removeListener(t,s),this),this.off=(t,s)=>(this.events.off(t,s),this),this.parseAccount=t=>this.isCompatibleChainId(t)?this.parseAccountId(t).address:t,this.signer={},this.rpc={}}static async init(t){const s=new m;return await s.initialize(t),s}async request(t){return await this.signer.request(t,this.formatChainId(this.chainId))}sendAsync(t,s){this.signer.sendAsync(t,s,this.formatChainId(this.chainId))}get connected(){return this.signer.client?this.signer.client.core.relayer.connected:!1}get connecting(){return this.signer.client?this.signer.client.core.relayer.connecting:!1}async enable(){return this.session||await this.connect(),await this.request({method:"eth_requestAccounts"})}async connect(t){if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts(t);const{required:s,optional:i}=V(this.rpc);try{const e=await new Promise(async(c,h)=>{var o;this.rpc.showQrModal&&((o=this.modal)==null||o.subscribeModal(r=>{!r.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),h(new Error("Connection request reset. Please try again.")))})),await this.signer.connect(O(I({namespaces:{[this.namespace]:s}},i&&{optionalNamespaces:{[this.namespace]:i}}),{pairingTopic:t?.pairingTopic})).then(r=>{c(r)}).catch(r=>{h(new Error(r.message))})});if(!e)return;this.setChainIds(this.rpc.chains);const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getAccountsFromNamespaces)(e.namespaces,[this.namespace]);this.setAccounts(n),this.events.emit("connect",{chainId:w(this.chainId)})}catch(e){throw this.signer.logger.error(e),e}finally{this.modal&&this.modal.closeModal()}}async disconnect(){this.session&&await this.signer.disconnect(),this.reset()}get isWalletConnect(){return!0}get session(){return this.signer.session}registerEventListeners(){this.signer.on("session_event",t=>{const{params:s}=t,{event:i}=s;i.name==="accountsChanged"?(this.accounts=this.parseAccounts(i.data),this.events.emit("accountsChanged",this.accounts)):i.name==="chainChanged"?this.setChainId(this.formatChainId(i.data)):this.events.emit(i.name,i.data),this.events.emit("session_event",t)}),this.signer.on("chainChanged",t=>{const s=parseInt(t);this.chainId=s,this.events.emit("chainChanged",w(this.chainId)),this.persist()}),this.signer.on("session_update",t=>{this.events.emit("session_update",t)}),this.signer.on("session_delete",t=>{this.reset(),this.events.emit("session_delete",t),this.events.emit("disconnect",O(I({},(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getSdkError)("USER_DISCONNECTED")),{data:t.topic,name:"USER_DISCONNECTED"}))}),this.signer.on("display_uri",t=>{var s,i;this.rpc.showQrModal&&((s=this.modal)==null||s.closeModal(),(i=this.modal)==null||i.openModal({uri:t})),this.events.emit("display_uri",t)})}setHttpProvider(t){this.request({method:"wallet_switchEthereumChain",params:[{chainId:t.toString(16)}]})}isCompatibleChainId(t){return typeof t=="string"?t.startsWith(`${this.namespace}:`):!1}formatChainId(t){return`${this.namespace}:${t}`}parseChainId(t){return Number(t.split(":")[1])}setChainIds(t){const s=t.filter(i=>this.isCompatibleChainId(i)).map(i=>this.parseChainId(i));s.length&&(this.chainId=s[0],this.events.emit("chainChanged",w(this.chainId)),this.persist())}setChainId(t){if(this.isCompatibleChainId(t)){const s=this.parseChainId(t);this.chainId=s,this.setHttpProvider(s)}}parseAccountId(t){const[s,i,e]=t.split(":");return{chainId:`${s}:${i}`,address:e}}setAccounts(t){this.accounts=t.filter(s=>this.parseChainId(this.parseAccountId(s).chainId)===this.chainId).map(s=>this.parseAccountId(s).address),this.events.emit("accountsChanged",this.accounts)}getRpcConfig(t){var s,i;return{chains:((s=t.chains)==null?void 0:s.map(e=>this.formatChainId(e)))||[`${this.namespace}:1`],optionalChains:t.optionalChains?t.optionalChains.map(e=>this.formatChainId(e)):void 0,methods:t?.methods||p,events:t?.events||u,optionalMethods:t?.optionalMethods||[],optionalEvents:t?.optionalEvents||[],rpcMap:t?.rpcMap||this.buildRpcMap(t.chains.concat(t.optionalChains||[]),t.projectId),showQrModal:Boolean(t?.showQrModal),qrModalOptions:(i=t?.qrModalOptions)!=null?i:void 0,projectId:t.projectId,metadata:t.metadata}}buildRpcMap(t,s){const i={};return t.forEach(e=>{i[e]=this.getRpcUrl(e,s)}),i}async initialize(t){if(this.rpc=this.getRpcConfig(t),this.chainId=C(this.rpc.chains),this.signer=await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_2__.UniversalProvider.init({projectId:this.rpc.projectId,metadata:this.rpc.metadata}),this.registerEventListeners(),await this.loadPersistedSession(),this.rpc.showQrModal)try{const{Web3Modal:s}=await __webpack_require__.e(/*! import() */ "vendors-node_modules_web3modal_standalone_dist_index_es_js").then(__webpack_require__.bind(__webpack_require__, /*! @web3modal/standalone */ "./node_modules/@web3modal/standalone/dist/index.es.js"));this.modal=new s(I({walletConnectVersion:2,projectId:this.rpc.projectId,standaloneChains:this.rpc.chains},this.rpc.qrModalOptions))}catch{throw new Error("To use QR modal, please install @web3modal/standalone package")}}loadConnectOpts(t){if(!t)return;const{chains:s,optionalChains:i,rpcMap:e}=t;s&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(s)&&(this.rpc.chains=s.map(n=>this.formatChainId(n)),s.forEach(n=>{this.rpc.rpcMap[n]=e?.[n]||this.getRpcUrl(n)})),i&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(i)&&(this.rpc.optionalChains=[],this.rpc.optionalChains=i?.map(n=>this.formatChainId(n)),i.forEach(n=>{this.rpc.rpcMap[n]=e?.[n]||this.getRpcUrl(n)}))}getRpcUrl(t,s){var i;return((i=this.rpc.rpcMap)==null?void 0:i[t])||`${N}?chainId=eip155:${t}&projectId=${s||this.rpc.projectId}`}async loadPersistedSession(){if(!this.session)return;const t=await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`);this.setChainIds(t?[this.formatChainId(t)]:this.session.namespaces[this.namespace].accounts),this.setAccounts(this.session.namespaces[this.namespace].accounts)}reset(){this.chainId=1,this.accounts=[]}persist(){this.session&&this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`,this.chainId)}parseAccounts(t){return typeof t=="string"||t instanceof String?[this.parseAccount(t)]:t.map(s=>this.parseAccount(s))}}const Y=m;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BASE10: () => (/* binding */ G),
/* harmony export */   BASE16: () => (/* binding */ f),
/* harmony export */   BASE64: () => (/* binding */ K),
/* harmony export */   COLON: () => (/* binding */ kn),
/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ Z),
/* harmony export */   EMPTY_SPACE: () => (/* binding */ L),
/* harmony export */   ENV_MAP: () => (/* binding */ _),
/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ln),
/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Ue),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ xe),
/* harmony export */   SDK_TYPE: () => (/* binding */ we),
/* harmony export */   SLASH: () => (/* binding */ _e),
/* harmony export */   TYPE_0: () => (/* binding */ Y),
/* harmony export */   TYPE_1: () => (/* binding */ U),
/* harmony export */   UTF8: () => (/* binding */ k),
/* harmony export */   appendToQueryString: () => (/* binding */ $e),
/* harmony export */   assertType: () => (/* binding */ zn),
/* harmony export */   buildApprovedNamespaces: () => (/* binding */ Ot),
/* harmony export */   calcExpiry: () => (/* binding */ rt),
/* harmony export */   capitalize: () => (/* binding */ Qn),
/* harmony export */   capitalizeWord: () => (/* binding */ Le),
/* harmony export */   createDelayedPromise: () => (/* binding */ Zn),
/* harmony export */   createExpiringPromise: () => (/* binding */ Xn),
/* harmony export */   decodeTypeByte: () => (/* binding */ j),
/* harmony export */   decrypt: () => (/* binding */ Cn),
/* harmony export */   deriveSymKey: () => (/* binding */ Un),
/* harmony export */   deserialize: () => (/* binding */ Q),
/* harmony export */   encodeTypeByte: () => (/* binding */ Se),
/* harmony export */   encrypt: () => (/* binding */ jn),
/* harmony export */   engineEvent: () => (/* binding */ st),
/* harmony export */   enumify: () => (/* binding */ Jn),
/* harmony export */   formatAccountId: () => (/* binding */ Ee),
/* harmony export */   formatAccountWithChain: () => (/* binding */ gn),
/* harmony export */   formatChainId: () => (/* binding */ ye),
/* harmony export */   formatExpirerTarget: () => (/* binding */ ne),
/* harmony export */   formatIdTarget: () => (/* binding */ nt),
/* harmony export */   formatMessage: () => (/* binding */ Pn),
/* harmony export */   formatMessageContext: () => (/* binding */ Bn),
/* harmony export */   formatRelayParams: () => (/* binding */ ze),
/* harmony export */   formatRelayRpcUrl: () => (/* binding */ Hn),
/* harmony export */   formatTopicTarget: () => (/* binding */ et),
/* harmony export */   formatUA: () => (/* binding */ Me),
/* harmony export */   formatUri: () => (/* binding */ pt),
/* harmony export */   generateKeyPair: () => (/* binding */ Rn),
/* harmony export */   generateRandomBytes32: () => (/* binding */ An),
/* harmony export */   getAccountsChains: () => (/* binding */ T),
/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ bn),
/* harmony export */   getAddressFromAccount: () => (/* binding */ he),
/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Nn),
/* harmony export */   getAppMetadata: () => (/* binding */ xn),
/* harmony export */   getChainFromAccount: () => (/* binding */ ve),
/* harmony export */   getChainsFromAccounts: () => (/* binding */ ge),
/* harmony export */   getChainsFromNamespace: () => (/* binding */ V),
/* harmony export */   getChainsFromNamespaces: () => (/* binding */ On),
/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Sn),
/* harmony export */   getDidAddress: () => (/* binding */ be),
/* harmony export */   getDidAddressSegments: () => (/* binding */ M),
/* harmony export */   getDidChainId: () => (/* binding */ Ne),
/* harmony export */   getEnvironment: () => (/* binding */ ee),
/* harmony export */   getHttpUrl: () => (/* binding */ qn),
/* harmony export */   getInternalError: () => (/* binding */ N),
/* harmony export */   getJavascriptID: () => (/* binding */ Ve),
/* harmony export */   getJavascriptOS: () => (/* binding */ De),
/* harmony export */   getLastItems: () => (/* binding */ ke),
/* harmony export */   getNamespacedDidChainId: () => (/* binding */ In),
/* harmony export */   getNamespacesChains: () => (/* binding */ Ye),
/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Je),
/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ We),
/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fn),
/* harmony export */   getRelayProtocolApi: () => (/* binding */ ct),
/* harmony export */   getRelayProtocolName: () => (/* binding */ it),
/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ bt),
/* harmony export */   getSdkError: () => (/* binding */ R),
/* harmony export */   getUniqueValues: () => (/* binding */ B),
/* harmony export */   hasOverlap: () => (/* binding */ b),
/* harmony export */   hashKey: () => (/* binding */ _n),
/* harmony export */   hashMessage: () => (/* binding */ wn),
/* harmony export */   isBrowser: () => (/* binding */ Ce),
/* harmony export */   isCaipNamespace: () => (/* binding */ te),
/* harmony export */   isConformingNamespaces: () => (/* binding */ cn),
/* harmony export */   isExpired: () => (/* binding */ ot),
/* harmony export */   isNode: () => (/* binding */ X),
/* harmony export */   isProposalStruct: () => (/* binding */ Rt),
/* harmony export */   isReactNative: () => (/* binding */ je),
/* harmony export */   isSessionCompatible: () => (/* binding */ Pt),
/* harmony export */   isSessionStruct: () => (/* binding */ At),
/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Dn),
/* harmony export */   isUndefined: () => (/* binding */ S),
/* harmony export */   isValidAccountId: () => (/* binding */ Ze),
/* harmony export */   isValidAccounts: () => (/* binding */ nn),
/* harmony export */   isValidActions: () => (/* binding */ rn),
/* harmony export */   isValidArray: () => (/* binding */ C),
/* harmony export */   isValidChainId: () => (/* binding */ H),
/* harmony export */   isValidChains: () => (/* binding */ Xe),
/* harmony export */   isValidController: () => (/* binding */ Ut),
/* harmony export */   isValidErrorReason: () => (/* binding */ $t),
/* harmony export */   isValidEvent: () => (/* binding */ Mt),
/* harmony export */   isValidId: () => (/* binding */ jt),
/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ tn),
/* harmony export */   isValidNamespaceActions: () => (/* binding */ se),
/* harmony export */   isValidNamespaceChains: () => (/* binding */ en),
/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ oe),
/* harmony export */   isValidNamespaces: () => (/* binding */ on),
/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Kt),
/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Lt),
/* harmony export */   isValidNamespacesRequest: () => (/* binding */ kt),
/* harmony export */   isValidNumber: () => (/* binding */ F),
/* harmony export */   isValidObject: () => (/* binding */ x),
/* harmony export */   isValidParams: () => (/* binding */ Ct),
/* harmony export */   isValidRelay: () => (/* binding */ sn),
/* harmony export */   isValidRelays: () => (/* binding */ wt),
/* harmony export */   isValidRequest: () => (/* binding */ Dt),
/* harmony export */   isValidRequestExpiry: () => (/* binding */ Ht),
/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ _t),
/* harmony export */   isValidResponse: () => (/* binding */ Vt),
/* harmony export */   isValidString: () => (/* binding */ m),
/* harmony export */   isValidUrl: () => (/* binding */ Tt),
/* harmony export */   mapEntries: () => (/* binding */ Wn),
/* harmony export */   mapToObj: () => (/* binding */ Gn),
/* harmony export */   mergeArrays: () => (/* binding */ O),
/* harmony export */   normalizeNamespaces: () => (/* binding */ re),
/* harmony export */   objToMap: () => (/* binding */ Yn),
/* harmony export */   parseAccountId: () => (/* binding */ z),
/* harmony export */   parseChainId: () => (/* binding */ me),
/* harmony export */   parseContextNames: () => (/* binding */ Ke),
/* harmony export */   parseExpirerTarget: () => (/* binding */ tt),
/* harmony export */   parseNamespaceKey: () => (/* binding */ Qe),
/* harmony export */   parseRelayParams: () => (/* binding */ qe),
/* harmony export */   parseUri: () => (/* binding */ ft),
/* harmony export */   serialize: () => (/* binding */ Ie),
/* harmony export */   validateDecoding: () => (/* binding */ $n),
/* harmony export */   validateEncoding: () => (/* binding */ Pe)
/* harmony export */ });
/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ "./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js");
/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/hkdf */ "./node_modules/@stablelib/hkdf/lib/hkdf.js");
/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stablelib/random */ "./node_modules/@stablelib/random/lib/random.js");
/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stablelib/sha256 */ "./node_modules/@stablelib/sha256/lib/sha256.js");
/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/x25519 */ "./node_modules/@stablelib/x25519/lib/x25519.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ "./node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ "./node_modules/detect-browser/es/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/window-metadata */ "./node_modules/@walletconnect/window-metadata/dist/cjs/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! query-string */ "./node_modules/@walletconnect/ethereum-provider/node_modules/query-string/index.js");
/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ "./node_modules/@walletconnect/relay-api/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
const D=":";function me(e){const[n,t]=e.split(D);return{namespace:n,reference:t}}function ye(e){const{namespace:n,reference:t}=e;return[n,t].join(D)}function z(e){const[n,t,r]=e.split(D);return{namespace:n,reference:t,address:r}}function Ee(e){const{namespace:n,reference:t,address:r}=e;return[n,t,r].join(D)}function B(e,n){const t=[];return e.forEach(r=>{const o=n(r);t.includes(o)||t.push(o)}),t}function he(e){const{address:n}=z(e);return n}function ve(e){const{namespace:n,reference:t}=z(e);return ye({namespace:n,reference:t})}function gn(e,n){const{namespace:t,reference:r}=me(n);return Ee({namespace:t,reference:r,address:e})}function Nn(e){return B(e,he)}function ge(e){return B(e,ve)}function bn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...o.accounts)}),t}function On(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...ge(o.accounts))}),t}function Sn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...V(r,o))}),t}function V(e,n){return e.includes(":")?[e]:n.chains||[]}const M=e=>e?.split(":"),Ne=e=>{const n=e&&M(e);if(n)return n[3]},In=e=>{const n=e&&M(e);if(n)return n[2]+":"+n[3]},be=e=>{const n=e&&M(e);if(n)return n.pop()},Pn=(e,n)=>{const t=`${e.domain} wants you to sign in with your Ethereum account:`,r=be(n),o=e.statement,s=`URI: ${e.aud}`,c=`Version: ${e.version}`,d=`Chain ID: ${Ne(n)}`,l=`Nonce: ${e.nonce}`,i=`Issued At: ${e.iat}`,u=e.resources&&e.resources.length>0?`Resources:
${e.resources.map(a=>`- ${a}`).join(`
`)}`:void 0;return[t,r,"",o,"",s,c,d,l,i,u].filter(a=>a!=null).join(`
`)},G="base10",f="base16",K="base64pad",k="utf8",Y=0,U=1,Tn=0,Oe=1,W=12,J=32;function Rn(){const e=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.generateKeyPair();return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.secretKey,f),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.publicKey,f)}}function An(){const e=(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(J);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,f)}function Un(e,n){const t=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,f),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(n,f)),r=new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.SHA256,t).expand(J);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r,f)}function _n(e){const n=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,f));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,f)}function wn(e){const n=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,k));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,f)}function Se(e){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${e}`,G)}function j(e){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,G))}function jn(e){const n=Se(typeof e.type<"u"?e.type:Y);if(j(n)===U&&typeof e.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");const t=typeof e.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.senderPublicKey,f):void 0,r=typeof e.iv<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.iv,f):(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(W),o=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey,f)).seal(r,(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.message,k));return Ie({type:n,sealed:o,iv:r,senderPublicKey:t})}function Cn(e){const n=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey,f)),{sealed:t,iv:r}=Q(e.encoded),o=n.open(r,t);if(o===null)throw new Error("Failed to decrypt");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o,k)}function Ie(e){if(j(e.type)===U){if(typeof e.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([e.type,e.senderPublicKey,e.iv,e.sealed]),K)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([e.type,e.iv,e.sealed]),K)}function Q(e){const n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,K),t=n.slice(Tn,Oe),r=Oe;if(j(t)===U){const d=r+J,l=d+W,i=n.slice(r,d),u=n.slice(d,l),a=n.slice(l);return{type:t,sealed:a,iv:u,senderPublicKey:i}}const o=r+W,s=n.slice(r,o),c=n.slice(o);return{type:t,sealed:c,iv:s}}function $n(e,n){const t=Q(e);return Pe({type:j(t.type),senderPublicKey:typeof t.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t.senderPublicKey,f):void 0,receiverPublicKey:n?.receiverPublicKey})}function Pe(e){const n=e?.type||Y;if(n===U){if(typeof e?.senderPublicKey>"u")throw new Error("missing sender public key");if(typeof e?.receiverPublicKey>"u")throw new Error("missing receiver public key")}return{type:n,senderPublicKey:e?.senderPublicKey,receiverPublicKey:e?.receiverPublicKey}}function Dn(e){return e.type===U&&typeof e.senderPublicKey=="string"&&typeof e.receiverPublicKey=="string"}var Vn=Object.defineProperty,Te=Object.getOwnPropertySymbols,Mn=Object.prototype.hasOwnProperty,Kn=Object.prototype.propertyIsEnumerable,Re=(e,n,t)=>n in e?Vn(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,Ae=(e,n)=>{for(var t in n||(n={}))Mn.call(n,t)&&Re(e,t,n[t]);if(Te)for(var t of Te(n))Kn.call(n,t)&&Re(e,t,n[t]);return e};const Ue="ReactNative",_={reactNative:"react-native",node:"node",browser:"browser",unknown:"unknown"},L=" ",kn=":",_e="/",Z=2,Ln=1e3,we="js";function X(){return typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"}function je(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)()&&navigator.product===Ue}function Ce(){return!X()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)()}function ee(){return je()?_.reactNative:X()?_.node:Ce()?_.browser:_.unknown}function $e(e,n){let t=query_string__WEBPACK_IMPORTED_MODULE_9__.parse(e);return t=Ae(Ae({},t),n),e=query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(t),e}function xn(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__.getWindowMetadata)()||{name:"",description:"",url:"",icons:[""]}}function Fn(e,n){var t;const r=ee(),o={protocol:e,version:n,env:r};return r==="browser"&&(o.host=((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)())==null?void 0:t.host)||"unknown"),o}function De(){const e=(0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();if(e===null)return"unknown";const n=e.os?e.os.replace(" ","").toLowerCase():"unknown";return e.type==="browser"?[n,e.name,e.version].join("-"):[n,e.version].join("-")}function Ve(){var e;const n=ee();return n===_.browser?[n,((e=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)())==null?void 0:e.host)||"unknown"].join(":"):n}function Me(e,n,t){const r=De(),o=Ve();return[[e,n].join("-"),[we,t].join("-"),r,o].join("/")}function Hn({protocol:e,version:n,relayUrl:t,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:c}){const d=t.split("?"),l=Me(e,n,r),i={auth:o,ua:l,projectId:s,useOnCloseEvent:c||void 0},u=$e(d[1]||"",i);return d[0]+"?"+u}function qn(e){let n=(e.match(/^[^:]+(?=:\/\/)/gi)||[])[0];const t=typeof n<"u"?e.split("://")[1]:e;return n=n==="wss"?"https":"http",[n,t].join("://")}function zn(e,n,t){if(!e[n]||typeof e[n]!==t)throw new Error(`Missing or invalid "${n}" param`)}function Ke(e,n=Z){return ke(e.split(_e),n)}function Bn(e){return Ke(e).join(L)}function b(e,n){return e.filter(t=>n.includes(t)).length===e.length}function ke(e,n=Z){return e.slice(Math.max(e.length-n,0))}function Gn(e){return Object.fromEntries(e.entries())}function Yn(e){return new Map(Object.entries(e))}function Wn(e,n){const t={};return Object.keys(e).forEach(r=>{t[r]=n(e[r])}),t}const Jn=e=>e;function Le(e){return e.trim().replace(/^\w/,n=>n.toUpperCase())}function Qn(e){return e.split(L).map(n=>Le(n)).join(L)}function Zn(e=_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,n){const t=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e||_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES);let r,o,s;return{resolve:c=>{s&&r&&(clearTimeout(s),r(c))},reject:c=>{s&&o&&(clearTimeout(s),o(c))},done:()=>new Promise((c,d)=>{s=setTimeout(()=>{d(new Error(n))},t),r=c,o=d})}}function Xn(e,n,t){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(t)),n);try{const c=await e;r(c)}catch(c){o(c)}clearTimeout(s)})}function ne(e,n){if(typeof n=="string"&&n.startsWith(`${e}:`))return n;if(e.toLowerCase()==="topic"){if(typeof n!="string")throw new Error('Value must be "string" for expirer target type: topic');return`topic:${n}`}else if(e.toLowerCase()==="id"){if(typeof n!="number")throw new Error('Value must be "number" for expirer target type: id');return`id:${n}`}throw new Error(`Unknown expirer target type: ${e}`)}function et(e){return ne("topic",e)}function nt(e){return ne("id",e)}function tt(e){const[n,t]=e.split(":"),r={id:void 0,topic:void 0};if(n==="topic"&&typeof t=="string")r.topic=t;else if(n==="id"&&Number.isInteger(Number(t)))r.id=Number(t);else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);return r}function rt(e,n){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.fromMiliseconds)((n||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e))}function ot(e){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e)}function st(e,n){return`${e}${n?`:${n}`:""}`}function O(e=[],n=[]){return[...new Set([...e,...n])]}const xe="irn";function it(e){return e?.relay||{protocol:xe}}function ct(e){const n=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];if(typeof n>"u")throw new Error(`Relay Protocol not supported: ${e}`);return n}var at=Object.defineProperty,Fe=Object.getOwnPropertySymbols,ut=Object.prototype.hasOwnProperty,dt=Object.prototype.propertyIsEnumerable,He=(e,n,t)=>n in e?at(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,lt=(e,n)=>{for(var t in n||(n={}))ut.call(n,t)&&He(e,t,n[t]);if(Fe)for(var t of Fe(n))dt.call(n,t)&&He(e,t,n[t]);return e};function qe(e,n="-"){const t={},r="relay"+n;return Object.keys(e).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,""),c=e[o];t[s]=c}}),t}function ft(e){const n=e.indexOf(":"),t=e.indexOf("?")!==-1?e.indexOf("?"):void 0,r=e.substring(0,n),o=e.substring(n+1,t).split("@"),s=typeof t<"u"?e.substring(t):"",c=query_string__WEBPACK_IMPORTED_MODULE_9__.parse(s);return{protocol:r,topic:o[0],version:parseInt(o[1],10),symKey:c.symKey,relay:qe(c)}}function ze(e,n="-"){const t="relay",r={};return Object.keys(e).forEach(o=>{const s=t+n+o;e[o]&&(r[s]=e[o])}),r}function pt(e){return`${e.protocol}:${e.topic}@${e.version}?`+query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(lt({symKey:e.symKey},ze(e.relay)))}var mt=Object.defineProperty,yt=Object.defineProperties,Et=Object.getOwnPropertyDescriptors,Be=Object.getOwnPropertySymbols,ht=Object.prototype.hasOwnProperty,vt=Object.prototype.propertyIsEnumerable,Ge=(e,n,t)=>n in e?mt(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,gt=(e,n)=>{for(var t in n||(n={}))ht.call(n,t)&&Ge(e,t,n[t]);if(Be)for(var t of Be(n))vt.call(n,t)&&Ge(e,t,n[t]);return e},Nt=(e,n)=>yt(e,Et(n));function T(e){const n=[];return e.forEach(t=>{const[r,o]=t.split(":");n.push(`${r}:${o}`)}),n}function Ye(e){const n=[];return Object.values(e).forEach(t=>{n.push(...T(t.accounts))}),n}function We(e,n){const t=[];return Object.values(e).forEach(r=>{T(r.accounts).includes(n)&&t.push(...r.methods)}),t}function Je(e,n){const t=[];return Object.values(e).forEach(r=>{T(r.accounts).includes(n)&&t.push(...r.events)}),t}function bt(e,n){const t=on(e,n);if(t)throw new Error(t.message);const r={};for(const[o,s]of Object.entries(e))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(c=>`${c.split(":")[0]}:${c.split(":")[1]}`)};return r}function Ot(e){const{requiredNamespaces:n,optionalNamespaces:t={},supportedNamespaces:r}=e,o=re(n),s=re(t),c={};Object.keys(r).forEach(i=>{const u=r[i].chains,a=r[i].methods,g=r[i].events,A=r[i].accounts;c[i]={chains:u,methods:a,events:g,accounts:A}});const d=cn(n,c,"approve()");if(d)throw new Error(d.message);const l={};return Object.keys(o).forEach(i=>{const u=r[i].chains.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.chains)==null?void 0:y.includes(v)}),a=r[i].methods.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.methods)==null?void 0:y.includes(v)}),g=r[i].events.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.events)==null?void 0:y.includes(v)}),A=u.map(v=>r[i].accounts.filter(p=>p.includes(v))).flat();l[i]={chains:u,methods:a,events:g,accounts:A}}),Object.keys(s).forEach(i=>{var u,a,g,A,v,p;if(!r[i])return;const y=(a=(u=s[i])==null?void 0:u.chains)==null?void 0:a.filter(I=>r[i].chains.includes(I)),un=r[i].methods.filter(I=>{var P,w;return(w=(P=s[i])==null?void 0:P.methods)==null?void 0:w.includes(I)}),dn=r[i].events.filter(I=>{var P,w;return(w=(P=s[i])==null?void 0:P.events)==null?void 0:w.includes(I)}),ln=y?.map(I=>r[i].accounts.filter(P=>P.includes(I))).flat();l[i]={chains:O((g=l[i])==null?void 0:g.chains,y),methods:O((A=l[i])==null?void 0:A.methods,un),events:O((v=l[i])==null?void 0:v.events,dn),accounts:O((p=l[i])==null?void 0:p.accounts,ln)}}),l}function te(e){return e.includes(":")}function Qe(e){return te(e)?e.split(":")[0]:e}function re(e){var n,t,r;const o={};if(!x(e))return o;for(const[s,c]of Object.entries(e)){const d=te(s)?[s]:c.chains,l=c.methods||[],i=c.events||[],u=Qe(s);o[u]=Nt(gt({},o[u]),{chains:O(d,(n=o[u])==null?void 0:n.chains),methods:O(l,(t=o[u])==null?void 0:t.methods),events:O(i,(r=o[u])==null?void 0:r.events)})}return o}const St={INVALID_METHOD:{message:"Invalid method.",code:1001},INVALID_EVENT:{message:"Invalid event.",code:1002},INVALID_UPDATE_REQUEST:{message:"Invalid update request.",code:1003},INVALID_EXTEND_REQUEST:{message:"Invalid extend request.",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:"Invalid session settle request.",code:1005},UNAUTHORIZED_METHOD:{message:"Unauthorized method.",code:3001},UNAUTHORIZED_EVENT:{message:"Unauthorized event.",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:"Unauthorized update request.",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:"Unauthorized extend request.",code:3004},USER_REJECTED:{message:"User rejected.",code:5e3},USER_REJECTED_CHAINS:{message:"User rejected chains.",code:5001},USER_REJECTED_METHODS:{message:"User rejected methods.",code:5002},USER_REJECTED_EVENTS:{message:"User rejected events.",code:5003},UNSUPPORTED_CHAINS:{message:"Unsupported chains.",code:5100},UNSUPPORTED_METHODS:{message:"Unsupported methods.",code:5101},UNSUPPORTED_EVENTS:{message:"Unsupported events.",code:5102},UNSUPPORTED_ACCOUNTS:{message:"Unsupported accounts.",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:"Unsupported namespace key.",code:5104},USER_DISCONNECTED:{message:"User disconnected.",code:6e3},SESSION_SETTLEMENT_FAILED:{message:"Session settlement failed.",code:7e3},WC_METHOD_UNSUPPORTED:{message:"Unsupported wc_ method.",code:10001}},It={NOT_INITIALIZED:{message:"Not initialized.",code:1},NO_MATCHING_KEY:{message:"No matching key.",code:2},RESTORE_WILL_OVERRIDE:{message:"Restore will override.",code:3},RESUBSCRIBED:{message:"Resubscribed.",code:4},MISSING_OR_INVALID:{message:"Missing or invalid.",code:5},EXPIRED:{message:"Expired.",code:6},UNKNOWN_TYPE:{message:"Unknown type.",code:7},MISMATCHED_TOPIC:{message:"Mismatched topic.",code:8},NON_CONFORMING_NAMESPACES:{message:"Non conforming namespaces.",code:9}};function N(e,n){const{message:t,code:r}=It[e];return{message:n?`${t} ${n}`:t,code:r}}function R(e,n){const{message:t,code:r}=St[e];return{message:n?`${t} ${n}`:t,code:r}}function C(e,n){return Array.isArray(e)?typeof n<"u"&&e.length?e.every(n):!0:!1}function x(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.keys(e).length}function S(e){return typeof e>"u"}function m(e,n){return n&&S(e)?!0:typeof e=="string"&&Boolean(e.trim().length)}function F(e,n){return n&&S(e)?!0:typeof e=="number"&&!isNaN(e)}function Pt(e,n){const{requiredNamespaces:t}=n,r=Object.keys(e.namespaces),o=Object.keys(t);let s=!0;return b(o,r)?(r.forEach(c=>{const{accounts:d,methods:l,events:i}=e.namespaces[c],u=T(d),a=t[c];(!b(V(c,a),u)||!b(a.methods,l)||!b(a.events,i))&&(s=!1)}),s):!1}function H(e){return m(e,!1)&&e.includes(":")?e.split(":").length===2:!1}function Ze(e){if(m(e,!1)&&e.includes(":")){const n=e.split(":");if(n.length===3){const t=n[0]+":"+n[1];return!!n[2]&&H(t)}}return!1}function Tt(e){if(m(e,!1))try{return typeof new URL(e)<"u"}catch{return!1}return!1}function Rt(e){var n;return(n=e?.proposer)==null?void 0:n.publicKey}function At(e){return e?.topic}function Ut(e,n){let t=null;return m(e?.publicKey,!1)||(t=N("MISSING_OR_INVALID",`${n} controller public key should be a string`)),t}function oe(e){let n=!0;return C(e)?e.length&&(n=e.every(t=>m(t,!1))):n=!1,n}function Xe(e,n,t){let r=null;return C(n)?n.forEach(o=>{r||(!H(o)||!o.includes(e))&&(r=R("UNSUPPORTED_CHAINS",`${t}, chain ${o} should be a string and conform to "namespace:chainId" format`))}):r=R("UNSUPPORTED_CHAINS",`${t}, chains ${n} should be an array of strings conforming to "namespace:chainId" format`),r}function en(e,n){let t=null;return Object.entries(e).forEach(([r,o])=>{if(t)return;const s=Xe(r,V(r,o),`${n} requiredNamespace`);s&&(t=s)}),t}function nn(e,n){let t=null;return C(e)?e.forEach(r=>{t||Ze(r)||(t=R("UNSUPPORTED_ACCOUNTS",`${n}, account ${r} should be a string and conform to "namespace:chainId:address" format`))}):t=R("UNSUPPORTED_ACCOUNTS",`${n}, accounts should be an array of strings conforming to "namespace:chainId:address" format`),t}function tn(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const o=nn(r?.accounts,`${n} namespace`);o&&(t=o)}),t}function rn(e,n){let t=null;return oe(e?.methods)?oe(e?.events)||(t=R("UNSUPPORTED_EVENTS",`${n}, events should be an array of strings or empty array for no events`)):t=R("UNSUPPORTED_METHODS",`${n}, methods should be an array of strings or empty array for no methods`),t}function se(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const o=rn(r,`${n}, namespace`);o&&(t=o)}),t}function _t(e,n,t){let r=null;if(e&&x(e)){const o=se(e,n);o&&(r=o);const s=en(e,n);s&&(r=s)}else r=N("MISSING_OR_INVALID",`${n}, ${t} should be an object with data`);return r}function on(e,n){let t=null;if(e&&x(e)){const r=se(e,n);r&&(t=r);const o=tn(e,n);o&&(t=o)}else t=N("MISSING_OR_INVALID",`${n}, namespaces should be an object with data`);return t}function sn(e){return m(e.protocol,!0)}function wt(e,n){let t=!1;return n&&!e?t=!0:e&&C(e)&&e.length&&e.forEach(r=>{t=sn(r)}),t}function jt(e){return typeof e=="number"}function Ct(e){return typeof e<"u"&&typeof e!==null}function $t(e){return!(!e||typeof e!="object"||!e.code||!F(e.code,!1)||!e.message||!m(e.message,!1))}function Dt(e){return!(S(e)||!m(e.method,!1))}function Vt(e){return!(S(e)||S(e.result)&&S(e.error)||!F(e.id,!1)||!m(e.jsonrpc,!1))}function Mt(e){return!(S(e)||!m(e.name,!1))}function Kt(e,n){return!(!H(n)||!Ye(e).includes(n))}function kt(e,n,t){return m(t,!1)?We(e,n).includes(t):!1}function Lt(e,n,t){return m(t,!1)?Je(e,n).includes(t):!1}function cn(e,n,t){let r=null;const o=xt(e),s=Ft(n),c=Object.keys(o),d=Object.keys(s),l=an(Object.keys(e)),i=an(Object.keys(n)),u=l.filter(a=>!i.includes(a));return u.length&&(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u.toString()}
      Received: ${Object.keys(n).toString()}`)),b(c,d)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces chains don't satisfy required namespaces.
      Required: ${c.toString()}
      Approved: ${d.toString()}`)),Object.keys(n).forEach(a=>{if(!a.includes(":")||r)return;const g=T(n[a].accounts);g.includes(a)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces accounts don't satisfy namespace accounts for ${a}
        Required: ${a}
        Approved: ${g.toString()}`))}),c.forEach(a=>{r||(b(o[a].methods,s[a].methods)?b(o[a].events,s[a].events)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces events don't satisfy namespace events for ${a}`)):r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces methods don't satisfy namespace methods for ${a}`))}),r}function xt(e){const n={};return Object.keys(e).forEach(t=>{var r;t.includes(":")?n[t]=e[t]:(r=e[t].chains)==null||r.forEach(o=>{n[o]={methods:e[t].methods,events:e[t].events}})}),n}function an(e){return[...new Set(e.map(n=>n.includes(":")?n.split(":")[0]:n))]}function Ft(e){const n={};return Object.keys(e).forEach(t=>{if(t.includes(":"))n[t]=e[t];else{const r=T(e[t].accounts);r?.forEach(o=>{n[o]={accounts:e[t].accounts.filter(s=>s.includes(`${o}:`)),methods:e[t].methods,events:e[t].events}})}}),n}function Ht(e,n){return F(e,!1)&&e<=n.max&&e>=n.min}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/filter-obj/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/filter-obj/index.js ***!
  \****************************************************************************************/
/***/ ((module) => {


module.exports = function (obj, predicate) {
	var ret = {};
	var keys = Object.keys(obj);
	var isArr = Array.isArray(predicate);

	for (var i = 0; i < keys.length; i++) {
		var key = keys[i];
		var val = obj[key];

		if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
			ret[key] = val;
		}
	}

	return ret;
};


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/query-string/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/query-string/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


const strictUriEncode = __webpack_require__(/*! strict-uri-encode */ "./node_modules/strict-uri-encode/index.js");
const decodeComponent = __webpack_require__(/*! decode-uri-component */ "./node_modules/decode-uri-component/index.js");
const splitOnFirst = __webpack_require__(/*! split-on-first */ "./node_modules/split-on-first/index.js");
const filterObject = __webpack_require__(/*! filter-obj */ "./node_modules/@walletconnect/ethereum-provider/node_modules/filter-obj/index.js");

const isNullOrUndefined = value => value === null || value === undefined;

const encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');

function encoderForArrayFormat(options) {
	switch (options.arrayFormat) {
		case 'index':
			return key => (result, value) => {
				const index = result.length;

				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[', index, ']'].join('')];
				}

				return [
					...result,
					[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')
				];
			};

		case 'bracket':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[]'].join('')];
				}

				return [...result, [encode(key, options), '[]=', encode(value, options)].join('')];
			};

		case 'colon-list-separator':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), ':list='].join('')];
				}

				return [...result, [encode(key, options), ':list=', encode(value, options)].join('')];
			};

		case 'comma':
		case 'separator':
		case 'bracket-separator': {
			const keyValueSep = options.arrayFormat === 'bracket-separator' ?
				'[]=' :
				'=';

			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				// Translate null to an empty string so that it doesn't serialize as 'null'
				value = value === null ? '' : value;

				if (result.length === 0) {
					return [[encode(key, options), keyValueSep, encode(value, options)].join('')];
				}

				return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
			};
		}

		default:
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, encode(key, options)];
				}

				return [...result, [encode(key, options), '=', encode(value, options)].join('')];
			};
	}
}

function parserForArrayFormat(options) {
	let result;

	switch (options.arrayFormat) {
		case 'index':
			return (key, value, accumulator) => {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return (key, value, accumulator) => {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'colon-list-separator':
			return (key, value, accumulator) => {
				result = /(:list)$/.exec(key);
				key = key.replace(/:list$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'comma':
		case 'separator':
			return (key, value, accumulator) => {
				const isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);
				const isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));
				value = isEncodedArray ? decode(value, options) : value;
				const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);
				accumulator[key] = newValue;
			};

		case 'bracket-separator':
			return (key, value, accumulator) => {
				const isArray = /(\[\])$/.test(key);
				key = key.replace(/\[\]$/, '');

				if (!isArray) {
					accumulator[key] = value ? decode(value, options) : value;
					return;
				}

				const arrayValue = value === null ?
					[] :
					value.split(options.arrayFormatSeparator).map(item => decode(item, options));

				if (accumulator[key] === undefined) {
					accumulator[key] = arrayValue;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], arrayValue);
			};

		default:
			return (key, value, accumulator) => {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function validateArrayFormatSeparator(value) {
	if (typeof value !== 'string' || value.length !== 1) {
		throw new TypeError('arrayFormatSeparator must be single character string');
	}
}

function encode(value, options) {
	if (options.encode) {
		return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function decode(value, options) {
	if (options.decode) {
		return decodeComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	}

	if (typeof input === 'object') {
		return keysSorter(Object.keys(input))
			.sort((a, b) => Number(a) - Number(b))
			.map(key => input[key]);
	}

	return input;
}

function removeHash(input) {
	const hashStart = input.indexOf('#');
	if (hashStart !== -1) {
		input = input.slice(0, hashStart);
	}

	return input;
}

function getHash(url) {
	let hash = '';
	const hashStart = url.indexOf('#');
	if (hashStart !== -1) {
		hash = url.slice(hashStart);
	}

	return hash;
}

function extract(input) {
	input = removeHash(input);
	const queryStart = input.indexOf('?');
	if (queryStart === -1) {
		return '';
	}

	return input.slice(queryStart + 1);
}

function parseValue(value, options) {
	if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {
		value = Number(value);
	} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
		value = value.toLowerCase() === 'true';
	}

	return value;
}

function parse(query, options) {
	options = Object.assign({
		decode: true,
		sort: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ',',
		parseNumbers: false,
		parseBooleans: false
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const formatter = parserForArrayFormat(options);

	// Create an object with no prototype
	const ret = Object.create(null);

	if (typeof query !== 'string') {
		return ret;
	}

	query = query.trim().replace(/^[?#&]/, '');

	if (!query) {
		return ret;
	}

	for (const param of query.split('&')) {
		if (param === '') {
			continue;
		}

		let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, ' ') : param, '=');

		// Missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		value = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);
		formatter(decode(key, options), value, ret);
	}

	for (const key of Object.keys(ret)) {
		const value = ret[key];
		if (typeof value === 'object' && value !== null) {
			for (const k of Object.keys(value)) {
				value[k] = parseValue(value[k], options);
			}
		} else {
			ret[key] = parseValue(value, options);
		}
	}

	if (options.sort === false) {
		return ret;
	}

	return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
		const value = ret[key];
		if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {
			// Sort object keys, not values
			result[key] = keysSorter(value);
		} else {
			result[key] = value;
		}

		return result;
	}, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = (object, options) => {
	if (!object) {
		return '';
	}

	options = Object.assign({
		encode: true,
		strict: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ','
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const shouldFilter = key => (
		(options.skipNull && isNullOrUndefined(object[key])) ||
		(options.skipEmptyString && object[key] === '')
	);

	const formatter = encoderForArrayFormat(options);

	const objectCopy = {};

	for (const key of Object.keys(object)) {
		if (!shouldFilter(key)) {
			objectCopy[key] = object[key];
		}
	}

	const keys = Object.keys(objectCopy);

	if (options.sort !== false) {
		keys.sort(options.sort);
	}

	return keys.map(key => {
		const value = object[key];

		if (value === undefined) {
			return '';
		}

		if (value === null) {
			return encode(key, options);
		}

		if (Array.isArray(value)) {
			if (value.length === 0 && options.arrayFormat === 'bracket-separator') {
				return encode(key, options) + '[]';
			}

			return value
				.reduce(formatter(key), [])
				.join('&');
		}

		return encode(key, options) + '=' + encode(value, options);
	}).filter(x => x.length > 0).join('&');
};

exports.parseUrl = (url, options) => {
	options = Object.assign({
		decode: true
	}, options);

	const [url_, hash] = splitOnFirst(url, '#');

	return Object.assign(
		{
			url: url_.split('?')[0] || '',
			query: parse(extract(url), options)
		},
		options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}
	);
};

exports.stringifyUrl = (object, options) => {
	options = Object.assign({
		encode: true,
		strict: true,
		[encodeFragmentIdentifier]: true
	}, options);

	const url = removeHash(object.url).split('?')[0] || '';
	const queryFromUrl = exports.extract(object.url);
	const parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});

	const query = Object.assign(parsedQueryFromUrl, object.query);
	let queryString = exports.stringify(query, options);
	if (queryString) {
		queryString = `?${queryString}`;
	}

	let hash = getHash(object.url);
	if (object.fragmentIdentifier) {
		hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
	}

	return `${url}${queryString}${hash}`;
};

exports.pick = (input, filter, options) => {
	options = Object.assign({
		parseFragmentIdentifier: true,
		[encodeFragmentIdentifier]: false
	}, options);

	const {url, query, fragmentIdentifier} = exports.parseUrl(input, options);
	return exports.stringifyUrl({
		url,
		query: filterObject(query, filter),
		fragmentIdentifier
	}, options);
};

exports.exclude = (input, filter, options) => {
	const exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);

	return exports.pick(input, exclusionFilter, options);
};


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HttpConnection: () => (/* binding */ HttpConnection),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ "./node_modules/cross-fetch/dist/browser-ponyfill.js");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/safe-json/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");




const DEFAULT_HTTP_HEADERS = {
    Accept: "application/json",
    "Content-Type": "application/json",
};
const DEFAULT_HTTP_METHOD = "POST";
const DEFAULT_FETCH_OPTS = {
    headers: DEFAULT_HTTP_HEADERS,
    method: DEFAULT_HTTP_METHOD,
};
const EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;
class HttpConnection {
    constructor(url, disableProviderPing = false) {
        this.url = url;
        this.disableProviderPing = disableProviderPing;
        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
        this.isAvailable = false;
        this.registering = false;
        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(url)) {
            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);
        }
        this.url = url;
        this.disableProviderPing = disableProviderPing;
    }
    get connected() {
        return this.isAvailable;
    }
    get connecting() {
        return this.registering;
    }
    on(event, listener) {
        this.events.on(event, listener);
    }
    once(event, listener) {
        this.events.once(event, listener);
    }
    off(event, listener) {
        this.events.off(event, listener);
    }
    removeListener(event, listener) {
        this.events.removeListener(event, listener);
    }
    async open(url = this.url) {
        await this.register(url);
    }
    async close() {
        if (!this.isAvailable) {
            throw new Error("Connection already closed");
        }
        this.onClose();
    }
    async send(payload, context) {
        if (!this.isAvailable) {
            await this.register();
        }
        try {
            const body = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(payload);
            const res = await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));
            const data = await res.json();
            this.onPayload({ data });
        }
        catch (e) {
            this.onError(payload.id, e);
        }
    }
    async register(url = this.url) {
        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(url)) {
            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);
        }
        if (this.registering) {
            const currentMaxListeners = this.events.getMaxListeners();
            if (this.events.listenerCount("register_error") >= currentMaxListeners ||
                this.events.listenerCount("open") >= currentMaxListeners) {
                this.events.setMaxListeners(currentMaxListeners + 1);
            }
            return new Promise((resolve, reject) => {
                this.events.once("register_error", error => {
                    this.resetMaxListeners();
                    reject(error);
                });
                this.events.once("open", () => {
                    this.resetMaxListeners();
                    if (typeof this.isAvailable === "undefined") {
                        return reject(new Error("HTTP connection is missing or invalid"));
                    }
                    resolve();
                });
            });
        }
        this.url = url;
        this.registering = true;
        try {
            if (!this.disableProviderPing) {
                const body = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({ id: 1, jsonrpc: "2.0", method: "test", params: [] });
                await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));
            }
            this.onOpen();
        }
        catch (e) {
            const error = this.parseError(e);
            this.events.emit("register_error", error);
            this.onClose();
            throw error;
        }
    }
    onOpen() {
        this.isAvailable = true;
        this.registering = false;
        this.events.emit("open");
    }
    onClose() {
        this.isAvailable = false;
        this.registering = false;
        this.events.emit("close");
    }
    onPayload(e) {
        if (typeof e.data === "undefined")
            return;
        const payload = typeof e.data === "string" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(e.data) : e.data;
        this.events.emit("payload", payload);
    }
    onError(id, e) {
        const error = this.parseError(e);
        const message = error.message || error.toString();
        const payload = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(id, message);
        this.events.emit("payload", payload);
    }
    parseError(e, url = this.url) {
        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(e, url, "HTTP");
    }
    resetMaxListeners() {
        if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {
            this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);
        }
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpConnection);
//# sourceMappingURL=http.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HttpConnection: () => (/* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_0__.HttpConnection),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http */ "./node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_http__WEBPACK_IMPORTED_MODULE_0__["default"]);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ ie),
/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ V),
/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ Ye),
/* harmony export */   HISTORY_EVENTS: () => (/* binding */ je),
/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ke),
/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ ee),
/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ Xe),
/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ se),
/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ ne),
/* harmony export */   SESSION_CONTEXT: () => (/* binding */ te),
/* harmony export */   SESSION_EXPIRY: () => (/* binding */ b),
/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ $),
/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ J),
/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ G),
/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ Ke),
/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ k),
/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ ze),
/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ C),
/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ X),
/* harmony export */   SignClient: () => (/* binding */ ts),
/* harmony export */   "default": () => (/* binding */ M)
/* harmony export */ });
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ "./node_modules/pino/browser.js");
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/core */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/core/dist/index.es.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/logger */ "./node_modules/@walletconnect/logger/dist/cjs/index.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/types */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js");
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
const k="wc",X=2,J="client",C=`${k}@${X}:${J}:`,G={name:J,logger:"error",controller:!1,relayUrl:"wss://relay.walletconnect.com"},Ke={session_proposal:"session_proposal",session_update:"session_update",session_extend:"session_extend",session_ping:"session_ping",session_delete:"session_delete",session_expire:"session_expire",session_request:"session_request",session_request_sent:"session_request_sent",session_event:"session_event",proposal_expire:"proposal_expire"},ze={database:":memory:"},je={created:"history_created",updated:"history_updated",deleted:"history_deleted",sync:"history_sync"},Ye="history",ke="0.3",ee="proposal",Xe=_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.THIRTY_DAYS,se="Proposal expired",te="session",b=_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.SEVEN_DAYS,ie="engine",V={wc_sessionPropose:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!0,tag:1100},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!1,tag:1101}},wc_sessionSettle:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!1,tag:1102},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!1,tag:1103}},wc_sessionUpdate:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.ONE_DAY,prompt:!1,tag:1104},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.ONE_DAY,prompt:!1,tag:1105}},wc_sessionExtend:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.ONE_DAY,prompt:!1,tag:1106},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.ONE_DAY,prompt:!1,tag:1107}},wc_sessionRequest:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!0,tag:1108},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!1,tag:1109}},wc_sessionEvent:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!0,tag:1110},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,prompt:!1,tag:1111}},wc_sessionDelete:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.ONE_DAY,prompt:!1,tag:1112},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.ONE_DAY,prompt:!1,tag:1113}},wc_sessionPing:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.THIRTY_SECONDS,prompt:!1,tag:1114},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.THIRTY_SECONDS,prompt:!1,tag:1115}}},$={min:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,max:_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.SEVEN_DAYS},ne="request";var Je=Object.defineProperty,He=Object.defineProperties,Fe=Object.getOwnPropertyDescriptors,oe=Object.getOwnPropertySymbols,Qe=Object.prototype.hasOwnProperty,Be=Object.prototype.propertyIsEnumerable,re=(d,n,e)=>n in d?Je(d,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[n]=e,u=(d,n)=>{for(var e in n||(n={}))Qe.call(n,e)&&re(d,e,n[e]);if(oe)for(var e of oe(n))Be.call(n,e)&&re(d,e,n[e]);return d},H=(d,n)=>He(d,Fe(n));class We extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_3__.IEngine{constructor(n){super(n),this.name=ie,this.events=new (events__WEBPACK_IMPORTED_MODULE_5___default()),this.initialized=!1,this.ignoredPayloadTypes=[_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.TYPE_1],this.init=async()=>{this.initialized||(await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.client.core.pairing.register({methods:Object.keys(V)}),this.initialized=!0)},this.connect=async e=>{this.isInitialized();const s=H(u({},e),{requiredNamespaces:e.requiredNamespaces||{},optionalNamespaces:e.optionalNamespaces||{}});await this.isValidConnect(s);const{pairingTopic:t,requiredNamespaces:i,optionalNamespaces:o,sessionProperties:a,relays:r}=s;let p=t,h,E=!1;if(p&&(E=this.client.core.pairing.pairings.get(p).active),!p||!E){const{topic:I,uri:g}=await this.client.core.pairing.create();p=I,h=g}const m=await this.client.core.crypto.generateKeyPair(),P=u({requiredNamespaces:i,optionalNamespaces:o,relays:r??[{protocol:_walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.RELAYER_DEFAULT_PROTOCOL}],proposer:{publicKey:m,metadata:this.client.metadata}},a&&{sessionProperties:a}),{reject:y,resolve:T,done:U}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.createDelayedPromise)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,se);if(this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_connect"),async({error:I,session:g})=>{if(I)y(I);else if(g){g.self.publicKey=m;const x=H(u({},g),{requiredNamespaces:g.requiredNamespaces,optionalNamespaces:g.optionalNamespaces});await this.client.session.set(g.topic,x),await this.setExpiry(g.topic,g.expiry),p&&await this.client.core.pairing.updateMetadata({topic:p,metadata:g.peer.metadata}),T(x)}}),!p){const{message:I}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("NO_MATCHING_KEY",`connect() pairing topic: ${p}`);throw new Error(I)}const L=await this.sendRequest(p,"wc_sessionPropose",P),K=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES);return await this.setProposal(L,u({id:L,expiry:K},P)),{uri:h,approval:U}},this.pair=async e=>(this.isInitialized(),await this.client.core.pairing.pair(e)),this.approve=async e=>{this.isInitialized(),await this.isValidApprove(e);const{id:s,relayProtocol:t,namespaces:i,sessionProperties:o}=e,a=this.client.proposal.get(s);let{pairingTopic:r,proposer:p,requiredNamespaces:h,optionalNamespaces:E}=a;r=r||"",(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidObject)(h)||(h=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getRequiredNamespacesFromNamespaces)(i,"approve()"));const m=await this.client.core.crypto.generateKeyPair(),P=p.publicKey,y=await this.client.core.crypto.generateSharedKey(m,P);r&&s&&(await this.client.core.pairing.updateMetadata({topic:r,metadata:p.metadata}),await this.sendResult(s,r,{relay:{protocol:t??"irn"},responderPublicKey:m}),await this.client.proposal.delete(s,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")),await this.client.core.pairing.activate({topic:r}));const T=u({relay:{protocol:t??"irn"},namespaces:i,requiredNamespaces:h,optionalNamespaces:E,pairingTopic:r,controller:{publicKey:m,metadata:this.client.metadata},expiry:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(b)},o&&{sessionProperties:o});await this.client.core.relayer.subscribe(y);const U=await this.sendRequest(y,"wc_sessionSettle",T),{done:L,resolve:K,reject:I}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.createDelayedPromise)();this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_approve",U),({error:x})=>{x?I(x):K(this.client.session.get(y))});const g=H(u({},T),{topic:y,pairingTopic:r,acknowledged:!1,self:T.controller,peer:{publicKey:p.publicKey,metadata:p.metadata},controller:m});return await this.client.session.set(y,g),await this.setExpiry(y,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(b)),{topic:y,acknowledged:L}},this.reject=async e=>{this.isInitialized(),await this.isValidReject(e);const{id:s,reason:t}=e,{pairingTopic:i}=this.client.proposal.get(s);i&&(await this.sendError(s,i,t),await this.client.proposal.delete(s,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")))},this.update=async e=>{this.isInitialized(),await this.isValidUpdate(e);const{topic:s,namespaces:t}=e,i=await this.sendRequest(s,"wc_sessionUpdate",{namespaces:t}),{done:o,resolve:a,reject:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.createDelayedPromise)();return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_update",i),({error:p})=>{p?r(p):a()}),await this.client.session.update(s,{namespaces:t}),{acknowledged:o}},this.extend=async e=>{this.isInitialized(),await this.isValidExtend(e);const{topic:s}=e,t=await this.sendRequest(s,"wc_sessionExtend",{}),{done:i,resolve:o,reject:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.createDelayedPromise)();return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_extend",t),({error:r})=>{r?a(r):o()}),await this.setExpiry(s,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(b)),{acknowledged:i}},this.request=async e=>{this.isInitialized(),await this.isValidRequest(e);const{chainId:s,request:t,topic:i,expiry:o}=e,a=await this.sendRequest(i,"wc_sessionRequest",{request:t,chainId:s},o),{done:r,resolve:p,reject:h}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.createDelayedPromise)(o);return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_request",a),({error:E,result:m})=>{E?h(E):p(m)}),this.client.events.emit("session_request_sent",{topic:i,request:t,chainId:s,id:a}),await r()},this.respond=async e=>{this.isInitialized(),await this.isValidRespond(e);const{topic:s,response:t}=e,{id:i}=t;(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(t)?await this.sendResult(i,s,t.result):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(t)&&await this.sendError(i,s,t.error),this.deletePendingSessionRequest(e.response.id,{message:"fulfilled",code:0})},this.ping=async e=>{this.isInitialized(),await this.isValidPing(e);const{topic:s}=e;if(this.client.session.keys.includes(s)){const t=await this.sendRequest(s,"wc_sessionPing",{}),{done:i,resolve:o,reject:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.createDelayedPromise)();this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_ping",t),({error:r})=>{r?a(r):o()}),await i()}else this.client.core.pairing.pairings.keys.includes(s)&&await this.client.core.pairing.ping({topic:s})},this.emit=async e=>{this.isInitialized(),await this.isValidEmit(e);const{topic:s,event:t,chainId:i}=e;await this.sendRequest(s,"wc_sessionEvent",{event:t,chainId:i})},this.disconnect=async e=>{this.isInitialized(),await this.isValidDisconnect(e);const{topic:s}=e;this.client.session.keys.includes(s)?(await this.sendRequest(s,"wc_sessionDelete",(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")),await this.deleteSession(s)):await this.client.core.pairing.disconnect({topic:s})},this.find=e=>(this.isInitialized(),this.client.session.getAll().filter(s=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isSessionCompatible)(s,e))),this.getPendingSessionRequests=()=>(this.isInitialized(),this.client.pendingRequest.getAll()),this.deleteSession=async(e,s)=>{const{self:t}=this.client.session.get(e);await this.client.core.relayer.unsubscribe(e),await Promise.all([this.client.session.delete(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")),this.client.core.crypto.deleteKeyPair(t.publicKey),this.client.core.crypto.deleteSymKey(e),s?Promise.resolve():this.client.core.expirer.del(e)])},this.deleteProposal=async(e,s)=>{await Promise.all([this.client.proposal.delete(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")),s?Promise.resolve():this.client.core.expirer.del(e)])},this.deletePendingSessionRequest=async(e,s,t=!1)=>{await Promise.all([this.client.pendingRequest.delete(e,s),t?Promise.resolve():this.client.core.expirer.del(e)])},this.setExpiry=async(e,s)=>{this.client.session.keys.includes(e)&&await this.client.session.update(e,{expiry:s}),this.client.core.expirer.set(e,s)},this.setProposal=async(e,s)=>{await this.client.proposal.set(e,s),this.client.core.expirer.set(e,s.expiry)},this.setPendingSessionRequest=async e=>{const s=V.wc_sessionRequest.req.ttl,{id:t,topic:i,params:o}=e;await this.client.pendingRequest.set(t,{id:t,topic:i,params:o}),s&&this.client.core.expirer.set(t,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(s))},this.sendRequest=async(e,s,t,i)=>{const o=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.formatJsonRpcRequest)(s,t),a=await this.client.core.crypto.encode(e,o),r=V[s].req;return i&&(r.ttl=i),this.client.core.history.set(e,o),this.client.core.relayer.publish(e,a,r),o.id},this.sendResult=async(e,s,t)=>{const i=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.formatJsonRpcResult)(e,t),o=await this.client.core.crypto.encode(s,i),a=await this.client.core.history.get(s,e),r=V[a.request.method].res;this.client.core.relayer.publish(s,o,r),await this.client.core.history.resolve(i)},this.sendError=async(e,s,t)=>{const i=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.formatJsonRpcError)(e,t),o=await this.client.core.crypto.encode(s,i),a=await this.client.core.history.get(s,e),r=V[a.request.method].res;this.client.core.relayer.publish(s,o,r),await this.client.core.history.resolve(i)},this.cleanup=async()=>{const e=[],s=[];this.client.session.getAll().forEach(t=>{(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isExpired)(t.expiry)&&e.push(t.topic)}),this.client.proposal.getAll().forEach(t=>{(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isExpired)(t.expiry)&&s.push(t.id)}),await Promise.all([...e.map(t=>this.deleteSession(t)),...s.map(t=>this.deleteProposal(t))])},this.onRelayEventRequest=e=>{const{topic:s,payload:t}=e,i=t.method;switch(i){case"wc_sessionPropose":return this.onSessionProposeRequest(s,t);case"wc_sessionSettle":return this.onSessionSettleRequest(s,t);case"wc_sessionUpdate":return this.onSessionUpdateRequest(s,t);case"wc_sessionExtend":return this.onSessionExtendRequest(s,t);case"wc_sessionPing":return this.onSessionPingRequest(s,t);case"wc_sessionDelete":return this.onSessionDeleteRequest(s,t);case"wc_sessionRequest":return this.onSessionRequest(s,t);case"wc_sessionEvent":return this.onSessionEventRequest(s,t);default:return this.client.logger.info(`Unsupported request method ${i}`)}},this.onRelayEventResponse=async e=>{const{topic:s,payload:t}=e,i=(await this.client.core.history.get(s,t.id)).request.method;switch(i){case"wc_sessionPropose":return this.onSessionProposeResponse(s,t);case"wc_sessionSettle":return this.onSessionSettleResponse(s,t);case"wc_sessionUpdate":return this.onSessionUpdateResponse(s,t);case"wc_sessionExtend":return this.onSessionExtendResponse(s,t);case"wc_sessionPing":return this.onSessionPingResponse(s,t);case"wc_sessionRequest":return this.onSessionRequestResponse(s,t);default:return this.client.logger.info(`Unsupported response method ${i}`)}},this.onSessionProposeRequest=async(e,s)=>{const{params:t,id:i}=s;try{this.isValidConnect(u({},s.params));const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES),a=u({id:i,pairingTopic:e,expiry:o},t);await this.setProposal(i,a),this.client.events.emit("session_proposal",{id:i,params:a})}catch(o){await this.sendError(i,e,o),this.client.logger.error(o)}},this.onSessionProposeResponse=async(e,s)=>{const{id:t}=s;if((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(s)){const{result:i}=s;this.client.logger.trace({type:"method",method:"onSessionProposeResponse",result:i});const o=this.client.proposal.get(t);this.client.logger.trace({type:"method",method:"onSessionProposeResponse",proposal:o});const a=o.proposer.publicKey;this.client.logger.trace({type:"method",method:"onSessionProposeResponse",selfPublicKey:a});const r=i.responderPublicKey;this.client.logger.trace({type:"method",method:"onSessionProposeResponse",peerPublicKey:r});const p=await this.client.core.crypto.generateSharedKey(a,r);this.client.logger.trace({type:"method",method:"onSessionProposeResponse",sessionTopic:p});const h=await this.client.core.relayer.subscribe(p);this.client.logger.trace({type:"method",method:"onSessionProposeResponse",subscriptionId:h}),await this.client.core.pairing.activate({topic:e})}else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(s)&&(await this.client.proposal.delete(t,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_connect"),{error:s.error}))},this.onSessionSettleRequest=async(e,s)=>{const{id:t,params:i}=s;try{this.isValidSessionSettleRequest(i);const{relay:o,controller:a,expiry:r,namespaces:p,requiredNamespaces:h,optionalNamespaces:E,sessionProperties:m,pairingTopic:P}=s.params,y=u({topic:e,relay:o,expiry:r,namespaces:p,acknowledged:!0,pairingTopic:P,requiredNamespaces:h,optionalNamespaces:E,controller:a.publicKey,self:{publicKey:"",metadata:this.client.metadata},peer:{publicKey:a.publicKey,metadata:a.metadata}},m&&{sessionProperties:m});await this.sendResult(s.id,e,!0),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_connect"),{session:y})}catch(o){await this.sendError(t,e,o),this.client.logger.error(o)}},this.onSessionSettleResponse=async(e,s)=>{const{id:t}=s;(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(s)?(await this.client.session.update(e,{acknowledged:!0}),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_approve",t),{})):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(s)&&(await this.client.session.delete(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)("USER_DISCONNECTED")),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_approve",t),{error:s.error}))},this.onSessionUpdateRequest=async(e,s)=>{const{params:t,id:i}=s;try{this.isValidUpdate(u({topic:e},t)),await this.client.session.update(e,{namespaces:t.namespaces}),await this.sendResult(i,e,!0),this.client.events.emit("session_update",{id:i,topic:e,params:t})}catch(o){await this.sendError(i,e,o),this.client.logger.error(o)}},this.onSessionUpdateResponse=(e,s)=>{const{id:t}=s;(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(s)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_update",t),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(s)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_update",t),{error:s.error})},this.onSessionExtendRequest=async(e,s)=>{const{id:t}=s;try{this.isValidExtend({topic:e}),await this.setExpiry(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.calcExpiry)(b)),await this.sendResult(t,e,!0),this.client.events.emit("session_extend",{id:t,topic:e})}catch(i){await this.sendError(t,e,i),this.client.logger.error(i)}},this.onSessionExtendResponse=(e,s)=>{const{id:t}=s;(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(s)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_extend",t),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(s)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_extend",t),{error:s.error})},this.onSessionPingRequest=async(e,s)=>{const{id:t}=s;try{this.isValidPing({topic:e}),await this.sendResult(t,e,!0),this.client.events.emit("session_ping",{id:t,topic:e})}catch(i){await this.sendError(t,e,i),this.client.logger.error(i)}},this.onSessionPingResponse=(e,s)=>{const{id:t}=s;setTimeout(()=>{(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(s)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_ping",t),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(s)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_ping",t),{error:s.error})},500)},this.onSessionDeleteRequest=async(e,s)=>{const{id:t}=s;try{this.isValidDisconnect({topic:e,reason:s.params}),this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.RELAYER_EVENTS.publish,async()=>{await this.deleteSession(e)}),await this.sendResult(t,e,!0),this.client.events.emit("session_delete",{id:t,topic:e})}catch(i){await this.sendError(t,e,i),this.client.logger.error(i)}},this.onSessionRequest=async(e,s)=>{const{id:t,params:i}=s;try{this.isValidRequest(u({topic:e},i)),await this.setPendingSessionRequest({id:t,topic:e,params:i}),this.client.events.emit("session_request",{id:t,topic:e,params:i})}catch(o){await this.sendError(t,e,o),this.client.logger.error(o)}},this.onSessionRequestResponse=(e,s)=>{const{id:t}=s;(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult)(s)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_request",t),{result:s.result}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError)(s)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.engineEvent)("session_request",t),{error:s.error})},this.onSessionEventRequest=async(e,s)=>{const{id:t,params:i}=s;try{this.isValidEmit(u({topic:e},i)),this.client.events.emit("session_event",{id:t,topic:e,params:i})}catch(o){await this.sendError(t,e,o),this.client.logger.error(o)}},this.isValidConnect=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`connect() params: ${JSON.stringify(e)}`);throw new Error(r)}const{pairingTopic:s,requiredNamespaces:t,optionalNamespaces:i,sessionProperties:o,relays:a}=e;if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(s)||await this.isValidPairingTopic(s),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidRelays)(a,!0)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`connect() relays: ${a}`);throw new Error(r)}!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(t)&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidObject)(t)!==0&&this.validateNamespaces(t,"requiredNamespaces"),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(i)&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidObject)(i)!==0&&this.validateNamespaces(i,"optionalNamespaces"),(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(o)||this.validateSessionProps(o,"sessionProperties")},this.validateNamespaces=(e,s)=>{const t=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidRequiredNamespaces)(e,"connect()",s);if(t)throw new Error(t.message)},this.isValidApprove=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e))throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`approve() params: ${e}`).message);const{id:s,namespaces:t,relayProtocol:i,sessionProperties:o}=e;await this.isValidProposalId(s);const a=this.client.proposal.get(s),r=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespaces)(t,"approve()");if(r)throw new Error(r.message);const p=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isConformingNamespaces)(a.requiredNamespaces,t,"approve()");if(p)throw new Error(p.message);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidString)(i,!0)){const{message:h}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`approve() relayProtocol: ${i}`);throw new Error(h)}(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(o)||this.validateSessionProps(o,"sessionProperties")},this.isValidReject=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`reject() params: ${e}`);throw new Error(i)}const{id:s,reason:t}=e;if(await this.isValidProposalId(s),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidErrorReason)(t)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`reject() reason: ${JSON.stringify(t)}`);throw new Error(i)}},this.isValidSessionSettleRequest=e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:p}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`onSessionSettleRequest() params: ${e}`);throw new Error(p)}const{relay:s,controller:t,namespaces:i,expiry:o}=e;if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidRelay)(s)){const{message:p}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID","onSessionSettleRequest() relay protocol should be a string");throw new Error(p)}const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidController)(t,"onSessionSettleRequest()");if(a)throw new Error(a.message);const r=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespaces)(i,"onSessionSettleRequest()");if(r)throw new Error(r.message);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isExpired)(o)){const{message:p}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("EXPIRED","onSessionSettleRequest()");throw new Error(p)}},this.isValidUpdate=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`update() params: ${e}`);throw new Error(r)}const{topic:s,namespaces:t}=e;await this.isValidSessionTopic(s);const i=this.client.session.get(s),o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespaces)(t,"update()");if(o)throw new Error(o.message);const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isConformingNamespaces)(i.requiredNamespaces,t,"update()");if(a)throw new Error(a.message)},this.isValidExtend=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`extend() params: ${e}`);throw new Error(t)}const{topic:s}=e;await this.isValidSessionTopic(s)},this.isValidRequest=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`request() params: ${e}`);throw new Error(r)}const{topic:s,request:t,chainId:i,expiry:o}=e;await this.isValidSessionTopic(s);const{namespaces:a}=this.client.session.get(s);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespacesChainId)(a,i)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`request() chainId: ${i}`);throw new Error(r)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidRequest)(t)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`request() ${JSON.stringify(t)}`);throw new Error(r)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespacesRequest)(a,i,t.method)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`request() method: ${t.method}`);throw new Error(r)}if(o&&!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidRequestExpiry)(o,$)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`request() expiry: ${o}. Expiry must be a number (in seconds) between ${$.min} and ${$.max}`);throw new Error(r)}},this.isValidRespond=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`respond() params: ${e}`);throw new Error(i)}const{topic:s,response:t}=e;if(await this.isValidSessionTopic(s),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidResponse)(t)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`respond() response: ${JSON.stringify(t)}`);throw new Error(i)}},this.isValidPing=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`ping() params: ${e}`);throw new Error(t)}const{topic:s}=e;await this.isValidSessionOrPairingTopic(s)},this.isValidEmit=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`emit() params: ${e}`);throw new Error(a)}const{topic:s,event:t,chainId:i}=e;await this.isValidSessionTopic(s);const{namespaces:o}=this.client.session.get(s);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespacesChainId)(o,i)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`emit() chainId: ${i}`);throw new Error(a)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidEvent)(t)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`emit() event: ${JSON.stringify(t)}`);throw new Error(a)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidNamespacesEvent)(o,i,t.name)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`emit() event: ${JSON.stringify(t)}`);throw new Error(a)}},this.isValidDisconnect=async e=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidParams)(e)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`disconnect() params: ${e}`);throw new Error(t)}const{topic:s}=e;await this.isValidSessionOrPairingTopic(s)},this.validateSessionProps=(e,s)=>{Object.values(e).forEach(t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidString)(t,!1)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);throw new Error(i)}})}}isInitialized(){if(!this.initialized){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(n)}}registerRelayerEvents(){this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.RELAYER_EVENTS.message,async n=>{const{topic:e,message:s}=n;if(this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s)))return;const t=await this.client.core.crypto.decode(e,s);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest)(t)?(this.client.core.history.set(e,t),this.onRelayEventRequest({topic:e,payload:t})):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse)(t)&&(await this.client.core.history.resolve(t),this.onRelayEventResponse({topic:e,payload:t}))})}registerExpirerEvents(){this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.EXPIRER_EVENTS.expired,async n=>{const{topic:e,id:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseExpirerTarget)(n.target);if(s&&this.client.pendingRequest.keys.includes(s))return await this.deletePendingSessionRequest(s,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("EXPIRED"),!0);e?this.client.session.keys.includes(e)&&(await this.deleteSession(e,!0),this.client.events.emit("session_expire",{topic:e})):s&&(await this.deleteProposal(s,!0),this.client.events.emit("proposal_expire",{id:s}))})}isValidPairingTopic(n){if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidString)(n,!1)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`pairing topic should be a string: ${n}`);throw new Error(e)}if(!this.client.core.pairing.pairings.keys.includes(n)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("NO_MATCHING_KEY",`pairing topic doesn't exist: ${n}`);throw new Error(e)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isExpired)(this.client.core.pairing.pairings.get(n).expiry)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("EXPIRED",`pairing topic: ${n}`);throw new Error(e)}}async isValidSessionTopic(n){if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidString)(n,!1)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`session topic should be a string: ${n}`);throw new Error(e)}if(!this.client.session.keys.includes(n)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("NO_MATCHING_KEY",`session topic doesn't exist: ${n}`);throw new Error(e)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isExpired)(this.client.session.get(n).expiry)){await this.deleteSession(n);const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("EXPIRED",`session topic: ${n}`);throw new Error(e)}}async isValidSessionOrPairingTopic(n){if(this.client.session.keys.includes(n))await this.isValidSessionTopic(n);else if(this.client.core.pairing.pairings.keys.includes(n))this.isValidPairingTopic(n);else if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidString)(n,!1)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("NO_MATCHING_KEY",`session or pairing topic doesn't exist: ${n}`);throw new Error(e)}else{const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`session or pairing topic should be a string: ${n}`);throw new Error(e)}}async isValidProposalId(n){if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidId)(n)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("MISSING_OR_INVALID",`proposal id should be a number: ${n}`);throw new Error(e)}if(!this.client.proposal.keys.includes(n)){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("NO_MATCHING_KEY",`proposal id doesn't exist: ${n}`);throw new Error(e)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isExpired)(this.client.proposal.get(n).expiry)){await this.deleteProposal(n);const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getInternalError)("EXPIRED",`proposal id: ${n}`);throw new Error(e)}}}class Ze extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.Store{constructor(n,e){super(n,e,ee,C),this.core=n,this.logger=e}}class es extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.Store{constructor(n,e){super(n,e,te,C),this.core=n,this.logger=e}}class ss extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.Store{constructor(n,e){super(n,e,ne,C,s=>s.id),this.core=n,this.logger=e}}class M extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_3__.ISignClient{constructor(n){super(n),this.protocol=k,this.version=X,this.name=G.name,this.events=new events__WEBPACK_IMPORTED_MODULE_5__.EventEmitter,this.on=(s,t)=>this.events.on(s,t),this.once=(s,t)=>this.events.once(s,t),this.off=(s,t)=>this.events.off(s,t),this.removeListener=(s,t)=>this.events.removeListener(s,t),this.removeAllListeners=s=>this.events.removeAllListeners(s),this.connect=async s=>{try{return await this.engine.connect(s)}catch(t){throw this.logger.error(t.message),t}},this.pair=async s=>{try{return await this.engine.pair(s)}catch(t){throw this.logger.error(t.message),t}},this.approve=async s=>{try{return await this.engine.approve(s)}catch(t){throw this.logger.error(t.message),t}},this.reject=async s=>{try{return await this.engine.reject(s)}catch(t){throw this.logger.error(t.message),t}},this.update=async s=>{try{return await this.engine.update(s)}catch(t){throw this.logger.error(t.message),t}},this.extend=async s=>{try{return await this.engine.extend(s)}catch(t){throw this.logger.error(t.message),t}},this.request=async s=>{try{return await this.engine.request(s)}catch(t){throw this.logger.error(t.message),t}},this.respond=async s=>{try{return await this.engine.respond(s)}catch(t){throw this.logger.error(t.message),t}},this.ping=async s=>{try{return await this.engine.ping(s)}catch(t){throw this.logger.error(t.message),t}},this.emit=async s=>{try{return await this.engine.emit(s)}catch(t){throw this.logger.error(t.message),t}},this.disconnect=async s=>{try{return await this.engine.disconnect(s)}catch(t){throw this.logger.error(t.message),t}},this.find=s=>{try{return this.engine.find(s)}catch(t){throw this.logger.error(t.message),t}},this.getPendingSessionRequests=()=>{try{return this.engine.getPendingSessionRequests()}catch(s){throw this.logger.error(s.message),s}},this.name=n?.name||G.name,this.metadata=n?.metadata||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getAppMetadata)();const e=typeof n?.logger<"u"&&typeof n?.logger!="string"?n.logger:pino__WEBPACK_IMPORTED_MODULE_0___default()((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__.getDefaultLoggerOptions)({level:n?.logger||G.logger}));this.core=n?.core||new _walletconnect_core__WEBPACK_IMPORTED_MODULE_1__.Core(n),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__.generateChildLogger)(e,this.name),this.session=new es(this.core,this.logger),this.proposal=new Ze(this.core,this.logger),this.pendingRequest=new ss(this.core,this.logger),this.engine=new We(this)}static async init(n){const e=new M(n);return await e.initialize(),e}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__.getLoggerContext)(this.logger)}get pairing(){return this.core.pairing.pairings}async initialize(){this.logger.trace("Initialized");try{await this.core.start(),await this.session.init(),await this.proposal.init(),await this.pendingRequest.init(),await this.engine.init(),this.logger.info("SignClient Initialization Success")}catch(n){throw this.logger.info("SignClient Initialization Failure"),this.logger.error(n.message),n}}}const ts=M;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/core/dist/index.es.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/core/dist/index.es.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CORE_CONTEXT: () => (/* binding */ G),
/* harmony export */   CORE_DEFAULT: () => (/* binding */ ke),
/* harmony export */   CORE_PROTOCOL: () => (/* binding */ ae),
/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ Be),
/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ T),
/* harmony export */   CORE_VERSION: () => (/* binding */ Ke),
/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ oe),
/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ je),
/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ Ve),
/* harmony export */   Core: () => (/* binding */ Dr),
/* harmony export */   Crypto: () => (/* binding */ pt),
/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ lt),
/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ Ws),
/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ m),
/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ dt),
/* harmony export */   Expirer: () => (/* binding */ Pt),
/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ ct),
/* harmony export */   HISTORY_EVENTS: () => (/* binding */ C),
/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ut),
/* harmony export */   JsonRpcHistory: () => (/* binding */ St),
/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ qe),
/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ Ge),
/* harmony export */   KeyChain: () => (/* binding */ gt),
/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ Ye),
/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ Je),
/* harmony export */   MessageTracker: () => (/* binding */ Dt),
/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ ot),
/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ Xs),
/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ N),
/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ ht),
/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ at),
/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ Xe),
/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ He),
/* harmony export */   Pairing: () => (/* binding */ Rt),
/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ Qe),
/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ Ze),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ We),
/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ he),
/* harmony export */   RELAYER_EVENTS: () => (/* binding */ D),
/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ M),
/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ tt),
/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ it),
/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ Js),
/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ et),
/* harmony export */   Relayer: () => (/* binding */ wt),
/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ st),
/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ rt),
/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ Hs),
/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ I),
/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ nt),
/* harmony export */   Store: () => (/* binding */ _t),
/* harmony export */   Subscriber: () => (/* binding */ mt),
/* harmony export */   "default": () => (/* binding */ Y)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pino */ "./node_modules/pino/browser.js");
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ "./node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/index.js");
/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/heartbeat */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/index.js");
/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/logger */ "./node_modules/@walletconnect/logger/dist/cjs/index.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/types */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js");
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/safe-json/dist/esm/index.js");
/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/relay-auth */ "./node_modules/@walletconnect/relay-auth/dist/esm/index.js");
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays */ "./node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js");
/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash.isequal */ "./node_modules/lodash.isequal/index.js");
/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_14__);
function Ci(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),i=0;i<t.length;i++)t[i]=255;for(var s=0;s<r.length;s++){var n=r.charAt(s),a=n.charCodeAt(0);if(t[a]!==255)throw new TypeError(n+" is ambiguous");t[a]=s}var o=r.length,h=r.charAt(0),d=Math.log(o)/Math.log(256),l=Math.log(256)/Math.log(o);function g(u){if(u instanceof Uint8Array||(ArrayBuffer.isView(u)?u=new Uint8Array(u.buffer,u.byteOffset,u.byteLength):Array.isArray(u)&&(u=Uint8Array.from(u))),!(u instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(u.length===0)return"";for(var y=0,O=0,E=0,_=u.length;E!==_&&u[E]===0;)E++,y++;for(var R=(_-E)*l+1>>>0,b=new Uint8Array(R);E!==_;){for(var S=u[E],x=0,f=R-1;(S!==0||x<O)&&f!==-1;f--,x++)S+=256*b[f]>>>0,b[f]=S%o>>>0,S=S/o>>>0;if(S!==0)throw new Error("Non-zero carry");O=x,E++}for(var P=R-O;P!==R&&b[P]===0;)P++;for(var K=h.repeat(y);P<R;++P)K+=r.charAt(b[P]);return K}function U(u){if(typeof u!="string")throw new TypeError("Expected String");if(u.length===0)return new Uint8Array;var y=0;if(u[y]!==" "){for(var O=0,E=0;u[y]===h;)O++,y++;for(var _=(u.length-y)*d+1>>>0,R=new Uint8Array(_);u[y];){var b=t[u.charCodeAt(y)];if(b===255)return;for(var S=0,x=_-1;(b!==0||S<E)&&x!==-1;x--,S++)b+=o*R[x]>>>0,R[x]=b%256>>>0,b=b/256>>>0;if(b!==0)throw new Error("Non-zero carry");E=S,y++}if(u[y]!==" "){for(var f=_-E;f!==_&&R[f]===0;)f++;for(var P=new Uint8Array(O+(_-f)),K=O;f!==_;)P[K++]=R[f++];return P}}}function J(u){var y=U(u);if(y)return y;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:U,decode:J}}var _i=Ci,Ri=_i;const Ce=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},Si=r=>new TextEncoder().encode(r),Pi=r=>new TextDecoder().decode(r);class Ti{constructor(e,t,i){this.name=e,this.prefix=t,this.baseEncode=i}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class xi{constructor(e,t,i){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=i}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return _e(this,e)}}class Oi{constructor(e){this.decoders=e}or(e){return _e(this,e)}decode(e){const t=e[0],i=this.decoders[t];if(i)return i.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const _e=(r,e)=>new Oi({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});class Ai{constructor(e,t,i,s){this.name=e,this.prefix=t,this.baseEncode=i,this.baseDecode=s,this.encoder=new Ti(e,t,i),this.decoder=new xi(e,t,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const q=({name:r,prefix:e,encode:t,decode:i})=>new Ai(r,e,t,i),F=({prefix:r,name:e,alphabet:t})=>{const{encode:i,decode:s}=Ri(t,e);return q({prefix:r,name:e,encode:i,decode:n=>Ce(s(n))})},zi=(r,e,t,i)=>{const s={};for(let l=0;l<e.length;++l)s[e[l]]=l;let n=r.length;for(;r[n-1]==="=";)--n;const a=new Uint8Array(n*t/8|0);let o=0,h=0,d=0;for(let l=0;l<n;++l){const g=s[r[l]];if(g===void 0)throw new SyntaxError(`Non-${i} character`);h=h<<t|g,o+=t,o>=8&&(o-=8,a[d++]=255&h>>o)}if(o>=t||255&h<<8-o)throw new SyntaxError("Unexpected end of data");return a},Ni=(r,e,t)=>{const i=e[e.length-1]==="=",s=(1<<t)-1;let n="",a=0,o=0;for(let h=0;h<r.length;++h)for(o=o<<8|r[h],a+=8;a>t;)a-=t,n+=e[s&o>>a];if(a&&(n+=e[s&o<<t-a]),i)for(;n.length*t&7;)n+="=";return n},p=({name:r,prefix:e,bitsPerChar:t,alphabet:i})=>q({prefix:e,name:r,encode(s){return Ni(s,i,t)},decode(s){return zi(s,i,t,r)}}),Ui=q({prefix:"\0",name:"identity",encode:r=>Pi(r),decode:r=>Si(r)});var Li=Object.freeze({__proto__:null,identity:Ui});const Fi=p({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Mi=Object.freeze({__proto__:null,base2:Fi});const $i=p({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Ki=Object.freeze({__proto__:null,base8:$i});const ki=F({prefix:"9",name:"base10",alphabet:"0123456789"});var Bi=Object.freeze({__proto__:null,base10:ki});const ji=p({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Vi=p({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var qi=Object.freeze({__proto__:null,base16:ji,base16upper:Vi});const Gi=p({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Yi=p({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Ji=p({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Hi=p({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Xi=p({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Wi=p({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Zi=p({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Qi=p({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),es=p({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var ts=Object.freeze({__proto__:null,base32:Gi,base32upper:Yi,base32pad:Ji,base32padupper:Hi,base32hex:Xi,base32hexupper:Wi,base32hexpad:Zi,base32hexpadupper:Qi,base32z:es});const is=F({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),ss=F({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var rs=Object.freeze({__proto__:null,base36:is,base36upper:ss});const ns=F({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),as=F({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var os=Object.freeze({__proto__:null,base58btc:ns,base58flickr:as});const hs=p({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),cs=p({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),us=p({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),ls=p({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var ds=Object.freeze({__proto__:null,base64:hs,base64pad:cs,base64url:us,base64urlpad:ls});const Re=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),gs=Re.reduce((r,e,t)=>(r[t]=e,r),[]),ps=Re.reduce((r,e,t)=>(r[e.codePointAt(0)]=t,r),[]);function Ds(r){return r.reduce((e,t)=>(e+=gs[t],e),"")}function ys(r){const e=[];for(const t of r){const i=ps[t.codePointAt(0)];if(i===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(i)}return new Uint8Array(e)}const bs=q({prefix:"\u{1F680}",name:"base256emoji",encode:Ds,decode:ys});var ms=Object.freeze({__proto__:null,base256emoji:bs}),Es=Pe,Se=128,fs=127,ws=~fs,vs=Math.pow(2,31);function Pe(r,e,t){e=e||[],t=t||0;for(var i=t;r>=vs;)e[t++]=r&255|Se,r/=128;for(;r&ws;)e[t++]=r&255|Se,r>>>=7;return e[t]=r|0,Pe.bytes=t-i+1,e}var Is=se,Cs=128,Te=127;function se(r,i){var t=0,i=i||0,s=0,n=i,a,o=r.length;do{if(n>=o)throw se.bytes=0,new RangeError("Could not decode varint");a=r[n++],t+=s<28?(a&Te)<<s:(a&Te)*Math.pow(2,s),s+=7}while(a>=Cs);return se.bytes=n-i,t}var _s=Math.pow(2,7),Rs=Math.pow(2,14),Ss=Math.pow(2,21),Ps=Math.pow(2,28),Ts=Math.pow(2,35),xs=Math.pow(2,42),Os=Math.pow(2,49),As=Math.pow(2,56),zs=Math.pow(2,63),Ns=function(r){return r<_s?1:r<Rs?2:r<Ss?3:r<Ps?4:r<Ts?5:r<xs?6:r<Os?7:r<As?8:r<zs?9:10},Us={encode:Es,decode:Is,encodingLength:Ns},xe=Us;const Oe=(r,e,t=0)=>(xe.encode(r,e,t),e),Ae=r=>xe.encodingLength(r),re=(r,e)=>{const t=e.byteLength,i=Ae(r),s=i+Ae(t),n=new Uint8Array(s+t);return Oe(r,n,0),Oe(t,n,i),n.set(e,s),new Ls(r,t,e,n)};class Ls{constructor(e,t,i,s){this.code=e,this.size=t,this.digest=i,this.bytes=s}}const ze=({name:r,code:e,encode:t})=>new Fs(r,e,t);class Fs{constructor(e,t,i){this.name=e,this.code=t,this.encode=i}digest(e){if(e instanceof Uint8Array){const t=this.encode(e);return t instanceof Uint8Array?re(this.code,t):t.then(i=>re(this.code,i))}else throw Error("Unknown type, must be binary type")}}const Ne=r=>async e=>new Uint8Array(await crypto.subtle.digest(r,e)),Ms=ze({name:"sha2-256",code:18,encode:Ne("SHA-256")}),$s=ze({name:"sha2-512",code:19,encode:Ne("SHA-512")});var Ks=Object.freeze({__proto__:null,sha256:Ms,sha512:$s});const Ue=0,ks="identity",Le=Ce,Bs=r=>re(Ue,Le(r)),js={code:Ue,name:ks,encode:Le,digest:Bs};var Vs=Object.freeze({__proto__:null,identity:js});new TextEncoder,new TextDecoder;const Fe={...Li,...Mi,...Ki,...Bi,...qi,...ts,...rs,...os,...ds,...ms};({...Ks,...Vs});function qs(r=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(r):new Uint8Array(r)}function Me(r,e,t,i){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:i}}}const $e=Me("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),ne=Me("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);const e=qs(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),Gs={utf8:$e,"utf-8":$e,hex:Fe.base16,latin1:ne,ascii:ne,binary:ne,...Fe};function Ys(r,e="utf8"){const t=Gs[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(r,"utf8"):t.decoder.decode(`${t.prefix}${r}`)}const ae="wc",Ke=2,G="core",T=`${ae}@${2}:${G}:`,ke={name:G,logger:"error"},Be={database:":memory:"},je="crypto",oe="client_ed25519_seed",Ve=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_DAY,qe="keychain",Ge="0.3",Ye="messages",Je="0.3",He=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.SIX_HOURS,Xe="publisher",We="irn",Ze="error",he="wss://relay.walletconnect.com",Qe="relayer",D={message:"relayer_message",connect:"relayer_connect",disconnect:"relayer_disconnect",error:"relayer_error",connection_stalled:"relayer_connection_stalled",transport_closed:"relayer_transport_closed",publish:"relayer_publish"},et="_subscription",M={payload:"payload",connect:"connect",disconnect:"disconnect",error:"error"},tt=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_SECOND,Js={database:":memory:"},it="2.6.0",st="0.3",I={created:"subscription_created",deleted:"subscription_deleted",expired:"subscription_expired",disabled:"subscription_disabled",sync:"subscription_sync",resubscribed:"subscription_resubscribed"},Hs=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.THIRTY_DAYS,rt="subscription",nt="0.3",at=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.FIVE_SECONDS*1e3,ot="pairing",ht="0.3",Xs=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.THIRTY_DAYS,N={wc_pairingDelete:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_DAY,prompt:!1,tag:1e3},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_DAY,prompt:!1,tag:1001}},wc_pairingPing:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.THIRTY_SECONDS,prompt:!1,tag:1002},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.THIRTY_SECONDS,prompt:!1,tag:1003}},unregistered_method:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_DAY,prompt:!1,tag:0},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_DAY,prompt:!1,tag:0}}},C={created:"history_created",updated:"history_updated",deleted:"history_deleted",sync:"history_sync"},ct="history",ut="0.3",lt="expirer",m={created:"expirer_created",deleted:"expirer_deleted",expired:"expirer_expired",sync:"expirer_sync"},dt="0.3",Ws=_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.ONE_DAY;class gt{constructor(e,t){this.core=e,this.logger=t,this.keychain=new Map,this.name=qe,this.version=Ge,this.initialized=!1,this.storagePrefix=T,this.init=async()=>{if(!this.initialized){const i=await this.getKeyChain();typeof i<"u"&&(this.keychain=i),this.initialized=!0}},this.has=i=>(this.isInitialized(),this.keychain.has(i)),this.set=async(i,s)=>{this.isInitialized(),this.keychain.set(i,s),await this.persist()},this.get=i=>{this.isInitialized();const s=this.keychain.get(i);if(typeof s>"u"){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${i}`);throw new Error(n)}return s},this.del=async i=>{this.isInitialized(),this.keychain.delete(i),await this.persist()},this.core=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+"//"+this.name}async setKeyChain(e){await this.core.storage.setItem(this.storageKey,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.mapToObj)(e))}async getKeyChain(){const e=await this.core.storage.getItem(this.storageKey);return typeof e<"u"?(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.objToMap)(e):void 0}async persist(){await this.setKeyChain(this.keychain)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}class pt{constructor(e,t,i){this.core=e,this.logger=t,this.name=je,this.initialized=!1,this.init=async()=>{this.initialized||(await this.keychain.init(),this.initialized=!0)},this.hasKeys=s=>(this.isInitialized(),this.keychain.has(s)),this.getClientId=async()=>{this.isInitialized();const s=await this.getClientSeed(),n=_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.generateKeyPair(s);return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.encodeIss(n.publicKey)},this.generateKeyPair=()=>{this.isInitialized();const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateKeyPair)();return this.setPrivateKey(s.publicKey,s.privateKey)},this.signJWT=async s=>{this.isInitialized();const n=await this.getClientSeed(),a=_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.generateKeyPair(n),o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateRandomBytes32)(),h=Ve;return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.signJWT(o,s,h,a)},this.generateSharedKey=(s,n,a)=>{this.isInitialized();const o=this.getPrivateKey(s),h=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.deriveSymKey)(o,n);return this.setSymKey(h,a)},this.setSymKey=async(s,n)=>{this.isInitialized();const a=n||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashKey)(s);return await this.keychain.set(a,s),a},this.deleteKeyPair=async s=>{this.isInitialized(),await this.keychain.del(s)},this.deleteSymKey=async s=>{this.isInitialized(),await this.keychain.del(s)},this.encode=async(s,n,a)=>{this.isInitialized();const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.validateEncoding)(a),h=(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__.safeJsonStringify)(n);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTypeOneEnvelope)(o)){const U=o.senderPublicKey,J=o.receiverPublicKey;s=await this.generateSharedKey(U,J)}const d=this.getSymKey(s),{type:l,senderPublicKey:g}=o;return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.encrypt)({type:l,symKey:d,message:h,senderPublicKey:g})},this.decode=async(s,n,a)=>{this.isInitialized();const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.validateDecoding)(n,a);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTypeOneEnvelope)(o)){const l=o.receiverPublicKey,g=o.senderPublicKey;s=await this.generateSharedKey(l,g)}const h=this.getSymKey(s),d=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.decrypt)({symKey:h,encoded:n});return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__.safeJsonParse)(d)},this.getPayloadType=s=>{const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.deserialize)(s);return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.decodeTypeByte)(n.type)},this.getPayloadSenderPublicKey=s=>{const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.deserialize)(s);return n.senderPublicKey?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(n.senderPublicKey,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.BASE16):void 0},this.core=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name),this.keychain=i||new gt(this.core,this.logger)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}async setPrivateKey(e,t){return await this.keychain.set(e,t),e}getPrivateKey(e){return this.keychain.get(e)}async getClientSeed(){let e="";try{e=this.keychain.get(oe)}catch{e=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateRandomBytes32)(),await this.keychain.set(oe,e)}return Ys(e,"base16")}getSymKey(e){return this.keychain.get(e)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}class Dt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.IMessageTracker{constructor(e,t){super(e,t),this.logger=e,this.core=t,this.messages=new Map,this.name=Ye,this.version=Je,this.initialized=!1,this.storagePrefix=T,this.init=async()=>{if(!this.initialized){this.logger.trace("Initialized");try{const i=await this.getRelayerMessages();typeof i<"u"&&(this.messages=i),this.logger.debug(`Successfully Restored records for ${this.name}`),this.logger.trace({type:"method",method:"restore",size:this.messages.size})}catch(i){this.logger.debug(`Failed to Restore records for ${this.name}`),this.logger.error(i)}finally{this.initialized=!0}}},this.set=async(i,s)=>{this.isInitialized();const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(s);let a=this.messages.get(i);return typeof a>"u"&&(a={}),typeof a[n]<"u"||(a[n]=s,this.messages.set(i,a),await this.persist()),n},this.get=i=>{this.isInitialized();let s=this.messages.get(i);return typeof s>"u"&&(s={}),s},this.has=(i,s)=>{this.isInitialized();const n=this.get(i),a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(s);return typeof n[a]<"u"},this.del=async i=>{this.isInitialized(),this.messages.delete(i),await this.persist()},this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(e,this.name),this.core=t}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+"//"+this.name}async setRelayerMessages(e){await this.core.storage.setItem(this.storageKey,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.mapToObj)(e))}async getRelayerMessages(){const e=await this.core.storage.getItem(this.storageKey);return typeof e<"u"?(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.objToMap)(e):void 0}async persist(){await this.setRelayerMessages(this.messages)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}class Zs extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.IPublisher{constructor(e,t){super(e,t),this.relayer=e,this.logger=t,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.name=Xe,this.queue=new Map,this.publishTimeout=1e4,this.publish=async(i,s,n)=>{this.logger.debug("Publishing Payload"),this.logger.trace({type:"method",method:"publish",params:{topic:i,message:s,opts:n}});try{const a=n?.ttl||He,o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)(n),h=n?.prompt||!1,d=n?.tag||0,l={topic:i,message:s,opts:{ttl:a,relay:o,prompt:h,tag:d}},g=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(s);this.queue.set(g,l);try{await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(this.rpcPublish(i,s,a,o,h,d),this.publishTimeout),this.relayer.events.emit(D.publish,l)}catch{this.logger.debug("Publishing Payload stalled"),this.relayer.events.emit(D.connection_stalled);return}this.onPublish(g,l),this.logger.debug("Successfully Published Payload"),this.logger.trace({type:"method",method:"publish",params:{topic:i,message:s,opts:n}})}catch(a){throw this.logger.debug("Failed to Publish Payload"),this.logger.error(a),a}},this.on=(i,s)=>{this.events.on(i,s)},this.once=(i,s)=>{this.events.once(i,s)},this.off=(i,s)=>{this.events.off(i,s)},this.removeListener=(i,s)=>{this.events.removeListener(i,s)},this.relayer=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name),this.registerEventListeners()}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}rpcPublish(e,t,i,s,n,a){var o,h,d,l;const g={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(s.protocol).publish,params:{topic:e,message:t,ttl:i,prompt:n,tag:a}};return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)((o=g.params)==null?void 0:o.prompt)&&((h=g.params)==null||delete h.prompt),(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)((d=g.params)==null?void 0:d.tag)&&((l=g.params)==null||delete l.tag),this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"message",direction:"outgoing",request:g}),this.relayer.request(g)}onPublish(e,t){this.queue.delete(e)}checkQueue(){this.queue.forEach(async e=>{const{topic:t,message:i,opts:s}=e;await this.publish(t,i,s)})}registerEventListeners(){this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3__.HEARTBEAT_EVENTS.pulse,()=>{this.checkQueue()})}}class Qs{constructor(){this.map=new Map,this.set=(e,t)=>{const i=this.get(e);this.exists(e,t)||this.map.set(e,[...i,t])},this.get=e=>this.map.get(e)||[],this.exists=(e,t)=>this.get(e).includes(t),this.delete=(e,t)=>{if(typeof t>"u"){this.map.delete(e);return}if(!this.map.has(e))return;const i=this.get(e);if(!this.exists(e,t))return;const s=i.filter(n=>n!==t);if(!s.length){this.map.delete(e);return}this.map.set(e,s)},this.clear=()=>{this.map.clear()}}get topics(){return Array.from(this.map.keys())}}var er=Object.defineProperty,tr=Object.defineProperties,ir=Object.getOwnPropertyDescriptors,yt=Object.getOwnPropertySymbols,sr=Object.prototype.hasOwnProperty,rr=Object.prototype.propertyIsEnumerable,bt=(r,e,t)=>e in r?er(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,$=(r,e)=>{for(var t in e||(e={}))sr.call(e,t)&&bt(r,t,e[t]);if(yt)for(var t of yt(e))rr.call(e,t)&&bt(r,t,e[t]);return r},ce=(r,e)=>tr(r,ir(e));class mt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.ISubscriber{constructor(e,t){super(e,t),this.relayer=e,this.logger=t,this.subscriptions=new Map,this.topicMap=new Qs,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.name=rt,this.version=nt,this.pending=new Map,this.cached=[],this.initialized=!1,this.pendingSubscriptionWatchLabel="pending_sub_watch_label",this.pollingInterval=20,this.storagePrefix=T,this.subscribeTimeout=1e4,this.restartInProgress=!1,this.batchSubscribeTopicsLimit=500,this.init=async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restart(),this.registerEventListeners(),this.onEnable(),this.clientId=await this.relayer.core.crypto.getClientId())},this.subscribe=async(i,s)=>{await this.restartToComplete(),this.isInitialized(),this.logger.debug("Subscribing Topic"),this.logger.trace({type:"method",method:"subscribe",params:{topic:i,opts:s}});try{const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)(s),a={topic:i,relay:n};this.pending.set(i,a);const o=await this.rpcSubscribe(i,n);return this.onSubscribe(o,a),this.logger.debug("Successfully Subscribed Topic"),this.logger.trace({type:"method",method:"subscribe",params:{topic:i,opts:s}}),o}catch(n){throw this.logger.debug("Failed to Subscribe Topic"),this.logger.error(n),n}},this.unsubscribe=async(i,s)=>{await this.restartToComplete(),this.isInitialized(),typeof s?.id<"u"?await this.unsubscribeById(i,s.id,s):await this.unsubscribeByTopic(i,s)},this.isSubscribed=async i=>this.topics.includes(i)?!0:await new Promise((s,n)=>{const a=new _walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.Watch;a.start(this.pendingSubscriptionWatchLabel);const o=setInterval(()=>{!this.pending.has(i)&&this.topics.includes(i)&&(clearInterval(o),a.stop(this.pendingSubscriptionWatchLabel),s(!0)),a.elapsed(this.pendingSubscriptionWatchLabel)>=at&&(clearInterval(o),a.stop(this.pendingSubscriptionWatchLabel),n(!1))},this.pollingInterval)}),this.on=(i,s)=>{this.events.on(i,s)},this.once=(i,s)=>{this.events.once(i,s)},this.off=(i,s)=>{this.events.off(i,s)},this.removeListener=(i,s)=>{this.events.removeListener(i,s)},this.restart=async()=>{this.restartInProgress=!0,await this.restore(),await this.reset(),this.restartInProgress=!1},this.relayer=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name),this.clientId=""}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+"//"+this.name}get length(){return this.subscriptions.size}get ids(){return Array.from(this.subscriptions.keys())}get values(){return Array.from(this.subscriptions.values())}get topics(){return this.topicMap.topics}hasSubscription(e,t){let i=!1;try{i=this.getSubscription(e).topic===t}catch{}return i}onEnable(){this.cached=[],this.initialized=!0}onDisable(){this.cached=this.values,this.subscriptions.clear(),this.topicMap.clear()}async unsubscribeByTopic(e,t){const i=this.topicMap.get(e);await Promise.all(i.map(async s=>await this.unsubscribeById(e,s,t)))}async unsubscribeById(e,t,i){this.logger.debug("Unsubscribing Topic"),this.logger.trace({type:"method",method:"unsubscribe",params:{topic:e,id:t,opts:i}});try{const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)(i);await this.rpcUnsubscribe(e,t,s);const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("USER_DISCONNECTED",`${this.name}, ${e}`);await this.onUnsubscribe(e,t,n),this.logger.debug("Successfully Unsubscribed Topic"),this.logger.trace({type:"method",method:"unsubscribe",params:{topic:e,id:t,opts:i}})}catch(s){throw this.logger.debug("Failed to Unsubscribe Topic"),this.logger.error(s),s}}async rpcSubscribe(e,t){const i={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(t.protocol).subscribe,params:{topic:e}};this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:i});try{await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(this.relayer.request(i),this.subscribeTimeout)}catch{this.logger.debug("Outgoing Relay Subscribe Payload stalled"),this.relayer.events.emit(D.connection_stalled)}return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(e+this.clientId)}async rpcBatchSubscribe(e){if(!e.length)return;const t=e[0].relay,i={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(t.protocol).batchSubscribe,params:{topics:e.map(s=>s.topic)}};this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:i});try{return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(this.relayer.request(i),this.subscribeTimeout)}catch{this.logger.debug("Outgoing Relay Payload stalled"),this.relayer.events.emit(D.connection_stalled)}}rpcUnsubscribe(e,t,i){const s={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(i.protocol).unsubscribe,params:{topic:e,id:t}};return this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:s}),this.relayer.request(s)}onSubscribe(e,t){this.setSubscription(e,ce($({},t),{id:e})),this.pending.delete(t.topic)}onBatchSubscribe(e){e.length&&e.forEach(t=>{this.setSubscription(t.id,$({},t)),this.pending.delete(t.topic)})}async onUnsubscribe(e,t,i){this.events.removeAllListeners(t),this.hasSubscription(t,e)&&this.deleteSubscription(t,i),await this.relayer.messages.del(e)}async setRelayerSubscriptions(e){await this.relayer.core.storage.setItem(this.storageKey,e)}async getRelayerSubscriptions(){return await this.relayer.core.storage.getItem(this.storageKey)}setSubscription(e,t){this.subscriptions.has(e)||(this.logger.debug("Setting subscription"),this.logger.trace({type:"method",method:"setSubscription",id:e,subscription:t}),this.addSubscription(e,t))}addSubscription(e,t){this.subscriptions.set(e,$({},t)),this.topicMap.set(t.topic,e),this.events.emit(I.created,t)}getSubscription(e){this.logger.debug("Getting subscription"),this.logger.trace({type:"method",method:"getSubscription",id:e});const t=this.subscriptions.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw new Error(i)}return t}deleteSubscription(e,t){this.logger.debug("Deleting subscription"),this.logger.trace({type:"method",method:"deleteSubscription",id:e,reason:t});const i=this.getSubscription(e);this.subscriptions.delete(e),this.topicMap.delete(i.topic,e),this.events.emit(I.deleted,ce($({},i),{reason:t}))}async persist(){await this.setRelayerSubscriptions(this.values),this.events.emit(I.sync)}async reset(){if(!this.cached.length)return;const e=Math.ceil(this.cached.length/this.batchSubscribeTopicsLimit);for(let t=0;t<e;t++){const i=this.cached.splice(0,this.batchSubscribeTopicsLimit);await this.batchSubscribe(i)}this.events.emit(I.resubscribed)}async restore(){try{const e=await this.getRelayerSubscriptions();if(typeof e>"u"||!e.length)return;if(this.subscriptions.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored subscriptions for ${this.name}`),this.logger.trace({type:"method",method:"restore",subscriptions:this.values})}catch(e){this.logger.debug(`Failed to Restore subscriptions for ${this.name}`),this.logger.error(e)}}async batchSubscribe(e){if(!e.length)return;const t=await this.rpcBatchSubscribe(e);(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidArray)(t)&&this.onBatchSubscribe(t.map((i,s)=>ce($({},e[s]),{id:i})))}async onConnect(){this.restartInProgress||(await this.restart(),this.onEnable())}onDisconnect(){this.onDisable()}async checkPending(){if(this.relayer.transportExplicitlyClosed)return;const e=[];this.pending.forEach(t=>{e.push(t)}),await this.batchSubscribe(e)}registerEventListeners(){this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3__.HEARTBEAT_EVENTS.pulse,async()=>{await this.checkPending()}),this.relayer.on(D.connect,async()=>{await this.onConnect()}),this.relayer.on(D.disconnect,()=>{this.onDisconnect()}),this.events.on(I.created,async e=>{const t=I.created;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),await this.persist()}),this.events.on(I.deleted,async e=>{const t=I.deleted;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),await this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}async restartToComplete(){this.restartInProgress&&await new Promise(e=>{const t=setInterval(()=>{this.restartInProgress||(clearInterval(t),e())},this.pollingInterval)})}}var nr=Object.defineProperty,Et=Object.getOwnPropertySymbols,ar=Object.prototype.hasOwnProperty,or=Object.prototype.propertyIsEnumerable,ft=(r,e,t)=>e in r?nr(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,hr=(r,e)=>{for(var t in e||(e={}))ar.call(e,t)&&ft(r,t,e[t]);if(Et)for(var t of Et(e))or.call(e,t)&&ft(r,t,e[t]);return r};class wt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.IRelayer{constructor(e){super(e),this.protocol="wc",this.version=2,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.name=Qe,this.transportExplicitlyClosed=!1,this.initialized=!1,this.reconnecting=!1,this.connectionStatusPollingInterval=20,this.staleConnectionErrors=["socket hang up","socket stalled"],this.request=async t=>{this.logger.debug("Publishing Request Payload");try{return await this.toEstablishConnection(),await this.provider.request(t)}catch(i){throw this.logger.debug("Failed to Publish Request"),this.logger.error(i),i}},this.core=e.core,this.logger=typeof e.logger<"u"&&typeof e.logger!="string"?(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(e.logger,this.name):pino__WEBPACK_IMPORTED_MODULE_1___default()((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getDefaultLoggerOptions)({level:e.logger||Ze})),this.messages=new Dt(this.logger,e.core),this.subscriber=new mt(this,this.logger),this.publisher=new Zs(this,this.logger),this.relayUrl=e?.relayUrl||he,this.projectId=e.projectId,this.provider={}}async init(){this.logger.trace("Initialized"),await this.createProvider(),await Promise.all([this.messages.init(),this.transportOpen(),this.subscriber.init()]),this.registerEventListeners(),this.initialized=!0}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get connected(){return this.provider.connection.connected}get connecting(){return this.provider.connection.connecting}async publish(e,t,i){this.isInitialized(),await this.publisher.publish(e,t,i),await this.recordMessageEvent({topic:e,message:t,publishedAt:Date.now()})}async subscribe(e,t){this.isInitialized();let i="";return await Promise.all([new Promise(s=>{this.subscriber.once(I.created,n=>{n.topic===e&&s()})}),new Promise(async s=>{i=await this.subscriber.subscribe(e,t),s()})]),i}async unsubscribe(e,t){this.isInitialized(),await this.subscriber.unsubscribe(e,t)}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}off(e,t){this.events.off(e,t)}removeListener(e,t){this.events.removeListener(e,t)}async transportClose(){this.transportExplicitlyClosed=!0,this.connected&&(await this.provider.disconnect(),this.events.emit(D.transport_closed))}async transportOpen(e){if(!this.reconnecting){this.relayUrl=e||this.relayUrl,this.transportExplicitlyClosed=!1,this.reconnecting=!0;try{await Promise.all([new Promise(t=>{this.initialized||t(),this.subscriber.once(I.resubscribed,()=>{t()})}),await Promise.race([new Promise(async(t,i)=>{await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(this.provider.connect(),5e3,"socket stalled").catch(s=>i(s)).then(()=>t()).finally(()=>this.removeListener(D.transport_closed,this.rejectTransportOpen))}),new Promise(t=>this.once(D.transport_closed,this.rejectTransportOpen))])])}catch(t){this.logger.error(t);const i=t;if(!this.isConnectionStalled(i.message))throw t;this.events.emit(D.transport_closed)}finally{this.reconnecting=!1}}}async restartTransport(e){this.transportExplicitlyClosed||(this.relayUrl=e||this.relayUrl,await this.transportClose(),await this.createProvider(),await this.transportOpen())}isConnectionStalled(e){return this.staleConnectionErrors.some(t=>e.includes(t))}rejectTransportOpen(){throw new Error("closeTransport called before connection was established")}async createProvider(){const e=await this.core.crypto.signJWT(this.relayUrl);this.provider=new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_11__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_13__["default"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatRelayRpcUrl)({sdkVersion:it,protocol:this.protocol,version:this.version,relayUrl:this.relayUrl,projectId:this.projectId,auth:e,useOnCloseEvent:!0}))),this.registerProviderListeners()}async recordMessageEvent(e){const{topic:t,message:i}=e;await this.messages.set(t,i)}async shouldIgnoreMessageEvent(e){const{topic:t,message:i}=e;return await this.subscriber.isSubscribed(t)?this.messages.has(t,i):!0}async onProviderPayload(e){if(this.logger.debug("Incoming Relay Payload"),this.logger.trace({type:"payload",direction:"incoming",payload:e}),(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.isJsonRpcRequest)(e)){if(!e.method.endsWith(et))return;const t=e.params,{topic:i,message:s,publishedAt:n}=t.data,a={topic:i,message:s,publishedAt:n};this.logger.debug("Emitting Relayer Payload"),this.logger.trace(hr({type:"event",event:t.id},a)),this.events.emit(t.id,a),await this.acknowledgePayload(e),await this.onMessageEvent(a)}}async onMessageEvent(e){await this.shouldIgnoreMessageEvent(e)||(this.events.emit(D.message,e),await this.recordMessageEvent(e))}async acknowledgePayload(e){const t=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.formatJsonRpcResult)(e.id,!0);await this.provider.connection.send(t)}registerProviderListeners(){this.provider.on(M.payload,e=>this.onProviderPayload(e)),this.provider.on(M.connect,()=>{this.events.emit(D.connect)}),this.provider.on(M.disconnect,()=>{this.onProviderDisconnect()}),this.provider.on(M.error,e=>{this.logger.error(e),this.events.emit(D.error,e)})}registerEventListeners(){this.events.on(D.connection_stalled,async()=>{await this.restartTransport()})}onProviderDisconnect(){this.events.emit(D.disconnect),this.attemptToReconnect()}attemptToReconnect(){this.transportExplicitlyClosed||setTimeout(async()=>{await this.restartTransport()},(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.toMiliseconds)(tt))}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}async toEstablishConnection(){if(!this.connected){if(this.connecting)return await new Promise(e=>{const t=setInterval(()=>{this.connected&&(clearInterval(t),e())},this.connectionStatusPollingInterval)});await this.restartTransport()}}}var cr=Object.defineProperty,vt=Object.getOwnPropertySymbols,ur=Object.prototype.hasOwnProperty,lr=Object.prototype.propertyIsEnumerable,It=(r,e,t)=>e in r?cr(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Ct=(r,e)=>{for(var t in e||(e={}))ur.call(e,t)&&It(r,t,e[t]);if(vt)for(var t of vt(e))lr.call(e,t)&&It(r,t,e[t]);return r};class _t extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.IStore{constructor(e,t,i,s=T,n=void 0){super(e,t,i,s),this.core=e,this.logger=t,this.name=i,this.map=new Map,this.version=st,this.cached=[],this.initialized=!1,this.storagePrefix=T,this.init=async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restore(),this.cached.forEach(a=>{this.getKey&&a!==null&&!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)(a)?this.map.set(this.getKey(a),a):(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isProposalStruct)(a)?this.map.set(a.id,a):(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isSessionStruct)(a)&&this.map.set(a.topic,a)}),this.cached=[],this.initialized=!0)},this.set=async(a,o)=>{this.isInitialized(),this.map.has(a)?await this.update(a,o):(this.logger.debug("Setting value"),this.logger.trace({type:"method",method:"set",key:a,value:o}),this.map.set(a,o),await this.persist())},this.get=a=>(this.isInitialized(),this.logger.debug("Getting value"),this.logger.trace({type:"method",method:"get",key:a}),this.getData(a)),this.getAll=a=>(this.isInitialized(),a?this.values.filter(o=>Object.keys(a).every(h=>lodash_isequal__WEBPACK_IMPORTED_MODULE_14___default()(o[h],a[h]))):this.values),this.update=async(a,o)=>{this.isInitialized(),this.logger.debug("Updating value"),this.logger.trace({type:"method",method:"update",key:a,update:o});const h=Ct(Ct({},this.getData(a)),o);this.map.set(a,h),await this.persist()},this.delete=async(a,o)=>{this.isInitialized(),this.map.has(a)&&(this.logger.debug("Deleting value"),this.logger.trace({type:"method",method:"delete",key:a,reason:o}),this.map.delete(a),await this.persist())},this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name),this.storagePrefix=s,this.getKey=n}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+"//"+this.name}get length(){return this.map.size}get keys(){return Array.from(this.map.keys())}get values(){return Array.from(this.map.values())}async setDataStore(e){await this.core.storage.setItem(this.storageKey,e)}async getDataStore(){return await this.core.storage.getItem(this.storageKey)}getData(e){const t=this.map.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw this.logger.error(i),new Error(i)}return t}async persist(){await this.setDataStore(this.values)}async restore(){try{const e=await this.getDataStore();if(typeof e>"u"||!e.length)return;if(this.map.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored value for ${this.name}`),this.logger.trace({type:"method",method:"restore",value:this.values})}catch(e){this.logger.debug(`Failed to Restore value for ${this.name}`),this.logger.error(e)}}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}class Rt{constructor(e,t){this.core=e,this.logger=t,this.name=ot,this.version=ht,this.events=new (events__WEBPACK_IMPORTED_MODULE_0___default()),this.initialized=!1,this.storagePrefix=T,this.ignoredPayloadTypes=[_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.TYPE_1],this.registeredMethods=[],this.init=async()=>{this.initialized||(await this.pairings.init(),await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.initialized=!0,this.logger.trace("Initialized"))},this.register=({methods:i})=>{this.isInitialized(),this.registeredMethods=[...new Set([...this.registeredMethods,...i])]},this.create=async()=>{this.isInitialized();const i=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateRandomBytes32)(),s=await this.core.crypto.setSymKey(i),n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.FIVE_MINUTES),a={protocol:We},o={topic:s,expiry:n,relay:a,active:!1},h=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatUri)({protocol:this.core.protocol,version:this.core.version,topic:s,symKey:i,relay:a});return await this.pairings.set(s,o),await this.core.relayer.subscribe(s),this.core.expirer.set(s,n),{topic:s,uri:h}},this.pair=async i=>{this.isInitialized(),this.isValidPair(i);const{topic:s,symKey:n,relay:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.parseUri)(i.uri);if(this.pairings.keys.includes(s))throw new Error(`Pairing already exists: ${s}`);if(this.core.crypto.hasKeys(s))throw new Error(`Keychain already exists: ${s}`);const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.FIVE_MINUTES),h={topic:s,relay:a,expiry:o,active:!1};return await this.pairings.set(s,h),await this.core.crypto.setSymKey(n,s),await this.core.relayer.subscribe(s,{relay:a}),this.core.expirer.set(s,o),i.activatePairing&&await this.activate({topic:s}),h},this.activate=async({topic:i})=>{this.isInitialized();const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.THIRTY_DAYS);await this.pairings.update(i,{active:!0,expiry:s}),this.core.expirer.set(i,s)},this.ping=async i=>{this.isInitialized(),await this.isValidPing(i);const{topic:s}=i;if(this.pairings.keys.includes(s)){const n=await this.sendRequest(s,"wc_pairingPing",{}),{done:a,resolve:o,reject:h}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createDelayedPromise)();this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.engineEvent)("pairing_ping",n),({error:d})=>{d?h(d):o()}),await a()}},this.updateExpiry=async({topic:i,expiry:s})=>{this.isInitialized(),await this.pairings.update(i,{expiry:s})},this.updateMetadata=async({topic:i,metadata:s})=>{this.isInitialized(),await this.pairings.update(i,{peerMetadata:s})},this.getPairings=()=>(this.isInitialized(),this.pairings.values),this.disconnect=async i=>{this.isInitialized(),await this.isValidDisconnect(i);const{topic:s}=i;this.pairings.keys.includes(s)&&(await this.sendRequest(s,"wc_pairingDelete",(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("USER_DISCONNECTED")),await this.deletePairing(s))},this.sendRequest=async(i,s,n)=>{const a=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.formatJsonRpcRequest)(s,n),o=await this.core.crypto.encode(i,a),h=N[s].req;return this.core.history.set(i,a),await this.core.relayer.publish(i,o,h),a.id},this.sendResult=async(i,s,n)=>{const a=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.formatJsonRpcResult)(i,n),o=await this.core.crypto.encode(s,a),h=await this.core.history.get(s,i),d=N[h.request.method].res;await this.core.relayer.publish(s,o,d),await this.core.history.resolve(a)},this.sendError=async(i,s,n)=>{const a=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.formatJsonRpcError)(i,n),o=await this.core.crypto.encode(s,a),h=await this.core.history.get(s,i),d=N[h.request.method]?N[h.request.method].res:N.unregistered_method.res;await this.core.relayer.publish(s,o,d),await this.core.history.resolve(a)},this.deletePairing=async(i,s)=>{await this.core.relayer.unsubscribe(i),await Promise.all([this.pairings.delete(i,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("USER_DISCONNECTED")),this.core.crypto.deleteSymKey(i),s?Promise.resolve():this.core.expirer.del(i)])},this.cleanup=async()=>{const i=this.pairings.getAll().filter(s=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isExpired)(s.expiry));await Promise.all(i.map(s=>this.deletePairing(s.topic)))},this.onRelayEventRequest=i=>{const{topic:s,payload:n}=i,a=n.method;if(this.pairings.keys.includes(s))switch(a){case"wc_pairingPing":return this.onPairingPingRequest(s,n);case"wc_pairingDelete":return this.onPairingDeleteRequest(s,n);default:return this.onUnknownRpcMethodRequest(s,n)}},this.onRelayEventResponse=async i=>{const{topic:s,payload:n}=i,a=(await this.core.history.get(s,n.id)).request.method;if(this.pairings.keys.includes(s))switch(a){case"wc_pairingPing":return this.onPairingPingResponse(s,n);default:return this.onUnknownRpcMethodResponse(a)}},this.onPairingPingRequest=async(i,s)=>{const{id:n}=s;try{this.isValidPing({topic:i}),await this.sendResult(n,i,!0),this.events.emit("pairing_ping",{id:n,topic:i})}catch(a){await this.sendError(n,i,a),this.logger.error(a)}},this.onPairingPingResponse=(i,s)=>{const{id:n}=s;setTimeout(()=>{(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.isJsonRpcResult)(s)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.engineEvent)("pairing_ping",n),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.isJsonRpcError)(s)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.engineEvent)("pairing_ping",n),{error:s.error})},500)},this.onPairingDeleteRequest=async(i,s)=>{const{id:n}=s;try{this.isValidDisconnect({topic:i}),await this.deletePairing(i),this.events.emit("pairing_delete",{id:n,topic:i})}catch(a){await this.sendError(n,i,a),this.logger.error(a)}},this.onUnknownRpcMethodRequest=async(i,s)=>{const{id:n,method:a}=s;try{if(this.registeredMethods.includes(a))return;const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("WC_METHOD_UNSUPPORTED",a);await this.sendError(n,i,o),this.logger.error(o)}catch(o){await this.sendError(n,i,o),this.logger.error(o)}},this.onUnknownRpcMethodResponse=i=>{this.registeredMethods.includes(i)||this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("WC_METHOD_UNSUPPORTED",i))},this.isValidPair=i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidParams)(i)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`pair() params: ${i}`);throw new Error(s)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidUrl)(i.uri)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`pair() uri: ${i.uri}`);throw new Error(s)}},this.isValidPing=async i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidParams)(i)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`ping() params: ${i}`);throw new Error(n)}const{topic:s}=i;await this.isValidPairingTopic(s)},this.isValidDisconnect=async i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidParams)(i)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`disconnect() params: ${i}`);throw new Error(n)}const{topic:s}=i;await this.isValidPairingTopic(s)},this.isValidPairingTopic=async i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidString)(i,!1)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`pairing topic should be a string: ${i}`);throw new Error(s)}if(!this.pairings.keys.includes(i)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`pairing topic doesn't exist: ${i}`);throw new Error(s)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isExpired)(this.pairings.get(i).expiry)){await this.deletePairing(i);const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("EXPIRED",`pairing topic: ${i}`);throw new Error(s)}},this.core=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name),this.pairings=new _t(this.core,this.logger,this.name,this.storagePrefix)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}registerRelayerEvents(){this.core.relayer.on(D.message,async e=>{const{topic:t,message:i}=e;if(this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i)))return;const s=await this.core.crypto.decode(t,i);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.isJsonRpcRequest)(s)?(this.core.history.set(t,s),this.onRelayEventRequest({topic:t,payload:s})):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.isJsonRpcResponse)(s)&&(await this.core.history.resolve(s),this.onRelayEventResponse({topic:t,payload:s}))})}registerExpirerEvents(){this.core.expirer.on(m.expired,async e=>{const{topic:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.parseExpirerTarget)(e.target);t&&this.pairings.keys.includes(t)&&(await this.deletePairing(t,!0),this.events.emit("pairing_expire",{topic:t}))})}}class St extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcHistory{constructor(e,t){super(e,t),this.core=e,this.logger=t,this.records=new Map,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.name=ct,this.version=ut,this.cached=[],this.initialized=!1,this.storagePrefix=T,this.init=async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restore(),this.cached.forEach(i=>this.records.set(i.id,i)),this.cached=[],this.registerEventListeners(),this.initialized=!0)},this.set=(i,s,n)=>{if(this.isInitialized(),this.logger.debug("Setting JSON-RPC request history record"),this.logger.trace({type:"method",method:"set",topic:i,request:s,chainId:n}),this.records.has(s.id))return;const a={id:s.id,topic:i,request:{method:s.method,params:s.params||null},chainId:n};this.records.set(a.id,a),this.events.emit(C.created,a)},this.resolve=async i=>{if(this.isInitialized(),this.logger.debug("Updating JSON-RPC response history record"),this.logger.trace({type:"method",method:"update",response:i}),!this.records.has(i.id))return;const s=await this.getRecord(i.id);typeof s.response>"u"&&(s.response=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.isJsonRpcError)(i)?{error:i.error}:{result:i.result},this.records.set(s.id,s),this.events.emit(C.updated,s))},this.get=async(i,s)=>(this.isInitialized(),this.logger.debug("Getting record"),this.logger.trace({type:"method",method:"get",topic:i,id:s}),await this.getRecord(s)),this.delete=(i,s)=>{this.isInitialized(),this.logger.debug("Deleting record"),this.logger.trace({type:"method",method:"delete",id:s}),this.values.forEach(n=>{if(n.topic===i){if(typeof s<"u"&&n.id!==s)return;this.records.delete(n.id),this.events.emit(C.deleted,n)}})},this.exists=async(i,s)=>(this.isInitialized(),this.records.has(s)?(await this.getRecord(s)).topic===i:!1),this.on=(i,s)=>{this.events.on(i,s)},this.once=(i,s)=>{this.events.once(i,s)},this.off=(i,s)=>{this.events.off(i,s)},this.removeListener=(i,s)=>{this.events.removeListener(i,s)},this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+"//"+this.name}get size(){return this.records.size}get keys(){return Array.from(this.records.keys())}get values(){return Array.from(this.records.values())}get pending(){const e=[];return this.values.forEach(t=>{if(typeof t.response<"u")return;const i={topic:t.topic,request:(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_12__.formatJsonRpcRequest)(t.request.method,t.request.params,t.id),chainId:t.chainId};return e.push(i)}),e}async setJsonRpcRecords(e){await this.core.storage.setItem(this.storageKey,e)}async getJsonRpcRecords(){return await this.core.storage.getItem(this.storageKey)}getRecord(e){this.isInitialized();const t=this.records.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw new Error(i)}return t}async persist(){await this.setJsonRpcRecords(this.values),this.events.emit(C.sync)}async restore(){try{const e=await this.getJsonRpcRecords();if(typeof e>"u"||!e.length)return;if(this.records.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored records for ${this.name}`),this.logger.trace({type:"method",method:"restore",records:this.values})}catch(e){this.logger.debug(`Failed to Restore records for ${this.name}`),this.logger.error(e)}}registerEventListeners(){this.events.on(C.created,e=>{const t=C.created;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,record:e}),this.persist()}),this.events.on(C.updated,e=>{const t=C.updated;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,record:e}),this.persist()}),this.events.on(C.deleted,e=>{const t=C.deleted;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,record:e}),this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}class Pt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.IExpirer{constructor(e,t){super(e,t),this.core=e,this.logger=t,this.expirations=new Map,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.name=lt,this.version=dt,this.cached=[],this.initialized=!1,this.storagePrefix=T,this.init=async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restore(),this.cached.forEach(i=>this.expirations.set(i.target,i)),this.cached=[],this.registerEventListeners(),this.initialized=!0)},this.has=i=>{try{const s=this.formatTarget(i);return typeof this.getExpiration(s)<"u"}catch{return!1}},this.set=(i,s)=>{this.isInitialized();const n=this.formatTarget(i),a={target:n,expiry:s};this.expirations.set(n,a),this.checkExpiry(n,a),this.events.emit(m.created,{target:n,expiration:a})},this.get=i=>{this.isInitialized();const s=this.formatTarget(i);return this.getExpiration(s)},this.del=i=>{if(this.isInitialized(),this.has(i)){const s=this.formatTarget(i),n=this.getExpiration(s);this.expirations.delete(s),this.events.emit(m.deleted,{target:s,expiration:n})}},this.on=(i,s)=>{this.events.on(i,s)},this.once=(i,s)=>{this.events.once(i,s)},this.off=(i,s)=>{this.events.off(i,s)},this.removeListener=(i,s)=>{this.events.removeListener(i,s)},this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+"//"+this.name}get length(){return this.expirations.size}get keys(){return Array.from(this.expirations.keys())}get values(){return Array.from(this.expirations.values())}formatTarget(e){if(typeof e=="string")return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatTopicTarget)(e);if(typeof e=="number")return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatIdTarget)(e);const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("UNKNOWN_TYPE",`Target type: ${typeof e}`);throw new Error(t)}async setExpirations(e){await this.core.storage.setItem(this.storageKey,e)}async getExpirations(){return await this.core.storage.getItem(this.storageKey)}async persist(){await this.setExpirations(this.values),this.events.emit(m.sync)}async restore(){try{const e=await this.getExpirations();if(typeof e>"u"||!e.length)return;if(this.expirations.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored expirations for ${this.name}`),this.logger.trace({type:"method",method:"restore",expirations:this.values})}catch(e){this.logger.debug(`Failed to Restore expirations for ${this.name}`),this.logger.error(e)}}getExpiration(e){const t=this.expirations.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw this.logger.error(i),new Error(i)}return t}checkExpiry(e,t){const{expiry:i}=t;(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_10__.toMiliseconds)(i)-Date.now()<=0&&this.expire(e,t)}expire(e,t){this.expirations.delete(e),this.events.emit(m.expired,{target:e,expiration:t})}checkExpirations(){this.core.relayer.connected&&this.expirations.forEach((e,t)=>this.checkExpiry(t,e))}registerEventListeners(){this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3__.HEARTBEAT_EVENTS.pulse,()=>this.checkExpirations()),this.events.on(m.created,e=>{const t=m.created;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),this.persist()}),this.events.on(m.expired,e=>{const t=m.expired;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),this.persist()}),this.events.on(m.deleted,e=>{const t=m.deleted;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var dr=Object.defineProperty,Tt=Object.getOwnPropertySymbols,gr=Object.prototype.hasOwnProperty,pr=Object.prototype.propertyIsEnumerable,xt=(r,e,t)=>e in r?dr(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Ot=(r,e)=>{for(var t in e||(e={}))gr.call(e,t)&&xt(r,t,e[t]);if(Tt)for(var t of Tt(e))pr.call(e,t)&&xt(r,t,e[t]);return r};class Y extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_5__.ICore{constructor(e){super(e),this.protocol=ae,this.version=Ke,this.name=G,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.initialized=!1,this.on=(i,s)=>this.events.on(i,s),this.once=(i,s)=>this.events.once(i,s),this.off=(i,s)=>this.events.off(i,s),this.removeListener=(i,s)=>this.events.removeListener(i,s),this.projectId=e?.projectId,this.relayUrl=e?.relayUrl||he;const t=typeof e?.logger<"u"&&typeof e?.logger!="string"?e.logger:pino__WEBPACK_IMPORTED_MODULE_1___default()((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getDefaultLoggerOptions)({level:e?.logger||ke.logger}));this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.generateChildLogger)(t,this.name),this.heartbeat=new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_3__.HeartBeat,this.crypto=new pt(this,this.logger,e?.keychain),this.history=new St(this,this.logger),this.expirer=new Pt(this,this.logger),this.storage=e!=null&&e.storage?e.storage:new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__["default"](Ot(Ot({},Be),e?.storageOptions)),this.relayer=new wt({core:this,logger:this.logger,relayUrl:this.relayUrl,projectId:this.projectId}),this.pairing=new Rt(this,this.logger)}static async init(e){const t=new Y(e);return await t.initialize(),t}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_4__.getLoggerContext)(this.logger)}async start(){this.initialized||await this.initialize()}async initialize(){this.logger.trace("Initialized");try{await this.crypto.init(),await this.history.init(),await this.expirer.init(),await this.relayer.init(),await this.heartbeat.init(),await this.pairing.init(),this.initialized=!0,this.logger.info("Core Initialization Success")}catch(e){throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`,e),this.logger.error(e.message),e}}}const Dr=Y;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
const time_1 = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
exports.HEARTBEAT_EVENTS = {
    pulse: "heartbeat_pulse",
};
//# sourceMappingURL=heartbeat.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HeartBeat = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
const events_1 = __webpack_require__(/*! events */ "./node_modules/events/events.js");
const time_1 = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
const types_1 = __webpack_require__(/*! ./types */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js");
const constants_1 = __webpack_require__(/*! ./constants */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js");
class HeartBeat extends types_1.IHeartBeat {
    constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
    }
    static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const heartbeat = new HeartBeat(opts);
            yield heartbeat.init();
            return heartbeat;
        });
    }
    init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.initialize();
        });
    }
    stop() {
        clearInterval(this.intervalRef);
    }
    on(event, listener) {
        this.events.on(event, listener);
    }
    once(event, listener) {
        this.events.once(event, listener);
    }
    off(event, listener) {
        this.events.off(event, listener);
    }
    removeListener(event, listener) {
        this.events.removeListener(event, listener);
    }
    initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
    }
    pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
    }
}
exports.HeartBeat = HeartBeat;
//# sourceMappingURL=heartbeat.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/index.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./types */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./constants */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IHeartBeat = void 0;
const events_1 = __webpack_require__(/*! @walletconnect/events */ "./node_modules/@walletconnect/events/dist/esm/index.js");
class IHeartBeat extends events_1.IEvents {
    constructor(opts) {
        super();
    }
}
exports.IHeartBeat = IHeartBeat;
//# sourceMappingURL=heartbeat.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.JsonRpcProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_provider__WEBPACK_IMPORTED_MODULE_0__["default"]);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JsonRpcProvider: () => (/* binding */ JsonRpcProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");


class JsonRpcProvider extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {
    constructor(connection) {
        super(connection);
        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
        this.hasRegisteredEventListeners = false;
        this.connection = this.setConnection(connection);
        if (this.connection.connected) {
            this.registerEventListeners();
        }
    }
    async connect(connection = this.connection) {
        await this.open(connection);
    }
    async disconnect() {
        await this.close();
    }
    on(event, listener) {
        this.events.on(event, listener);
    }
    once(event, listener) {
        this.events.once(event, listener);
    }
    off(event, listener) {
        this.events.off(event, listener);
    }
    removeListener(event, listener) {
        this.events.removeListener(event, listener);
    }
    async request(request, context) {
        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(request.method, request.params || []), context);
    }
    async requestStrict(request, context) {
        return new Promise(async (resolve, reject) => {
            if (!this.connection.connected) {
                try {
                    await this.open();
                }
                catch (e) {
                    reject(e);
                }
            }
            this.events.on(`${request.id}`, response => {
                if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(response)) {
                    reject(response.error);
                }
                else {
                    resolve(response.result);
                }
            });
            try {
                await this.connection.send(request, context);
            }
            catch (e) {
                reject(e);
            }
        });
    }
    setConnection(connection = this.connection) {
        return connection;
    }
    onPayload(payload) {
        this.events.emit("payload", payload);
        if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(payload)) {
            this.events.emit(`${payload.id}`, payload);
        }
        else {
            this.events.emit("message", {
                type: payload.method,
                data: payload.params,
            });
        }
    }
    onClose(event) {
        if (event && event.code === 3000) {
            this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
        }
        this.events.emit("disconnect");
    }
    async open(connection = this.connection) {
        if (this.connection === connection && this.connection.connected)
            return;
        if (this.connection.connected)
            this.close();
        if (typeof connection === "string") {
            await this.connection.open(connection);
            connection = this.connection;
        }
        this.connection = this.setConnection(connection);
        await this.connection.open();
        this.registerEventListeners();
        this.events.emit("connect");
    }
    async close() {
        await this.connection.close();
    }
    registerEventListeners() {
        if (this.hasRegisteredEventListeners)
            return;
        this.connection.on("payload", (payload) => this.onPayload(payload));
        this.connection.on("close", (event) => this.onClose(event));
        this.connection.on("error", (error) => this.events.emit("error", error));
        this.connection.on("register_error", (error) => this.onClose());
        this.hasRegisteredEventListeners = true;
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JsonRpcProvider);
//# sourceMappingURL=provider.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WsConnection: () => (/* reexport safe */ _ws__WEBPACK_IMPORTED_MODULE_0__.WsConnection),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ws */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ws__WEBPACK_IMPORTED_MODULE_0__["default"]);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WsConnection: () => (/* binding */ WsConnection),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/safe-json/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");



const EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;
const resolveWebSocketImplementation = () => {
    if (typeof __webpack_require__.g !== "undefined" && typeof __webpack_require__.g.WebSocket !== "undefined") {
        return __webpack_require__.g.WebSocket;
    }
    if (typeof window !== "undefined" && typeof window.WebSocket !== "undefined") {
        return window.WebSocket;
    }
    return __webpack_require__(/*! ws */ "./node_modules/@walletconnect/sign-client/node_modules/ws/browser.js");
};
const isBrowser = () => typeof window !== "undefined";
const WS = resolveWebSocketImplementation();
class WsConnection {
    constructor(url) {
        this.url = url;
        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
        this.registering = false;
        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(url)) {
            throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
        }
        this.url = url;
    }
    get connected() {
        return typeof this.socket !== "undefined";
    }
    get connecting() {
        return this.registering;
    }
    on(event, listener) {
        this.events.on(event, listener);
    }
    once(event, listener) {
        this.events.once(event, listener);
    }
    off(event, listener) {
        this.events.off(event, listener);
    }
    removeListener(event, listener) {
        this.events.removeListener(event, listener);
    }
    async open(url = this.url) {
        await this.register(url);
    }
    async close() {
        return new Promise((resolve, reject) => {
            if (typeof this.socket === "undefined") {
                reject(new Error("Connection already closed"));
                return;
            }
            this.socket.onclose = event => {
                this.onClose(event);
                resolve();
            };
            this.socket.close();
        });
    }
    async send(payload, context) {
        if (typeof this.socket === "undefined") {
            this.socket = await this.register();
        }
        try {
            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(payload));
        }
        catch (e) {
            this.onError(payload.id, e);
        }
    }
    register(url = this.url) {
        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(url)) {
            throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
        }
        if (this.registering) {
            const currentMaxListeners = this.events.getMaxListeners();
            if (this.events.listenerCount("register_error") >= currentMaxListeners ||
                this.events.listenerCount("open") >= currentMaxListeners) {
                this.events.setMaxListeners(currentMaxListeners + 1);
            }
            return new Promise((resolve, reject) => {
                this.events.once("register_error", error => {
                    this.resetMaxListeners();
                    reject(error);
                });
                this.events.once("open", () => {
                    this.resetMaxListeners();
                    if (typeof this.socket === "undefined") {
                        return reject(new Error("WebSocket connection is missing or invalid"));
                    }
                    resolve(this.socket);
                });
            });
        }
        this.url = url;
        this.registering = true;
        return new Promise((resolve, reject) => {
            const opts = !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? { rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(url) } : undefined;
            const socket = new WS(url, [], opts);
            if (isBrowser()) {
                socket.onerror = (event) => {
                    const errorEvent = event;
                    reject(this.emitError(errorEvent.error));
                };
            }
            else {
                socket.on("error", (errorEvent) => {
                    reject(this.emitError(errorEvent));
                });
            }
            socket.onopen = () => {
                this.onOpen(socket);
                resolve(socket);
            };
        });
    }
    onOpen(socket) {
        socket.onmessage = (event) => this.onPayload(event);
        socket.onclose = event => this.onClose(event);
        this.socket = socket;
        this.registering = false;
        this.events.emit("open");
    }
    onClose(event) {
        this.socket = undefined;
        this.registering = false;
        this.events.emit("close", event);
    }
    onPayload(e) {
        if (typeof e.data === "undefined")
            return;
        const payload = typeof e.data === "string" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;
        this.events.emit("payload", payload);
    }
    onError(id, e) {
        const error = this.parseError(e);
        const message = error.message || error.toString();
        const payload = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(id, message);
        this.events.emit("payload", payload);
    }
    parseError(e, url = this.url) {
        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, url, "WS");
    }
    resetMaxListeners() {
        if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {
            this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);
        }
    }
    emitError(errorEvent) {
        const error = this.parseError(new Error((errorEvent === null || errorEvent === void 0 ? void 0 : errorEvent.message) || `WebSocket connection failed for URL: ${this.url}`));
        this.events.emit("register_error", error);
        return error;
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WsConnection);
//# sourceMappingURL=ws.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ICore: () => (/* binding */ n),
/* harmony export */   ICrypto: () => (/* binding */ l),
/* harmony export */   IEngine: () => (/* binding */ C),
/* harmony export */   IEngineEvents: () => (/* binding */ b),
/* harmony export */   IExpirer: () => (/* binding */ E),
/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),
/* harmony export */   IKeyChain: () => (/* binding */ d),
/* harmony export */   IMessageTracker: () => (/* binding */ a),
/* harmony export */   IPairing: () => (/* binding */ m),
/* harmony export */   IPublisher: () => (/* binding */ u),
/* harmony export */   IRelayer: () => (/* binding */ g),
/* harmony export */   ISignClient: () => (/* binding */ y),
/* harmony export */   ISignClientEvents: () => (/* binding */ v),
/* harmony export */   IStore: () => (/* binding */ p),
/* harmony export */   ISubscriber: () => (/* binding */ x),
/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I)
/* harmony export */ });
/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ "./node_modules/@walletconnect/events/dist/esm/index.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);
class n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s){super(),this.opts=s,this.protocol="wc",this.version=2}}class l{constructor(s,t,o){this.core=s,this.logger=t}}class h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,t){super(),this.core=s,this.logger=t,this.records=new Map}}class a{constructor(s,t){this.logger=s,this.core=t}}class u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,t){super(),this.relayer=s,this.logger=t}}class g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s){super()}}class p{constructor(s,t,o,S){this.core=s,this.logger=t,this.name=o}}class I{constructor(){this.map=new Map}}class x extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,t){super(),this.relayer=s,this.logger=t}}class d{constructor(s,t){this.core=s,this.logger=t}}class E extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,t){super(),this.core=s,this.logger=t}}class m{constructor(s,t){this.logger=s,this.core=t}}class v extends (events__WEBPACK_IMPORTED_MODULE_1___default()){constructor(){super()}}class y{constructor(s){this.opts=s,this.protocol="wc",this.version=2}}class b extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter{constructor(){super()}}class C{constructor(s){this.client=s}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BASE10: () => (/* binding */ G),
/* harmony export */   BASE16: () => (/* binding */ f),
/* harmony export */   BASE64: () => (/* binding */ K),
/* harmony export */   COLON: () => (/* binding */ kn),
/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ Z),
/* harmony export */   EMPTY_SPACE: () => (/* binding */ L),
/* harmony export */   ENV_MAP: () => (/* binding */ _),
/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ln),
/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Ue),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ xe),
/* harmony export */   SDK_TYPE: () => (/* binding */ we),
/* harmony export */   SLASH: () => (/* binding */ _e),
/* harmony export */   TYPE_0: () => (/* binding */ Y),
/* harmony export */   TYPE_1: () => (/* binding */ U),
/* harmony export */   UTF8: () => (/* binding */ k),
/* harmony export */   appendToQueryString: () => (/* binding */ $e),
/* harmony export */   assertType: () => (/* binding */ zn),
/* harmony export */   buildApprovedNamespaces: () => (/* binding */ Ot),
/* harmony export */   calcExpiry: () => (/* binding */ rt),
/* harmony export */   capitalize: () => (/* binding */ Qn),
/* harmony export */   capitalizeWord: () => (/* binding */ Le),
/* harmony export */   createDelayedPromise: () => (/* binding */ Zn),
/* harmony export */   createExpiringPromise: () => (/* binding */ Xn),
/* harmony export */   decodeTypeByte: () => (/* binding */ j),
/* harmony export */   decrypt: () => (/* binding */ Cn),
/* harmony export */   deriveSymKey: () => (/* binding */ Un),
/* harmony export */   deserialize: () => (/* binding */ Q),
/* harmony export */   encodeTypeByte: () => (/* binding */ Se),
/* harmony export */   encrypt: () => (/* binding */ jn),
/* harmony export */   engineEvent: () => (/* binding */ st),
/* harmony export */   enumify: () => (/* binding */ Jn),
/* harmony export */   formatAccountId: () => (/* binding */ Ee),
/* harmony export */   formatAccountWithChain: () => (/* binding */ gn),
/* harmony export */   formatChainId: () => (/* binding */ ye),
/* harmony export */   formatExpirerTarget: () => (/* binding */ ne),
/* harmony export */   formatIdTarget: () => (/* binding */ nt),
/* harmony export */   formatMessage: () => (/* binding */ Pn),
/* harmony export */   formatMessageContext: () => (/* binding */ Bn),
/* harmony export */   formatRelayParams: () => (/* binding */ ze),
/* harmony export */   formatRelayRpcUrl: () => (/* binding */ Hn),
/* harmony export */   formatTopicTarget: () => (/* binding */ et),
/* harmony export */   formatUA: () => (/* binding */ Me),
/* harmony export */   formatUri: () => (/* binding */ pt),
/* harmony export */   generateKeyPair: () => (/* binding */ Rn),
/* harmony export */   generateRandomBytes32: () => (/* binding */ An),
/* harmony export */   getAccountsChains: () => (/* binding */ T),
/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ bn),
/* harmony export */   getAddressFromAccount: () => (/* binding */ he),
/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Nn),
/* harmony export */   getAppMetadata: () => (/* binding */ xn),
/* harmony export */   getChainFromAccount: () => (/* binding */ ve),
/* harmony export */   getChainsFromAccounts: () => (/* binding */ ge),
/* harmony export */   getChainsFromNamespace: () => (/* binding */ V),
/* harmony export */   getChainsFromNamespaces: () => (/* binding */ On),
/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Sn),
/* harmony export */   getDidAddress: () => (/* binding */ be),
/* harmony export */   getDidAddressSegments: () => (/* binding */ M),
/* harmony export */   getDidChainId: () => (/* binding */ Ne),
/* harmony export */   getEnvironment: () => (/* binding */ ee),
/* harmony export */   getHttpUrl: () => (/* binding */ qn),
/* harmony export */   getInternalError: () => (/* binding */ N),
/* harmony export */   getJavascriptID: () => (/* binding */ Ve),
/* harmony export */   getJavascriptOS: () => (/* binding */ De),
/* harmony export */   getLastItems: () => (/* binding */ ke),
/* harmony export */   getNamespacedDidChainId: () => (/* binding */ In),
/* harmony export */   getNamespacesChains: () => (/* binding */ Ye),
/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Je),
/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ We),
/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fn),
/* harmony export */   getRelayProtocolApi: () => (/* binding */ ct),
/* harmony export */   getRelayProtocolName: () => (/* binding */ it),
/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ bt),
/* harmony export */   getSdkError: () => (/* binding */ R),
/* harmony export */   getUniqueValues: () => (/* binding */ B),
/* harmony export */   hasOverlap: () => (/* binding */ b),
/* harmony export */   hashKey: () => (/* binding */ _n),
/* harmony export */   hashMessage: () => (/* binding */ wn),
/* harmony export */   isBrowser: () => (/* binding */ Ce),
/* harmony export */   isCaipNamespace: () => (/* binding */ te),
/* harmony export */   isConformingNamespaces: () => (/* binding */ cn),
/* harmony export */   isExpired: () => (/* binding */ ot),
/* harmony export */   isNode: () => (/* binding */ X),
/* harmony export */   isProposalStruct: () => (/* binding */ Rt),
/* harmony export */   isReactNative: () => (/* binding */ je),
/* harmony export */   isSessionCompatible: () => (/* binding */ Pt),
/* harmony export */   isSessionStruct: () => (/* binding */ At),
/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Dn),
/* harmony export */   isUndefined: () => (/* binding */ S),
/* harmony export */   isValidAccountId: () => (/* binding */ Ze),
/* harmony export */   isValidAccounts: () => (/* binding */ nn),
/* harmony export */   isValidActions: () => (/* binding */ rn),
/* harmony export */   isValidArray: () => (/* binding */ C),
/* harmony export */   isValidChainId: () => (/* binding */ H),
/* harmony export */   isValidChains: () => (/* binding */ Xe),
/* harmony export */   isValidController: () => (/* binding */ Ut),
/* harmony export */   isValidErrorReason: () => (/* binding */ $t),
/* harmony export */   isValidEvent: () => (/* binding */ Mt),
/* harmony export */   isValidId: () => (/* binding */ jt),
/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ tn),
/* harmony export */   isValidNamespaceActions: () => (/* binding */ se),
/* harmony export */   isValidNamespaceChains: () => (/* binding */ en),
/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ oe),
/* harmony export */   isValidNamespaces: () => (/* binding */ on),
/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Kt),
/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Lt),
/* harmony export */   isValidNamespacesRequest: () => (/* binding */ kt),
/* harmony export */   isValidNumber: () => (/* binding */ F),
/* harmony export */   isValidObject: () => (/* binding */ x),
/* harmony export */   isValidParams: () => (/* binding */ Ct),
/* harmony export */   isValidRelay: () => (/* binding */ sn),
/* harmony export */   isValidRelays: () => (/* binding */ wt),
/* harmony export */   isValidRequest: () => (/* binding */ Dt),
/* harmony export */   isValidRequestExpiry: () => (/* binding */ Ht),
/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ _t),
/* harmony export */   isValidResponse: () => (/* binding */ Vt),
/* harmony export */   isValidString: () => (/* binding */ m),
/* harmony export */   isValidUrl: () => (/* binding */ Tt),
/* harmony export */   mapEntries: () => (/* binding */ Wn),
/* harmony export */   mapToObj: () => (/* binding */ Gn),
/* harmony export */   mergeArrays: () => (/* binding */ O),
/* harmony export */   normalizeNamespaces: () => (/* binding */ re),
/* harmony export */   objToMap: () => (/* binding */ Yn),
/* harmony export */   parseAccountId: () => (/* binding */ z),
/* harmony export */   parseChainId: () => (/* binding */ me),
/* harmony export */   parseContextNames: () => (/* binding */ Ke),
/* harmony export */   parseExpirerTarget: () => (/* binding */ tt),
/* harmony export */   parseNamespaceKey: () => (/* binding */ Qe),
/* harmony export */   parseRelayParams: () => (/* binding */ qe),
/* harmony export */   parseUri: () => (/* binding */ ft),
/* harmony export */   serialize: () => (/* binding */ Ie),
/* harmony export */   validateDecoding: () => (/* binding */ $n),
/* harmony export */   validateEncoding: () => (/* binding */ Pe)
/* harmony export */ });
/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ "./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js");
/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/hkdf */ "./node_modules/@stablelib/hkdf/lib/hkdf.js");
/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stablelib/random */ "./node_modules/@stablelib/random/lib/random.js");
/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stablelib/sha256 */ "./node_modules/@stablelib/sha256/lib/sha256.js");
/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/x25519 */ "./node_modules/@stablelib/x25519/lib/x25519.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ "./node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ "./node_modules/detect-browser/es/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/window-metadata */ "./node_modules/@walletconnect/window-metadata/dist/cjs/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! query-string */ "./node_modules/@walletconnect/sign-client/node_modules/query-string/index.js");
/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ "./node_modules/@walletconnect/relay-api/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
const D=":";function me(e){const[n,t]=e.split(D);return{namespace:n,reference:t}}function ye(e){const{namespace:n,reference:t}=e;return[n,t].join(D)}function z(e){const[n,t,r]=e.split(D);return{namespace:n,reference:t,address:r}}function Ee(e){const{namespace:n,reference:t,address:r}=e;return[n,t,r].join(D)}function B(e,n){const t=[];return e.forEach(r=>{const o=n(r);t.includes(o)||t.push(o)}),t}function he(e){const{address:n}=z(e);return n}function ve(e){const{namespace:n,reference:t}=z(e);return ye({namespace:n,reference:t})}function gn(e,n){const{namespace:t,reference:r}=me(n);return Ee({namespace:t,reference:r,address:e})}function Nn(e){return B(e,he)}function ge(e){return B(e,ve)}function bn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...o.accounts)}),t}function On(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...ge(o.accounts))}),t}function Sn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...V(r,o))}),t}function V(e,n){return e.includes(":")?[e]:n.chains||[]}const M=e=>e?.split(":"),Ne=e=>{const n=e&&M(e);if(n)return n[3]},In=e=>{const n=e&&M(e);if(n)return n[2]+":"+n[3]},be=e=>{const n=e&&M(e);if(n)return n.pop()},Pn=(e,n)=>{const t=`${e.domain} wants you to sign in with your Ethereum account:`,r=be(n),o=e.statement,s=`URI: ${e.aud}`,c=`Version: ${e.version}`,d=`Chain ID: ${Ne(n)}`,l=`Nonce: ${e.nonce}`,i=`Issued At: ${e.iat}`,u=e.resources&&e.resources.length>0?`Resources:
${e.resources.map(a=>`- ${a}`).join(`
`)}`:void 0;return[t,r,"",o,"",s,c,d,l,i,u].filter(a=>a!=null).join(`
`)},G="base10",f="base16",K="base64pad",k="utf8",Y=0,U=1,Tn=0,Oe=1,W=12,J=32;function Rn(){const e=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.generateKeyPair();return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.secretKey,f),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.publicKey,f)}}function An(){const e=(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(J);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,f)}function Un(e,n){const t=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,f),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(n,f)),r=new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.SHA256,t).expand(J);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r,f)}function _n(e){const n=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,f));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,f)}function wn(e){const n=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,k));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,f)}function Se(e){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${e}`,G)}function j(e){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,G))}function jn(e){const n=Se(typeof e.type<"u"?e.type:Y);if(j(n)===U&&typeof e.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");const t=typeof e.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.senderPublicKey,f):void 0,r=typeof e.iv<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.iv,f):(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(W),o=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey,f)).seal(r,(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.message,k));return Ie({type:n,sealed:o,iv:r,senderPublicKey:t})}function Cn(e){const n=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey,f)),{sealed:t,iv:r}=Q(e.encoded),o=n.open(r,t);if(o===null)throw new Error("Failed to decrypt");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o,k)}function Ie(e){if(j(e.type)===U){if(typeof e.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([e.type,e.senderPublicKey,e.iv,e.sealed]),K)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([e.type,e.iv,e.sealed]),K)}function Q(e){const n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,K),t=n.slice(Tn,Oe),r=Oe;if(j(t)===U){const d=r+J,l=d+W,i=n.slice(r,d),u=n.slice(d,l),a=n.slice(l);return{type:t,sealed:a,iv:u,senderPublicKey:i}}const o=r+W,s=n.slice(r,o),c=n.slice(o);return{type:t,sealed:c,iv:s}}function $n(e,n){const t=Q(e);return Pe({type:j(t.type),senderPublicKey:typeof t.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t.senderPublicKey,f):void 0,receiverPublicKey:n?.receiverPublicKey})}function Pe(e){const n=e?.type||Y;if(n===U){if(typeof e?.senderPublicKey>"u")throw new Error("missing sender public key");if(typeof e?.receiverPublicKey>"u")throw new Error("missing receiver public key")}return{type:n,senderPublicKey:e?.senderPublicKey,receiverPublicKey:e?.receiverPublicKey}}function Dn(e){return e.type===U&&typeof e.senderPublicKey=="string"&&typeof e.receiverPublicKey=="string"}var Vn=Object.defineProperty,Te=Object.getOwnPropertySymbols,Mn=Object.prototype.hasOwnProperty,Kn=Object.prototype.propertyIsEnumerable,Re=(e,n,t)=>n in e?Vn(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,Ae=(e,n)=>{for(var t in n||(n={}))Mn.call(n,t)&&Re(e,t,n[t]);if(Te)for(var t of Te(n))Kn.call(n,t)&&Re(e,t,n[t]);return e};const Ue="ReactNative",_={reactNative:"react-native",node:"node",browser:"browser",unknown:"unknown"},L=" ",kn=":",_e="/",Z=2,Ln=1e3,we="js";function X(){return typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"}function je(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)()&&navigator.product===Ue}function Ce(){return!X()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)()}function ee(){return je()?_.reactNative:X()?_.node:Ce()?_.browser:_.unknown}function $e(e,n){let t=query_string__WEBPACK_IMPORTED_MODULE_9__.parse(e);return t=Ae(Ae({},t),n),e=query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(t),e}function xn(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__.getWindowMetadata)()||{name:"",description:"",url:"",icons:[""]}}function Fn(e,n){var t;const r=ee(),o={protocol:e,version:n,env:r};return r==="browser"&&(o.host=((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)())==null?void 0:t.host)||"unknown"),o}function De(){const e=(0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();if(e===null)return"unknown";const n=e.os?e.os.replace(" ","").toLowerCase():"unknown";return e.type==="browser"?[n,e.name,e.version].join("-"):[n,e.version].join("-")}function Ve(){var e;const n=ee();return n===_.browser?[n,((e=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)())==null?void 0:e.host)||"unknown"].join(":"):n}function Me(e,n,t){const r=De(),o=Ve();return[[e,n].join("-"),[we,t].join("-"),r,o].join("/")}function Hn({protocol:e,version:n,relayUrl:t,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:c}){const d=t.split("?"),l=Me(e,n,r),i={auth:o,ua:l,projectId:s,useOnCloseEvent:c||void 0},u=$e(d[1]||"",i);return d[0]+"?"+u}function qn(e){let n=(e.match(/^[^:]+(?=:\/\/)/gi)||[])[0];const t=typeof n<"u"?e.split("://")[1]:e;return n=n==="wss"?"https":"http",[n,t].join("://")}function zn(e,n,t){if(!e[n]||typeof e[n]!==t)throw new Error(`Missing or invalid "${n}" param`)}function Ke(e,n=Z){return ke(e.split(_e),n)}function Bn(e){return Ke(e).join(L)}function b(e,n){return e.filter(t=>n.includes(t)).length===e.length}function ke(e,n=Z){return e.slice(Math.max(e.length-n,0))}function Gn(e){return Object.fromEntries(e.entries())}function Yn(e){return new Map(Object.entries(e))}function Wn(e,n){const t={};return Object.keys(e).forEach(r=>{t[r]=n(e[r])}),t}const Jn=e=>e;function Le(e){return e.trim().replace(/^\w/,n=>n.toUpperCase())}function Qn(e){return e.split(L).map(n=>Le(n)).join(L)}function Zn(e=_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,n){const t=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e||_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES);let r,o,s;return{resolve:c=>{s&&r&&(clearTimeout(s),r(c))},reject:c=>{s&&o&&(clearTimeout(s),o(c))},done:()=>new Promise((c,d)=>{s=setTimeout(()=>{d(new Error(n))},t),r=c,o=d})}}function Xn(e,n,t){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(t)),n);try{const c=await e;r(c)}catch(c){o(c)}clearTimeout(s)})}function ne(e,n){if(typeof n=="string"&&n.startsWith(`${e}:`))return n;if(e.toLowerCase()==="topic"){if(typeof n!="string")throw new Error('Value must be "string" for expirer target type: topic');return`topic:${n}`}else if(e.toLowerCase()==="id"){if(typeof n!="number")throw new Error('Value must be "number" for expirer target type: id');return`id:${n}`}throw new Error(`Unknown expirer target type: ${e}`)}function et(e){return ne("topic",e)}function nt(e){return ne("id",e)}function tt(e){const[n,t]=e.split(":"),r={id:void 0,topic:void 0};if(n==="topic"&&typeof t=="string")r.topic=t;else if(n==="id"&&Number.isInteger(Number(t)))r.id=Number(t);else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);return r}function rt(e,n){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.fromMiliseconds)((n||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e))}function ot(e){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e)}function st(e,n){return`${e}${n?`:${n}`:""}`}function O(e=[],n=[]){return[...new Set([...e,...n])]}const xe="irn";function it(e){return e?.relay||{protocol:xe}}function ct(e){const n=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];if(typeof n>"u")throw new Error(`Relay Protocol not supported: ${e}`);return n}var at=Object.defineProperty,Fe=Object.getOwnPropertySymbols,ut=Object.prototype.hasOwnProperty,dt=Object.prototype.propertyIsEnumerable,He=(e,n,t)=>n in e?at(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,lt=(e,n)=>{for(var t in n||(n={}))ut.call(n,t)&&He(e,t,n[t]);if(Fe)for(var t of Fe(n))dt.call(n,t)&&He(e,t,n[t]);return e};function qe(e,n="-"){const t={},r="relay"+n;return Object.keys(e).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,""),c=e[o];t[s]=c}}),t}function ft(e){const n=e.indexOf(":"),t=e.indexOf("?")!==-1?e.indexOf("?"):void 0,r=e.substring(0,n),o=e.substring(n+1,t).split("@"),s=typeof t<"u"?e.substring(t):"",c=query_string__WEBPACK_IMPORTED_MODULE_9__.parse(s);return{protocol:r,topic:o[0],version:parseInt(o[1],10),symKey:c.symKey,relay:qe(c)}}function ze(e,n="-"){const t="relay",r={};return Object.keys(e).forEach(o=>{const s=t+n+o;e[o]&&(r[s]=e[o])}),r}function pt(e){return`${e.protocol}:${e.topic}@${e.version}?`+query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(lt({symKey:e.symKey},ze(e.relay)))}var mt=Object.defineProperty,yt=Object.defineProperties,Et=Object.getOwnPropertyDescriptors,Be=Object.getOwnPropertySymbols,ht=Object.prototype.hasOwnProperty,vt=Object.prototype.propertyIsEnumerable,Ge=(e,n,t)=>n in e?mt(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,gt=(e,n)=>{for(var t in n||(n={}))ht.call(n,t)&&Ge(e,t,n[t]);if(Be)for(var t of Be(n))vt.call(n,t)&&Ge(e,t,n[t]);return e},Nt=(e,n)=>yt(e,Et(n));function T(e){const n=[];return e.forEach(t=>{const[r,o]=t.split(":");n.push(`${r}:${o}`)}),n}function Ye(e){const n=[];return Object.values(e).forEach(t=>{n.push(...T(t.accounts))}),n}function We(e,n){const t=[];return Object.values(e).forEach(r=>{T(r.accounts).includes(n)&&t.push(...r.methods)}),t}function Je(e,n){const t=[];return Object.values(e).forEach(r=>{T(r.accounts).includes(n)&&t.push(...r.events)}),t}function bt(e,n){const t=on(e,n);if(t)throw new Error(t.message);const r={};for(const[o,s]of Object.entries(e))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(c=>`${c.split(":")[0]}:${c.split(":")[1]}`)};return r}function Ot(e){const{requiredNamespaces:n,optionalNamespaces:t={},supportedNamespaces:r}=e,o=re(n),s=re(t),c={};Object.keys(r).forEach(i=>{const u=r[i].chains,a=r[i].methods,g=r[i].events,A=r[i].accounts;c[i]={chains:u,methods:a,events:g,accounts:A}});const d=cn(n,c,"approve()");if(d)throw new Error(d.message);const l={};return Object.keys(o).forEach(i=>{const u=r[i].chains.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.chains)==null?void 0:y.includes(v)}),a=r[i].methods.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.methods)==null?void 0:y.includes(v)}),g=r[i].events.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.events)==null?void 0:y.includes(v)}),A=u.map(v=>r[i].accounts.filter(p=>p.includes(v))).flat();l[i]={chains:u,methods:a,events:g,accounts:A}}),Object.keys(s).forEach(i=>{var u,a,g,A,v,p;if(!r[i])return;const y=(a=(u=s[i])==null?void 0:u.chains)==null?void 0:a.filter(I=>r[i].chains.includes(I)),un=r[i].methods.filter(I=>{var P,w;return(w=(P=s[i])==null?void 0:P.methods)==null?void 0:w.includes(I)}),dn=r[i].events.filter(I=>{var P,w;return(w=(P=s[i])==null?void 0:P.events)==null?void 0:w.includes(I)}),ln=y?.map(I=>r[i].accounts.filter(P=>P.includes(I))).flat();l[i]={chains:O((g=l[i])==null?void 0:g.chains,y),methods:O((A=l[i])==null?void 0:A.methods,un),events:O((v=l[i])==null?void 0:v.events,dn),accounts:O((p=l[i])==null?void 0:p.accounts,ln)}}),l}function te(e){return e.includes(":")}function Qe(e){return te(e)?e.split(":")[0]:e}function re(e){var n,t,r;const o={};if(!x(e))return o;for(const[s,c]of Object.entries(e)){const d=te(s)?[s]:c.chains,l=c.methods||[],i=c.events||[],u=Qe(s);o[u]=Nt(gt({},o[u]),{chains:O(d,(n=o[u])==null?void 0:n.chains),methods:O(l,(t=o[u])==null?void 0:t.methods),events:O(i,(r=o[u])==null?void 0:r.events)})}return o}const St={INVALID_METHOD:{message:"Invalid method.",code:1001},INVALID_EVENT:{message:"Invalid event.",code:1002},INVALID_UPDATE_REQUEST:{message:"Invalid update request.",code:1003},INVALID_EXTEND_REQUEST:{message:"Invalid extend request.",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:"Invalid session settle request.",code:1005},UNAUTHORIZED_METHOD:{message:"Unauthorized method.",code:3001},UNAUTHORIZED_EVENT:{message:"Unauthorized event.",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:"Unauthorized update request.",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:"Unauthorized extend request.",code:3004},USER_REJECTED:{message:"User rejected.",code:5e3},USER_REJECTED_CHAINS:{message:"User rejected chains.",code:5001},USER_REJECTED_METHODS:{message:"User rejected methods.",code:5002},USER_REJECTED_EVENTS:{message:"User rejected events.",code:5003},UNSUPPORTED_CHAINS:{message:"Unsupported chains.",code:5100},UNSUPPORTED_METHODS:{message:"Unsupported methods.",code:5101},UNSUPPORTED_EVENTS:{message:"Unsupported events.",code:5102},UNSUPPORTED_ACCOUNTS:{message:"Unsupported accounts.",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:"Unsupported namespace key.",code:5104},USER_DISCONNECTED:{message:"User disconnected.",code:6e3},SESSION_SETTLEMENT_FAILED:{message:"Session settlement failed.",code:7e3},WC_METHOD_UNSUPPORTED:{message:"Unsupported wc_ method.",code:10001}},It={NOT_INITIALIZED:{message:"Not initialized.",code:1},NO_MATCHING_KEY:{message:"No matching key.",code:2},RESTORE_WILL_OVERRIDE:{message:"Restore will override.",code:3},RESUBSCRIBED:{message:"Resubscribed.",code:4},MISSING_OR_INVALID:{message:"Missing or invalid.",code:5},EXPIRED:{message:"Expired.",code:6},UNKNOWN_TYPE:{message:"Unknown type.",code:7},MISMATCHED_TOPIC:{message:"Mismatched topic.",code:8},NON_CONFORMING_NAMESPACES:{message:"Non conforming namespaces.",code:9}};function N(e,n){const{message:t,code:r}=It[e];return{message:n?`${t} ${n}`:t,code:r}}function R(e,n){const{message:t,code:r}=St[e];return{message:n?`${t} ${n}`:t,code:r}}function C(e,n){return Array.isArray(e)?typeof n<"u"&&e.length?e.every(n):!0:!1}function x(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.keys(e).length}function S(e){return typeof e>"u"}function m(e,n){return n&&S(e)?!0:typeof e=="string"&&Boolean(e.trim().length)}function F(e,n){return n&&S(e)?!0:typeof e=="number"&&!isNaN(e)}function Pt(e,n){const{requiredNamespaces:t}=n,r=Object.keys(e.namespaces),o=Object.keys(t);let s=!0;return b(o,r)?(r.forEach(c=>{const{accounts:d,methods:l,events:i}=e.namespaces[c],u=T(d),a=t[c];(!b(V(c,a),u)||!b(a.methods,l)||!b(a.events,i))&&(s=!1)}),s):!1}function H(e){return m(e,!1)&&e.includes(":")?e.split(":").length===2:!1}function Ze(e){if(m(e,!1)&&e.includes(":")){const n=e.split(":");if(n.length===3){const t=n[0]+":"+n[1];return!!n[2]&&H(t)}}return!1}function Tt(e){if(m(e,!1))try{return typeof new URL(e)<"u"}catch{return!1}return!1}function Rt(e){var n;return(n=e?.proposer)==null?void 0:n.publicKey}function At(e){return e?.topic}function Ut(e,n){let t=null;return m(e?.publicKey,!1)||(t=N("MISSING_OR_INVALID",`${n} controller public key should be a string`)),t}function oe(e){let n=!0;return C(e)?e.length&&(n=e.every(t=>m(t,!1))):n=!1,n}function Xe(e,n,t){let r=null;return C(n)?n.forEach(o=>{r||(!H(o)||!o.includes(e))&&(r=R("UNSUPPORTED_CHAINS",`${t}, chain ${o} should be a string and conform to "namespace:chainId" format`))}):r=R("UNSUPPORTED_CHAINS",`${t}, chains ${n} should be an array of strings conforming to "namespace:chainId" format`),r}function en(e,n){let t=null;return Object.entries(e).forEach(([r,o])=>{if(t)return;const s=Xe(r,V(r,o),`${n} requiredNamespace`);s&&(t=s)}),t}function nn(e,n){let t=null;return C(e)?e.forEach(r=>{t||Ze(r)||(t=R("UNSUPPORTED_ACCOUNTS",`${n}, account ${r} should be a string and conform to "namespace:chainId:address" format`))}):t=R("UNSUPPORTED_ACCOUNTS",`${n}, accounts should be an array of strings conforming to "namespace:chainId:address" format`),t}function tn(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const o=nn(r?.accounts,`${n} namespace`);o&&(t=o)}),t}function rn(e,n){let t=null;return oe(e?.methods)?oe(e?.events)||(t=R("UNSUPPORTED_EVENTS",`${n}, events should be an array of strings or empty array for no events`)):t=R("UNSUPPORTED_METHODS",`${n}, methods should be an array of strings or empty array for no methods`),t}function se(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const o=rn(r,`${n}, namespace`);o&&(t=o)}),t}function _t(e,n,t){let r=null;if(e&&x(e)){const o=se(e,n);o&&(r=o);const s=en(e,n);s&&(r=s)}else r=N("MISSING_OR_INVALID",`${n}, ${t} should be an object with data`);return r}function on(e,n){let t=null;if(e&&x(e)){const r=se(e,n);r&&(t=r);const o=tn(e,n);o&&(t=o)}else t=N("MISSING_OR_INVALID",`${n}, namespaces should be an object with data`);return t}function sn(e){return m(e.protocol,!0)}function wt(e,n){let t=!1;return n&&!e?t=!0:e&&C(e)&&e.length&&e.forEach(r=>{t=sn(r)}),t}function jt(e){return typeof e=="number"}function Ct(e){return typeof e<"u"&&typeof e!==null}function $t(e){return!(!e||typeof e!="object"||!e.code||!F(e.code,!1)||!e.message||!m(e.message,!1))}function Dt(e){return!(S(e)||!m(e.method,!1))}function Vt(e){return!(S(e)||S(e.result)&&S(e.error)||!F(e.id,!1)||!m(e.jsonrpc,!1))}function Mt(e){return!(S(e)||!m(e.name,!1))}function Kt(e,n){return!(!H(n)||!Ye(e).includes(n))}function kt(e,n,t){return m(t,!1)?We(e,n).includes(t):!1}function Lt(e,n,t){return m(t,!1)?Je(e,n).includes(t):!1}function cn(e,n,t){let r=null;const o=xt(e),s=Ft(n),c=Object.keys(o),d=Object.keys(s),l=an(Object.keys(e)),i=an(Object.keys(n)),u=l.filter(a=>!i.includes(a));return u.length&&(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u.toString()}
      Received: ${Object.keys(n).toString()}`)),b(c,d)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces chains don't satisfy required namespaces.
      Required: ${c.toString()}
      Approved: ${d.toString()}`)),Object.keys(n).forEach(a=>{if(!a.includes(":")||r)return;const g=T(n[a].accounts);g.includes(a)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces accounts don't satisfy namespace accounts for ${a}
        Required: ${a}
        Approved: ${g.toString()}`))}),c.forEach(a=>{r||(b(o[a].methods,s[a].methods)?b(o[a].events,s[a].events)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces events don't satisfy namespace events for ${a}`)):r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces methods don't satisfy namespace methods for ${a}`))}),r}function xt(e){const n={};return Object.keys(e).forEach(t=>{var r;t.includes(":")?n[t]=e[t]:(r=e[t].chains)==null||r.forEach(o=>{n[o]={methods:e[t].methods,events:e[t].events}})}),n}function an(e){return[...new Set(e.map(n=>n.includes(":")?n.split(":")[0]:n))]}function Ft(e){const n={};return Object.keys(e).forEach(t=>{if(t.includes(":"))n[t]=e[t];else{const r=T(e[t].accounts);r?.forEach(o=>{n[o]={accounts:e[t].accounts.filter(s=>s.includes(`${o}:`)),methods:e[t].methods,events:e[t].events}})}}),n}function Ht(e,n){return F(e,!1)&&e<=n.max&&e>=n.min}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/filter-obj/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/filter-obj/index.js ***!
  \**********************************************************************************/
/***/ ((module) => {


module.exports = function (obj, predicate) {
	var ret = {};
	var keys = Object.keys(obj);
	var isArr = Array.isArray(predicate);

	for (var i = 0; i < keys.length; i++) {
		var key = keys[i];
		var val = obj[key];

		if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
			ret[key] = val;
		}
	}

	return ret;
};


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/query-string/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/query-string/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


const strictUriEncode = __webpack_require__(/*! strict-uri-encode */ "./node_modules/strict-uri-encode/index.js");
const decodeComponent = __webpack_require__(/*! decode-uri-component */ "./node_modules/decode-uri-component/index.js");
const splitOnFirst = __webpack_require__(/*! split-on-first */ "./node_modules/split-on-first/index.js");
const filterObject = __webpack_require__(/*! filter-obj */ "./node_modules/@walletconnect/sign-client/node_modules/filter-obj/index.js");

const isNullOrUndefined = value => value === null || value === undefined;

const encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');

function encoderForArrayFormat(options) {
	switch (options.arrayFormat) {
		case 'index':
			return key => (result, value) => {
				const index = result.length;

				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[', index, ']'].join('')];
				}

				return [
					...result,
					[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')
				];
			};

		case 'bracket':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[]'].join('')];
				}

				return [...result, [encode(key, options), '[]=', encode(value, options)].join('')];
			};

		case 'colon-list-separator':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), ':list='].join('')];
				}

				return [...result, [encode(key, options), ':list=', encode(value, options)].join('')];
			};

		case 'comma':
		case 'separator':
		case 'bracket-separator': {
			const keyValueSep = options.arrayFormat === 'bracket-separator' ?
				'[]=' :
				'=';

			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				// Translate null to an empty string so that it doesn't serialize as 'null'
				value = value === null ? '' : value;

				if (result.length === 0) {
					return [[encode(key, options), keyValueSep, encode(value, options)].join('')];
				}

				return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
			};
		}

		default:
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, encode(key, options)];
				}

				return [...result, [encode(key, options), '=', encode(value, options)].join('')];
			};
	}
}

function parserForArrayFormat(options) {
	let result;

	switch (options.arrayFormat) {
		case 'index':
			return (key, value, accumulator) => {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return (key, value, accumulator) => {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'colon-list-separator':
			return (key, value, accumulator) => {
				result = /(:list)$/.exec(key);
				key = key.replace(/:list$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'comma':
		case 'separator':
			return (key, value, accumulator) => {
				const isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);
				const isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));
				value = isEncodedArray ? decode(value, options) : value;
				const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);
				accumulator[key] = newValue;
			};

		case 'bracket-separator':
			return (key, value, accumulator) => {
				const isArray = /(\[\])$/.test(key);
				key = key.replace(/\[\]$/, '');

				if (!isArray) {
					accumulator[key] = value ? decode(value, options) : value;
					return;
				}

				const arrayValue = value === null ?
					[] :
					value.split(options.arrayFormatSeparator).map(item => decode(item, options));

				if (accumulator[key] === undefined) {
					accumulator[key] = arrayValue;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], arrayValue);
			};

		default:
			return (key, value, accumulator) => {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function validateArrayFormatSeparator(value) {
	if (typeof value !== 'string' || value.length !== 1) {
		throw new TypeError('arrayFormatSeparator must be single character string');
	}
}

function encode(value, options) {
	if (options.encode) {
		return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function decode(value, options) {
	if (options.decode) {
		return decodeComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	}

	if (typeof input === 'object') {
		return keysSorter(Object.keys(input))
			.sort((a, b) => Number(a) - Number(b))
			.map(key => input[key]);
	}

	return input;
}

function removeHash(input) {
	const hashStart = input.indexOf('#');
	if (hashStart !== -1) {
		input = input.slice(0, hashStart);
	}

	return input;
}

function getHash(url) {
	let hash = '';
	const hashStart = url.indexOf('#');
	if (hashStart !== -1) {
		hash = url.slice(hashStart);
	}

	return hash;
}

function extract(input) {
	input = removeHash(input);
	const queryStart = input.indexOf('?');
	if (queryStart === -1) {
		return '';
	}

	return input.slice(queryStart + 1);
}

function parseValue(value, options) {
	if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {
		value = Number(value);
	} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
		value = value.toLowerCase() === 'true';
	}

	return value;
}

function parse(query, options) {
	options = Object.assign({
		decode: true,
		sort: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ',',
		parseNumbers: false,
		parseBooleans: false
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const formatter = parserForArrayFormat(options);

	// Create an object with no prototype
	const ret = Object.create(null);

	if (typeof query !== 'string') {
		return ret;
	}

	query = query.trim().replace(/^[?#&]/, '');

	if (!query) {
		return ret;
	}

	for (const param of query.split('&')) {
		if (param === '') {
			continue;
		}

		let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, ' ') : param, '=');

		// Missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		value = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);
		formatter(decode(key, options), value, ret);
	}

	for (const key of Object.keys(ret)) {
		const value = ret[key];
		if (typeof value === 'object' && value !== null) {
			for (const k of Object.keys(value)) {
				value[k] = parseValue(value[k], options);
			}
		} else {
			ret[key] = parseValue(value, options);
		}
	}

	if (options.sort === false) {
		return ret;
	}

	return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
		const value = ret[key];
		if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {
			// Sort object keys, not values
			result[key] = keysSorter(value);
		} else {
			result[key] = value;
		}

		return result;
	}, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = (object, options) => {
	if (!object) {
		return '';
	}

	options = Object.assign({
		encode: true,
		strict: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ','
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const shouldFilter = key => (
		(options.skipNull && isNullOrUndefined(object[key])) ||
		(options.skipEmptyString && object[key] === '')
	);

	const formatter = encoderForArrayFormat(options);

	const objectCopy = {};

	for (const key of Object.keys(object)) {
		if (!shouldFilter(key)) {
			objectCopy[key] = object[key];
		}
	}

	const keys = Object.keys(objectCopy);

	if (options.sort !== false) {
		keys.sort(options.sort);
	}

	return keys.map(key => {
		const value = object[key];

		if (value === undefined) {
			return '';
		}

		if (value === null) {
			return encode(key, options);
		}

		if (Array.isArray(value)) {
			if (value.length === 0 && options.arrayFormat === 'bracket-separator') {
				return encode(key, options) + '[]';
			}

			return value
				.reduce(formatter(key), [])
				.join('&');
		}

		return encode(key, options) + '=' + encode(value, options);
	}).filter(x => x.length > 0).join('&');
};

exports.parseUrl = (url, options) => {
	options = Object.assign({
		decode: true
	}, options);

	const [url_, hash] = splitOnFirst(url, '#');

	return Object.assign(
		{
			url: url_.split('?')[0] || '',
			query: parse(extract(url), options)
		},
		options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}
	);
};

exports.stringifyUrl = (object, options) => {
	options = Object.assign({
		encode: true,
		strict: true,
		[encodeFragmentIdentifier]: true
	}, options);

	const url = removeHash(object.url).split('?')[0] || '';
	const queryFromUrl = exports.extract(object.url);
	const parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});

	const query = Object.assign(parsedQueryFromUrl, object.query);
	let queryString = exports.stringify(query, options);
	if (queryString) {
		queryString = `?${queryString}`;
	}

	let hash = getHash(object.url);
	if (object.fragmentIdentifier) {
		hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
	}

	return `${url}${queryString}${hash}`;
};

exports.pick = (input, filter, options) => {
	options = Object.assign({
		parseFragmentIdentifier: true,
		[encodeFragmentIdentifier]: false
	}, options);

	const {url, query, fragmentIdentifier} = exports.parseUrl(input, options);
	return exports.stringifyUrl({
		url,
		query: filterObject(query, filter),
		fragmentIdentifier
	}, options);
};

exports.exclude = (input, filter, options) => {
	const exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);

	return exports.pick(input, exclusionFilter, options);
};


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/ws/browser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/ws/browser.js ***!
  \****************************************************************************/
/***/ ((module) => {



module.exports = function () {
  throw new Error(
    'ws does not work in the browser. Browser clients must use the native ' +
      'WebSocket object'
  );
};


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UniversalProvider: () => (/* binding */ pe),
/* harmony export */   "default": () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ "./node_modules/pino/browser.js");
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/sign-client */ "./node_modules/@walletconnect/sign-client/dist/index.es.js");
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ "./node_modules/@walletconnect/logger/dist/cjs/index.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ "./node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ "./node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_6__);
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");
const I="error",M="wss://relay.walletconnect.com",G="wc",z="universal_provider",E=`${G}@${2}:${z}:`,x="https://rpc.walletconnect.com/v1",o={DEFAULT_CHAIN_CHANGED:"default_chain_changed"};var J=Object.defineProperty,$=Object.getOwnPropertySymbols,V=Object.prototype.hasOwnProperty,W=Object.prototype.propertyIsEnumerable,H=(i,e,t)=>e in i?J(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,f=(i,e)=>{for(var t in e||(e={}))V.call(e,t)&&H(i,t,e[t]);if($)for(var t of $(e))W.call(e,t)&&H(i,t,e[t]);return i};function a(i,e,t){let s;const n=g(i);return e.rpcMap&&(s=e.rpcMap[n]),s||(s=`${x}?chainId=eip155:${n}&projectId=${t}`),s}function g(i){return i.includes("eip155")?Number(i.split(":")[1]):Number(i)}function K(i,e){if(!e.includes(i))throw new Error(`Chain '${i}' not approved. Please use one of the following: ${e.toString()}`)}function X(i){return i.map(e=>`${e.split(":")[0]}:${e.split(":")[1]}`)}function Y(i,e){const t=Object.keys(e.namespaces).filter(n=>n.includes(i));if(!t.length)return[];const s=[];return t.forEach(n=>{const r=e.namespaces[n].accounts;s.push(...r)}),s}function B(i,e={}){const t=A(i),s=A(e);return f({},Object.assign(t,s))}function A(i){var e,t,s,n;const r={};if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidObject)(i))return r;for(const[v,l]of Object.entries(i)){const q=y(v)?[v]:l.chains,S=l.methods||[],D=l.events||[],p=N(v);r[p]={chains:P(q,(e=r[p])==null?void 0:e.chains),methods:P(S,(t=r[p])==null?void 0:t.methods),events:P(D,(s=r[p])==null?void 0:s.events),rpcMap:f(f({},(n=r[p])==null?void 0:n.rpcMap),l.rpcMap)}}return r}function y(i){return i.includes(":")}function N(i){return y(i)?i.split(":")[0]:i}function P(i=[],e=[]){return[...new Set([...i,...e])]}const h=(i,e)=>{const t=s=>{s.request!==e.request||s.topic!==e.topic||(i.events.removeListener("session_request_sent",t),Q(e))};i.on("session_request_sent",t)};function Q(i){if(typeof window<"u")try{const e=window.localStorage.getItem("WALLETCONNECT_DEEPLINK_CHOICE");if(e){const t=JSON.parse(e),s=t?.href;if(typeof s=="string"){s.endsWith("/")&&s.slice(0,-1);const n=`${s}/wc?requestId=${i.id}&sessionTopic=${i.topic}`;window.open(n,"_self","noreferrer noopener")}}}catch(e){console.error(e)}}class Z{constructor(e){this.name="eip155",this.namespace=e.namespace,this.client=e.client,this.events=e.events,this.httpProviders=this.createHttpProviders(),this.chainId=parseInt(this.getDefaultChain())}async request(e){var t;switch(e.request.method){case"eth_requestAccounts":return this.getAccounts();case"eth_accounts":return this.getAccounts();case"wallet_switchEthereumChain":return this.handleSwitchChain(e.request.params?(t=e.request.params[0])==null?void 0:t.chainId:"0x0"),null;case"eth_chainId":return parseInt(this.getDefaultChain())}return this.namespace.methods.includes(e.request.method)?(h(this.client,e),await this.client.request(e)):this.getHttpProvider().request(e.request)}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}setDefaultChain(e,t){const s=g(e);if(!this.httpProviders[s]){const n=t||a(`${this.name}:${s}`,this.namespace,this.client.core.projectId);if(!n)throw new Error(`No RPC url provided for chainId: ${s}`);this.setHttpProvider(s,n)}this.chainId=s,this.events.emit(o.DEFAULT_CHAIN_CHANGED,`${this.name}:${s}`)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId.toString();if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}createHttpProvider(e,t){const s=t||a(`${this.name}:${e}`,this.namespace,this.client.core.projectId);return typeof s>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__.HttpConnection(s))}setHttpProvider(e,t){const s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var s;const n=g(t);e[n]=this.createHttpProvider(n,(s=this.namespace.rpcMap)==null?void 0:s[t])}),e}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}getHttpProvider(){const e=this.chainId,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}handleSwitchChain(e){const t=parseInt(e,16),s=`${this.name}:${t}`;K(s,this.namespace.chains),this.setDefaultChain(`${t}`)}}class ee{constructor(e){this.name="solana",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?(h(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(!this.httpProviders[e]){const s=t||a(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!s)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.chainId=e,this.events.emit(o.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var s;e[t]=this.createHttpProvider(t,(s=this.namespace.rpcMap)==null?void 0:s[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){const s=t||a(e,this.namespace,this.client.core.projectId);return typeof s>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__["default"](s))}}class te{constructor(e){this.name="cosmos",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?(h(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(this.chainId=e,!this.httpProviders[e]){const s=t||a(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!s)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.events.emit(o.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var s;e[t]=this.createHttpProvider(t,(s=this.namespace.rpcMap)==null?void 0:s[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){const s=t||a(e,this.namespace,this.client.core.projectId);return typeof s>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__["default"](s))}}class se{constructor(e){this.name="cip34",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?(h(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(this.chainId=e,!this.httpProviders[e]){const s=t||this.getCardanoRPCUrl(e);if(!s)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.events.emit(o.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{const s=this.getCardanoRPCUrl(t);e[t]=this.createHttpProvider(t,s)}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}getCardanoRPCUrl(e){const t=this.namespace.rpcMap;if(t)return t[e]}setHttpProvider(e,t){const s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){const s=t||this.getCardanoRPCUrl(e);return typeof s>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__["default"](s))}}class ie{constructor(e){this.name="elrond",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?(h(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(!this.httpProviders[e]){const s=t||a(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!s)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.chainId=e,this.events.emit(o.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var s;e[t]=this.createHttpProvider(t,(s=this.namespace.rpcMap)==null?void 0:s[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){const s=t||a(e,this.namespace,this.client.core.projectId);return typeof s>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__["default"](s))}}class ne{constructor(e){this.name="multiversx",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?(h(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(!this.httpProviders[e]){const s=t||a(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!s)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.chainId=e,this.events.emit(o.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var s;e[t]=this.createHttpProvider(t,(s=this.namespace.rpcMap)==null?void 0:s[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){const s=t||a(e,this.namespace,this.client.core.projectId);return typeof s>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_4__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_5__["default"](s))}}var re=Object.defineProperty,ae=Object.defineProperties,oe=Object.getOwnPropertyDescriptors,O=Object.getOwnPropertySymbols,ce=Object.prototype.hasOwnProperty,he=Object.prototype.propertyIsEnumerable,b=(i,e,t)=>e in i?re(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,u=(i,e)=>{for(var t in e||(e={}))ce.call(e,t)&&b(i,t,e[t]);if(O)for(var t of O(e))he.call(e,t)&&b(i,t,e[t]);return i},w=(i,e)=>ae(i,oe(e));class m{constructor(e){this.events=new (events__WEBPACK_IMPORTED_MODULE_6___default()),this.rpcProviders={},this.shouldAbortPairingAttempt=!1,this.maxPairingAttempts=10,this.providerOpts=e,this.logger=typeof e?.logger<"u"&&typeof e?.logger!="string"?e.logger:pino__WEBPACK_IMPORTED_MODULE_0___default()((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({level:e?.logger||I}))}static async init(e){const t=new m(e);return await t.initialize(),t}async request(e,t){const[s,n]=this.validateChain(t);if(!this.session)throw new Error("Please call connect() before request()");return await this.getProvider(s).request({request:u({},e),chainId:`${s}:${n}`,topic:this.session.topic})}sendAsync(e,t,s){this.request(e,s).then(n=>t(null,n)).catch(n=>t(n,void 0))}async enable(){if(!this.client)throw new Error("Sign Client not initialized");return this.session||await this.connect({namespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties}),await this.requestAccounts()}async disconnect(){var e;if(!this.session)throw new Error("Please call connect() before enable()");await this.client.disconnect({topic:(e=this.session)==null?void 0:e.topic,reason:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)("USER_DISCONNECTED")}),await this.cleanup()}async connect(e){if(!this.client)throw new Error("Sign Client not initialized");if(this.setNamespaces(e),await this.cleanupPendingPairings(),!e.skipPairing)return await this.pair(e.pairingTopic)}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}removeListener(e,t){this.events.removeListener(e,t)}off(e,t){this.events.off(e,t)}get isWalletConnect(){return!0}async pair(e){this.shouldAbortPairingAttempt=!1;let t=0;do{if(this.shouldAbortPairingAttempt)throw new Error("Pairing aborted");if(t>=this.maxPairingAttempts)throw new Error("Max auto pairing attempts reached");const{uri:s,approval:n}=await this.client.connect({pairingTopic:e,requiredNamespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties});s&&(this.uri=s,this.events.emit("display_uri",s)),await n().then(r=>{this.session=r}).catch(r=>{if(r.message!==_walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_1__.PROPOSAL_EXPIRY_MESSAGE)throw r;t++})}while(!this.session);return this.onConnect(),this.session}setDefaultChain(e,t){try{const[s,n]=this.validateChain(e);this.getProvider(s).setDefaultChain(n,t)}catch(s){if(!/Please call connect/.test(s.message))throw s}}async cleanupPendingPairings(e={}){this.logger.info("Cleaning up inactive pairings...");const t=this.client.pairing.getAll();if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(t)){for(const s of t)e.deletePairings?this.client.core.expirer.set(s.topic,0):await this.client.core.relayer.subscriber.unsubscribe(s.topic);this.logger.info(`Inactive pairings cleared: ${t.length}`)}}abortPairingAttempt(){this.shouldAbortPairingAttempt=!0}async checkStorage(){if(this.namespaces=await this.getFromStore("namespaces")||{},this.optionalNamespaces=await this.getFromStore("optionalNamespaces")||{},this.client.session.length){const e=this.client.session.keys.length-1;this.session=this.client.session.get(this.client.session.keys[e]),this.createProviders()}}async initialize(){this.logger.trace("Initialized"),await this.createClient(),await this.checkStorage(),this.registerEventListeners()}async createClient(){this.client=this.providerOpts.client||await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_1__["default"].init({logger:this.providerOpts.logger||I,relayUrl:this.providerOpts.relayUrl||M,projectId:this.providerOpts.projectId,metadata:this.providerOpts.metadata,storageOptions:this.providerOpts.storageOptions,name:this.providerOpts.name}),this.logger.trace("SignClient Initialized")}createProviders(){if(!this.client)throw new Error("Sign Client not initialized");if(!this.session)throw new Error("Session not initialized. Please call connect() before enable()");[...new Set(Object.keys(this.session.namespaces).map(e=>N(e)))].forEach(e=>{if(!this.session)return;const t=Y(e,this.session),s=X(t),n=B(this.namespaces,this.optionalNamespaces),r=w(u({},n[e]),{accounts:t,chains:s});switch(e){case"eip155":this.rpcProviders[e]=new Z({client:this.client,namespace:r,events:this.events});break;case"solana":this.rpcProviders[e]=new ee({client:this.client,namespace:r,events:this.events});break;case"cosmos":this.rpcProviders[e]=new te({client:this.client,namespace:r,events:this.events});break;case"polkadot":break;case"cip34":this.rpcProviders[e]=new se({client:this.client,namespace:r,events:this.events});break;case"elrond":this.rpcProviders[e]=new ie({client:this.client,namespace:r,events:this.events});break;case"multiversx":this.rpcProviders[e]=new ne({client:this.client,namespace:r,events:this.events});break}})}registerEventListeners(){if(typeof this.client>"u")throw new Error("Sign Client is not initialized");this.client.on("session_ping",e=>{this.events.emit("session_ping",e)}),this.client.on("session_event",e=>{const{params:t}=e,{event:s}=t;s.name==="accountsChanged"?this.events.emit("accountsChanged",s.data):s.name==="chainChanged"?this.onChainChanged(t.chainId):this.events.emit(s.name,s.data),this.events.emit("session_event",e)}),this.client.on("session_update",({topic:e,params:t})=>{var s;const{namespaces:n}=t,r=(s=this.client)==null?void 0:s.session.get(e);this.session=w(u({},r),{namespaces:n}),this.onSessionUpdate(),this.events.emit("session_update",{topic:e,params:t})}),this.client.on("session_delete",async e=>{await this.cleanup(),this.events.emit("session_delete",e),this.events.emit("disconnect",w(u({},(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)("USER_DISCONNECTED")),{data:e.topic}))}),this.on(o.DEFAULT_CHAIN_CHANGED,e=>{this.onChainChanged(e,!0)})}getProvider(e){if(!this.rpcProviders[e])throw new Error(`Provider not found: ${e}`);return this.rpcProviders[e]}onSessionUpdate(){Object.keys(this.rpcProviders).forEach(e=>{var t;this.getProvider(e).updateNamespace((t=this.session)==null?void 0:t.namespaces[e])})}setNamespaces(e){const{namespaces:t,optionalNamespaces:s,sessionProperties:n}=e;if(!t||!Object.keys(t).length)throw new Error("Namespaces must be not empty");this.namespaces=t,this.optionalNamespaces=s,this.sessionProperties=n,this.persist("namespaces",t),this.persist("optionalNamespaces",s)}validateChain(e){const[t,s]=e?.split(":")||["",""];if(t&&!Object.keys(this.namespaces).includes(t))throw new Error(`Namespace '${t}' is not configured. Please call connect() first with namespace config.`);if(t&&s)return[t,s];const n=Object.keys(this.namespaces)[0],r=this.rpcProviders[n].getDefaultChain();return[n,r]}async requestAccounts(){const[e]=this.validateChain();return await this.getProvider(e).requestAccounts()}onChainChanged(e,t=!1){const[s,n]=this.validateChain(e);t||this.getProvider(s).setDefaultChain(n),this.namespaces[s].defaultChain=n,this.persist("namespaces",this.namespaces),this.events.emit("chainChanged",n)}onConnect(){this.createProviders(),this.events.emit("connect",{session:this.session})}async cleanup(){this.session=void 0,await this.cleanupPendingPairings({deletePairings:!0})}persist(e,t){this.client.core.storage.setItem(`${E}/${e}`,t)}async getFromStore(e){return await this.client.core.storage.getItem(`${E}/${e}`)}}const pe=m;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BASE10: () => (/* binding */ G),
/* harmony export */   BASE16: () => (/* binding */ f),
/* harmony export */   BASE64: () => (/* binding */ K),
/* harmony export */   COLON: () => (/* binding */ kn),
/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ Z),
/* harmony export */   EMPTY_SPACE: () => (/* binding */ L),
/* harmony export */   ENV_MAP: () => (/* binding */ _),
/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ln),
/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Ue),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ xe),
/* harmony export */   SDK_TYPE: () => (/* binding */ we),
/* harmony export */   SLASH: () => (/* binding */ _e),
/* harmony export */   TYPE_0: () => (/* binding */ Y),
/* harmony export */   TYPE_1: () => (/* binding */ U),
/* harmony export */   UTF8: () => (/* binding */ k),
/* harmony export */   appendToQueryString: () => (/* binding */ $e),
/* harmony export */   assertType: () => (/* binding */ zn),
/* harmony export */   buildApprovedNamespaces: () => (/* binding */ Ot),
/* harmony export */   calcExpiry: () => (/* binding */ rt),
/* harmony export */   capitalize: () => (/* binding */ Qn),
/* harmony export */   capitalizeWord: () => (/* binding */ Le),
/* harmony export */   createDelayedPromise: () => (/* binding */ Zn),
/* harmony export */   createExpiringPromise: () => (/* binding */ Xn),
/* harmony export */   decodeTypeByte: () => (/* binding */ j),
/* harmony export */   decrypt: () => (/* binding */ Cn),
/* harmony export */   deriveSymKey: () => (/* binding */ Un),
/* harmony export */   deserialize: () => (/* binding */ Q),
/* harmony export */   encodeTypeByte: () => (/* binding */ Se),
/* harmony export */   encrypt: () => (/* binding */ jn),
/* harmony export */   engineEvent: () => (/* binding */ st),
/* harmony export */   enumify: () => (/* binding */ Jn),
/* harmony export */   formatAccountId: () => (/* binding */ Ee),
/* harmony export */   formatAccountWithChain: () => (/* binding */ gn),
/* harmony export */   formatChainId: () => (/* binding */ ye),
/* harmony export */   formatExpirerTarget: () => (/* binding */ ne),
/* harmony export */   formatIdTarget: () => (/* binding */ nt),
/* harmony export */   formatMessage: () => (/* binding */ Pn),
/* harmony export */   formatMessageContext: () => (/* binding */ Bn),
/* harmony export */   formatRelayParams: () => (/* binding */ ze),
/* harmony export */   formatRelayRpcUrl: () => (/* binding */ Hn),
/* harmony export */   formatTopicTarget: () => (/* binding */ et),
/* harmony export */   formatUA: () => (/* binding */ Me),
/* harmony export */   formatUri: () => (/* binding */ pt),
/* harmony export */   generateKeyPair: () => (/* binding */ Rn),
/* harmony export */   generateRandomBytes32: () => (/* binding */ An),
/* harmony export */   getAccountsChains: () => (/* binding */ T),
/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ bn),
/* harmony export */   getAddressFromAccount: () => (/* binding */ he),
/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Nn),
/* harmony export */   getAppMetadata: () => (/* binding */ xn),
/* harmony export */   getChainFromAccount: () => (/* binding */ ve),
/* harmony export */   getChainsFromAccounts: () => (/* binding */ ge),
/* harmony export */   getChainsFromNamespace: () => (/* binding */ V),
/* harmony export */   getChainsFromNamespaces: () => (/* binding */ On),
/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Sn),
/* harmony export */   getDidAddress: () => (/* binding */ be),
/* harmony export */   getDidAddressSegments: () => (/* binding */ M),
/* harmony export */   getDidChainId: () => (/* binding */ Ne),
/* harmony export */   getEnvironment: () => (/* binding */ ee),
/* harmony export */   getHttpUrl: () => (/* binding */ qn),
/* harmony export */   getInternalError: () => (/* binding */ N),
/* harmony export */   getJavascriptID: () => (/* binding */ Ve),
/* harmony export */   getJavascriptOS: () => (/* binding */ De),
/* harmony export */   getLastItems: () => (/* binding */ ke),
/* harmony export */   getNamespacedDidChainId: () => (/* binding */ In),
/* harmony export */   getNamespacesChains: () => (/* binding */ Ye),
/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Je),
/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ We),
/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fn),
/* harmony export */   getRelayProtocolApi: () => (/* binding */ ct),
/* harmony export */   getRelayProtocolName: () => (/* binding */ it),
/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ bt),
/* harmony export */   getSdkError: () => (/* binding */ R),
/* harmony export */   getUniqueValues: () => (/* binding */ B),
/* harmony export */   hasOverlap: () => (/* binding */ b),
/* harmony export */   hashKey: () => (/* binding */ _n),
/* harmony export */   hashMessage: () => (/* binding */ wn),
/* harmony export */   isBrowser: () => (/* binding */ Ce),
/* harmony export */   isCaipNamespace: () => (/* binding */ te),
/* harmony export */   isConformingNamespaces: () => (/* binding */ cn),
/* harmony export */   isExpired: () => (/* binding */ ot),
/* harmony export */   isNode: () => (/* binding */ X),
/* harmony export */   isProposalStruct: () => (/* binding */ Rt),
/* harmony export */   isReactNative: () => (/* binding */ je),
/* harmony export */   isSessionCompatible: () => (/* binding */ Pt),
/* harmony export */   isSessionStruct: () => (/* binding */ At),
/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Dn),
/* harmony export */   isUndefined: () => (/* binding */ S),
/* harmony export */   isValidAccountId: () => (/* binding */ Ze),
/* harmony export */   isValidAccounts: () => (/* binding */ nn),
/* harmony export */   isValidActions: () => (/* binding */ rn),
/* harmony export */   isValidArray: () => (/* binding */ C),
/* harmony export */   isValidChainId: () => (/* binding */ H),
/* harmony export */   isValidChains: () => (/* binding */ Xe),
/* harmony export */   isValidController: () => (/* binding */ Ut),
/* harmony export */   isValidErrorReason: () => (/* binding */ $t),
/* harmony export */   isValidEvent: () => (/* binding */ Mt),
/* harmony export */   isValidId: () => (/* binding */ jt),
/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ tn),
/* harmony export */   isValidNamespaceActions: () => (/* binding */ se),
/* harmony export */   isValidNamespaceChains: () => (/* binding */ en),
/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ oe),
/* harmony export */   isValidNamespaces: () => (/* binding */ on),
/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Kt),
/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Lt),
/* harmony export */   isValidNamespacesRequest: () => (/* binding */ kt),
/* harmony export */   isValidNumber: () => (/* binding */ F),
/* harmony export */   isValidObject: () => (/* binding */ x),
/* harmony export */   isValidParams: () => (/* binding */ Ct),
/* harmony export */   isValidRelay: () => (/* binding */ sn),
/* harmony export */   isValidRelays: () => (/* binding */ wt),
/* harmony export */   isValidRequest: () => (/* binding */ Dt),
/* harmony export */   isValidRequestExpiry: () => (/* binding */ Ht),
/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ _t),
/* harmony export */   isValidResponse: () => (/* binding */ Vt),
/* harmony export */   isValidString: () => (/* binding */ m),
/* harmony export */   isValidUrl: () => (/* binding */ Tt),
/* harmony export */   mapEntries: () => (/* binding */ Wn),
/* harmony export */   mapToObj: () => (/* binding */ Gn),
/* harmony export */   mergeArrays: () => (/* binding */ O),
/* harmony export */   normalizeNamespaces: () => (/* binding */ re),
/* harmony export */   objToMap: () => (/* binding */ Yn),
/* harmony export */   parseAccountId: () => (/* binding */ z),
/* harmony export */   parseChainId: () => (/* binding */ me),
/* harmony export */   parseContextNames: () => (/* binding */ Ke),
/* harmony export */   parseExpirerTarget: () => (/* binding */ tt),
/* harmony export */   parseNamespaceKey: () => (/* binding */ Qe),
/* harmony export */   parseRelayParams: () => (/* binding */ qe),
/* harmony export */   parseUri: () => (/* binding */ ft),
/* harmony export */   serialize: () => (/* binding */ Ie),
/* harmony export */   validateDecoding: () => (/* binding */ $n),
/* harmony export */   validateEncoding: () => (/* binding */ Pe)
/* harmony export */ });
/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ "./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js");
/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/hkdf */ "./node_modules/@stablelib/hkdf/lib/hkdf.js");
/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stablelib/random */ "./node_modules/@stablelib/random/lib/random.js");
/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stablelib/sha256 */ "./node_modules/@stablelib/sha256/lib/sha256.js");
/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/x25519 */ "./node_modules/@stablelib/x25519/lib/x25519.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ "./node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ "./node_modules/detect-browser/es/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/window-metadata */ "./node_modules/@walletconnect/window-metadata/dist/cjs/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! query-string */ "./node_modules/@walletconnect/universal-provider/node_modules/query-string/index.js");
/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ "./node_modules/@walletconnect/relay-api/dist/esm/index.js");
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
const D=":";function me(e){const[n,t]=e.split(D);return{namespace:n,reference:t}}function ye(e){const{namespace:n,reference:t}=e;return[n,t].join(D)}function z(e){const[n,t,r]=e.split(D);return{namespace:n,reference:t,address:r}}function Ee(e){const{namespace:n,reference:t,address:r}=e;return[n,t,r].join(D)}function B(e,n){const t=[];return e.forEach(r=>{const o=n(r);t.includes(o)||t.push(o)}),t}function he(e){const{address:n}=z(e);return n}function ve(e){const{namespace:n,reference:t}=z(e);return ye({namespace:n,reference:t})}function gn(e,n){const{namespace:t,reference:r}=me(n);return Ee({namespace:t,reference:r,address:e})}function Nn(e){return B(e,he)}function ge(e){return B(e,ve)}function bn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...o.accounts)}),t}function On(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...ge(o.accounts))}),t}function Sn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const o=e[r];t.push(...V(r,o))}),t}function V(e,n){return e.includes(":")?[e]:n.chains||[]}const M=e=>e?.split(":"),Ne=e=>{const n=e&&M(e);if(n)return n[3]},In=e=>{const n=e&&M(e);if(n)return n[2]+":"+n[3]},be=e=>{const n=e&&M(e);if(n)return n.pop()},Pn=(e,n)=>{const t=`${e.domain} wants you to sign in with your Ethereum account:`,r=be(n),o=e.statement,s=`URI: ${e.aud}`,c=`Version: ${e.version}`,d=`Chain ID: ${Ne(n)}`,l=`Nonce: ${e.nonce}`,i=`Issued At: ${e.iat}`,u=e.resources&&e.resources.length>0?`Resources:
${e.resources.map(a=>`- ${a}`).join(`
`)}`:void 0;return[t,r,"",o,"",s,c,d,l,i,u].filter(a=>a!=null).join(`
`)},G="base10",f="base16",K="base64pad",k="utf8",Y=0,U=1,Tn=0,Oe=1,W=12,J=32;function Rn(){const e=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.generateKeyPair();return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.secretKey,f),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.publicKey,f)}}function An(){const e=(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(J);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,f)}function Un(e,n){const t=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,f),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(n,f)),r=new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.SHA256,t).expand(J);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r,f)}function _n(e){const n=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,f));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,f)}function wn(e){const n=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,k));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,f)}function Se(e){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${e}`,G)}function j(e){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,G))}function jn(e){const n=Se(typeof e.type<"u"?e.type:Y);if(j(n)===U&&typeof e.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");const t=typeof e.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.senderPublicKey,f):void 0,r=typeof e.iv<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.iv,f):(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(W),o=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey,f)).seal(r,(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.message,k));return Ie({type:n,sealed:o,iv:r,senderPublicKey:t})}function Cn(e){const n=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey,f)),{sealed:t,iv:r}=Q(e.encoded),o=n.open(r,t);if(o===null)throw new Error("Failed to decrypt");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o,k)}function Ie(e){if(j(e.type)===U){if(typeof e.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([e.type,e.senderPublicKey,e.iv,e.sealed]),K)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([e.type,e.iv,e.sealed]),K)}function Q(e){const n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,K),t=n.slice(Tn,Oe),r=Oe;if(j(t)===U){const d=r+J,l=d+W,i=n.slice(r,d),u=n.slice(d,l),a=n.slice(l);return{type:t,sealed:a,iv:u,senderPublicKey:i}}const o=r+W,s=n.slice(r,o),c=n.slice(o);return{type:t,sealed:c,iv:s}}function $n(e,n){const t=Q(e);return Pe({type:j(t.type),senderPublicKey:typeof t.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t.senderPublicKey,f):void 0,receiverPublicKey:n?.receiverPublicKey})}function Pe(e){const n=e?.type||Y;if(n===U){if(typeof e?.senderPublicKey>"u")throw new Error("missing sender public key");if(typeof e?.receiverPublicKey>"u")throw new Error("missing receiver public key")}return{type:n,senderPublicKey:e?.senderPublicKey,receiverPublicKey:e?.receiverPublicKey}}function Dn(e){return e.type===U&&typeof e.senderPublicKey=="string"&&typeof e.receiverPublicKey=="string"}var Vn=Object.defineProperty,Te=Object.getOwnPropertySymbols,Mn=Object.prototype.hasOwnProperty,Kn=Object.prototype.propertyIsEnumerable,Re=(e,n,t)=>n in e?Vn(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,Ae=(e,n)=>{for(var t in n||(n={}))Mn.call(n,t)&&Re(e,t,n[t]);if(Te)for(var t of Te(n))Kn.call(n,t)&&Re(e,t,n[t]);return e};const Ue="ReactNative",_={reactNative:"react-native",node:"node",browser:"browser",unknown:"unknown"},L=" ",kn=":",_e="/",Z=2,Ln=1e3,we="js";function X(){return typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"}function je(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)()&&navigator.product===Ue}function Ce(){return!X()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)()}function ee(){return je()?_.reactNative:X()?_.node:Ce()?_.browser:_.unknown}function $e(e,n){let t=query_string__WEBPACK_IMPORTED_MODULE_9__.parse(e);return t=Ae(Ae({},t),n),e=query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(t),e}function xn(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__.getWindowMetadata)()||{name:"",description:"",url:"",icons:[""]}}function Fn(e,n){var t;const r=ee(),o={protocol:e,version:n,env:r};return r==="browser"&&(o.host=((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)())==null?void 0:t.host)||"unknown"),o}function De(){const e=(0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();if(e===null)return"unknown";const n=e.os?e.os.replace(" ","").toLowerCase():"unknown";return e.type==="browser"?[n,e.name,e.version].join("-"):[n,e.version].join("-")}function Ve(){var e;const n=ee();return n===_.browser?[n,((e=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)())==null?void 0:e.host)||"unknown"].join(":"):n}function Me(e,n,t){const r=De(),o=Ve();return[[e,n].join("-"),[we,t].join("-"),r,o].join("/")}function Hn({protocol:e,version:n,relayUrl:t,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:c}){const d=t.split("?"),l=Me(e,n,r),i={auth:o,ua:l,projectId:s,useOnCloseEvent:c||void 0},u=$e(d[1]||"",i);return d[0]+"?"+u}function qn(e){let n=(e.match(/^[^:]+(?=:\/\/)/gi)||[])[0];const t=typeof n<"u"?e.split("://")[1]:e;return n=n==="wss"?"https":"http",[n,t].join("://")}function zn(e,n,t){if(!e[n]||typeof e[n]!==t)throw new Error(`Missing or invalid "${n}" param`)}function Ke(e,n=Z){return ke(e.split(_e),n)}function Bn(e){return Ke(e).join(L)}function b(e,n){return e.filter(t=>n.includes(t)).length===e.length}function ke(e,n=Z){return e.slice(Math.max(e.length-n,0))}function Gn(e){return Object.fromEntries(e.entries())}function Yn(e){return new Map(Object.entries(e))}function Wn(e,n){const t={};return Object.keys(e).forEach(r=>{t[r]=n(e[r])}),t}const Jn=e=>e;function Le(e){return e.trim().replace(/^\w/,n=>n.toUpperCase())}function Qn(e){return e.split(L).map(n=>Le(n)).join(L)}function Zn(e=_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES,n){const t=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e||_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES);let r,o,s;return{resolve:c=>{s&&r&&(clearTimeout(s),r(c))},reject:c=>{s&&o&&(clearTimeout(s),o(c))},done:()=>new Promise((c,d)=>{s=setTimeout(()=>{d(new Error(n))},t),r=c,o=d})}}function Xn(e,n,t){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(t)),n);try{const c=await e;r(c)}catch(c){o(c)}clearTimeout(s)})}function ne(e,n){if(typeof n=="string"&&n.startsWith(`${e}:`))return n;if(e.toLowerCase()==="topic"){if(typeof n!="string")throw new Error('Value must be "string" for expirer target type: topic');return`topic:${n}`}else if(e.toLowerCase()==="id"){if(typeof n!="number")throw new Error('Value must be "number" for expirer target type: id');return`id:${n}`}throw new Error(`Unknown expirer target type: ${e}`)}function et(e){return ne("topic",e)}function nt(e){return ne("id",e)}function tt(e){const[n,t]=e.split(":"),r={id:void 0,topic:void 0};if(n==="topic"&&typeof t=="string")r.topic=t;else if(n==="id"&&Number.isInteger(Number(t)))r.id=Number(t);else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);return r}function rt(e,n){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.fromMiliseconds)((n||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e))}function ot(e){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e)}function st(e,n){return`${e}${n?`:${n}`:""}`}function O(e=[],n=[]){return[...new Set([...e,...n])]}const xe="irn";function it(e){return e?.relay||{protocol:xe}}function ct(e){const n=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];if(typeof n>"u")throw new Error(`Relay Protocol not supported: ${e}`);return n}var at=Object.defineProperty,Fe=Object.getOwnPropertySymbols,ut=Object.prototype.hasOwnProperty,dt=Object.prototype.propertyIsEnumerable,He=(e,n,t)=>n in e?at(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,lt=(e,n)=>{for(var t in n||(n={}))ut.call(n,t)&&He(e,t,n[t]);if(Fe)for(var t of Fe(n))dt.call(n,t)&&He(e,t,n[t]);return e};function qe(e,n="-"){const t={},r="relay"+n;return Object.keys(e).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,""),c=e[o];t[s]=c}}),t}function ft(e){const n=e.indexOf(":"),t=e.indexOf("?")!==-1?e.indexOf("?"):void 0,r=e.substring(0,n),o=e.substring(n+1,t).split("@"),s=typeof t<"u"?e.substring(t):"",c=query_string__WEBPACK_IMPORTED_MODULE_9__.parse(s);return{protocol:r,topic:o[0],version:parseInt(o[1],10),symKey:c.symKey,relay:qe(c)}}function ze(e,n="-"){const t="relay",r={};return Object.keys(e).forEach(o=>{const s=t+n+o;e[o]&&(r[s]=e[o])}),r}function pt(e){return`${e.protocol}:${e.topic}@${e.version}?`+query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(lt({symKey:e.symKey},ze(e.relay)))}var mt=Object.defineProperty,yt=Object.defineProperties,Et=Object.getOwnPropertyDescriptors,Be=Object.getOwnPropertySymbols,ht=Object.prototype.hasOwnProperty,vt=Object.prototype.propertyIsEnumerable,Ge=(e,n,t)=>n in e?mt(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,gt=(e,n)=>{for(var t in n||(n={}))ht.call(n,t)&&Ge(e,t,n[t]);if(Be)for(var t of Be(n))vt.call(n,t)&&Ge(e,t,n[t]);return e},Nt=(e,n)=>yt(e,Et(n));function T(e){const n=[];return e.forEach(t=>{const[r,o]=t.split(":");n.push(`${r}:${o}`)}),n}function Ye(e){const n=[];return Object.values(e).forEach(t=>{n.push(...T(t.accounts))}),n}function We(e,n){const t=[];return Object.values(e).forEach(r=>{T(r.accounts).includes(n)&&t.push(...r.methods)}),t}function Je(e,n){const t=[];return Object.values(e).forEach(r=>{T(r.accounts).includes(n)&&t.push(...r.events)}),t}function bt(e,n){const t=on(e,n);if(t)throw new Error(t.message);const r={};for(const[o,s]of Object.entries(e))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(c=>`${c.split(":")[0]}:${c.split(":")[1]}`)};return r}function Ot(e){const{requiredNamespaces:n,optionalNamespaces:t={},supportedNamespaces:r}=e,o=re(n),s=re(t),c={};Object.keys(r).forEach(i=>{const u=r[i].chains,a=r[i].methods,g=r[i].events,A=r[i].accounts;c[i]={chains:u,methods:a,events:g,accounts:A}});const d=cn(n,c,"approve()");if(d)throw new Error(d.message);const l={};return Object.keys(o).forEach(i=>{const u=r[i].chains.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.chains)==null?void 0:y.includes(v)}),a=r[i].methods.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.methods)==null?void 0:y.includes(v)}),g=r[i].events.filter(v=>{var p,y;return(y=(p=o[i])==null?void 0:p.events)==null?void 0:y.includes(v)}),A=u.map(v=>r[i].accounts.filter(p=>p.includes(v))).flat();l[i]={chains:u,methods:a,events:g,accounts:A}}),Object.keys(s).forEach(i=>{var u,a,g,A,v,p;if(!r[i])return;const y=(a=(u=s[i])==null?void 0:u.chains)==null?void 0:a.filter(I=>r[i].chains.includes(I)),un=r[i].methods.filter(I=>{var P,w;return(w=(P=s[i])==null?void 0:P.methods)==null?void 0:w.includes(I)}),dn=r[i].events.filter(I=>{var P,w;return(w=(P=s[i])==null?void 0:P.events)==null?void 0:w.includes(I)}),ln=y?.map(I=>r[i].accounts.filter(P=>P.includes(I))).flat();l[i]={chains:O((g=l[i])==null?void 0:g.chains,y),methods:O((A=l[i])==null?void 0:A.methods,un),events:O((v=l[i])==null?void 0:v.events,dn),accounts:O((p=l[i])==null?void 0:p.accounts,ln)}}),l}function te(e){return e.includes(":")}function Qe(e){return te(e)?e.split(":")[0]:e}function re(e){var n,t,r;const o={};if(!x(e))return o;for(const[s,c]of Object.entries(e)){const d=te(s)?[s]:c.chains,l=c.methods||[],i=c.events||[],u=Qe(s);o[u]=Nt(gt({},o[u]),{chains:O(d,(n=o[u])==null?void 0:n.chains),methods:O(l,(t=o[u])==null?void 0:t.methods),events:O(i,(r=o[u])==null?void 0:r.events)})}return o}const St={INVALID_METHOD:{message:"Invalid method.",code:1001},INVALID_EVENT:{message:"Invalid event.",code:1002},INVALID_UPDATE_REQUEST:{message:"Invalid update request.",code:1003},INVALID_EXTEND_REQUEST:{message:"Invalid extend request.",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:"Invalid session settle request.",code:1005},UNAUTHORIZED_METHOD:{message:"Unauthorized method.",code:3001},UNAUTHORIZED_EVENT:{message:"Unauthorized event.",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:"Unauthorized update request.",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:"Unauthorized extend request.",code:3004},USER_REJECTED:{message:"User rejected.",code:5e3},USER_REJECTED_CHAINS:{message:"User rejected chains.",code:5001},USER_REJECTED_METHODS:{message:"User rejected methods.",code:5002},USER_REJECTED_EVENTS:{message:"User rejected events.",code:5003},UNSUPPORTED_CHAINS:{message:"Unsupported chains.",code:5100},UNSUPPORTED_METHODS:{message:"Unsupported methods.",code:5101},UNSUPPORTED_EVENTS:{message:"Unsupported events.",code:5102},UNSUPPORTED_ACCOUNTS:{message:"Unsupported accounts.",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:"Unsupported namespace key.",code:5104},USER_DISCONNECTED:{message:"User disconnected.",code:6e3},SESSION_SETTLEMENT_FAILED:{message:"Session settlement failed.",code:7e3},WC_METHOD_UNSUPPORTED:{message:"Unsupported wc_ method.",code:10001}},It={NOT_INITIALIZED:{message:"Not initialized.",code:1},NO_MATCHING_KEY:{message:"No matching key.",code:2},RESTORE_WILL_OVERRIDE:{message:"Restore will override.",code:3},RESUBSCRIBED:{message:"Resubscribed.",code:4},MISSING_OR_INVALID:{message:"Missing or invalid.",code:5},EXPIRED:{message:"Expired.",code:6},UNKNOWN_TYPE:{message:"Unknown type.",code:7},MISMATCHED_TOPIC:{message:"Mismatched topic.",code:8},NON_CONFORMING_NAMESPACES:{message:"Non conforming namespaces.",code:9}};function N(e,n){const{message:t,code:r}=It[e];return{message:n?`${t} ${n}`:t,code:r}}function R(e,n){const{message:t,code:r}=St[e];return{message:n?`${t} ${n}`:t,code:r}}function C(e,n){return Array.isArray(e)?typeof n<"u"&&e.length?e.every(n):!0:!1}function x(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.keys(e).length}function S(e){return typeof e>"u"}function m(e,n){return n&&S(e)?!0:typeof e=="string"&&Boolean(e.trim().length)}function F(e,n){return n&&S(e)?!0:typeof e=="number"&&!isNaN(e)}function Pt(e,n){const{requiredNamespaces:t}=n,r=Object.keys(e.namespaces),o=Object.keys(t);let s=!0;return b(o,r)?(r.forEach(c=>{const{accounts:d,methods:l,events:i}=e.namespaces[c],u=T(d),a=t[c];(!b(V(c,a),u)||!b(a.methods,l)||!b(a.events,i))&&(s=!1)}),s):!1}function H(e){return m(e,!1)&&e.includes(":")?e.split(":").length===2:!1}function Ze(e){if(m(e,!1)&&e.includes(":")){const n=e.split(":");if(n.length===3){const t=n[0]+":"+n[1];return!!n[2]&&H(t)}}return!1}function Tt(e){if(m(e,!1))try{return typeof new URL(e)<"u"}catch{return!1}return!1}function Rt(e){var n;return(n=e?.proposer)==null?void 0:n.publicKey}function At(e){return e?.topic}function Ut(e,n){let t=null;return m(e?.publicKey,!1)||(t=N("MISSING_OR_INVALID",`${n} controller public key should be a string`)),t}function oe(e){let n=!0;return C(e)?e.length&&(n=e.every(t=>m(t,!1))):n=!1,n}function Xe(e,n,t){let r=null;return C(n)?n.forEach(o=>{r||(!H(o)||!o.includes(e))&&(r=R("UNSUPPORTED_CHAINS",`${t}, chain ${o} should be a string and conform to "namespace:chainId" format`))}):r=R("UNSUPPORTED_CHAINS",`${t}, chains ${n} should be an array of strings conforming to "namespace:chainId" format`),r}function en(e,n){let t=null;return Object.entries(e).forEach(([r,o])=>{if(t)return;const s=Xe(r,V(r,o),`${n} requiredNamespace`);s&&(t=s)}),t}function nn(e,n){let t=null;return C(e)?e.forEach(r=>{t||Ze(r)||(t=R("UNSUPPORTED_ACCOUNTS",`${n}, account ${r} should be a string and conform to "namespace:chainId:address" format`))}):t=R("UNSUPPORTED_ACCOUNTS",`${n}, accounts should be an array of strings conforming to "namespace:chainId:address" format`),t}function tn(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const o=nn(r?.accounts,`${n} namespace`);o&&(t=o)}),t}function rn(e,n){let t=null;return oe(e?.methods)?oe(e?.events)||(t=R("UNSUPPORTED_EVENTS",`${n}, events should be an array of strings or empty array for no events`)):t=R("UNSUPPORTED_METHODS",`${n}, methods should be an array of strings or empty array for no methods`),t}function se(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const o=rn(r,`${n}, namespace`);o&&(t=o)}),t}function _t(e,n,t){let r=null;if(e&&x(e)){const o=se(e,n);o&&(r=o);const s=en(e,n);s&&(r=s)}else r=N("MISSING_OR_INVALID",`${n}, ${t} should be an object with data`);return r}function on(e,n){let t=null;if(e&&x(e)){const r=se(e,n);r&&(t=r);const o=tn(e,n);o&&(t=o)}else t=N("MISSING_OR_INVALID",`${n}, namespaces should be an object with data`);return t}function sn(e){return m(e.protocol,!0)}function wt(e,n){let t=!1;return n&&!e?t=!0:e&&C(e)&&e.length&&e.forEach(r=>{t=sn(r)}),t}function jt(e){return typeof e=="number"}function Ct(e){return typeof e<"u"&&typeof e!==null}function $t(e){return!(!e||typeof e!="object"||!e.code||!F(e.code,!1)||!e.message||!m(e.message,!1))}function Dt(e){return!(S(e)||!m(e.method,!1))}function Vt(e){return!(S(e)||S(e.result)&&S(e.error)||!F(e.id,!1)||!m(e.jsonrpc,!1))}function Mt(e){return!(S(e)||!m(e.name,!1))}function Kt(e,n){return!(!H(n)||!Ye(e).includes(n))}function kt(e,n,t){return m(t,!1)?We(e,n).includes(t):!1}function Lt(e,n,t){return m(t,!1)?Je(e,n).includes(t):!1}function cn(e,n,t){let r=null;const o=xt(e),s=Ft(n),c=Object.keys(o),d=Object.keys(s),l=an(Object.keys(e)),i=an(Object.keys(n)),u=l.filter(a=>!i.includes(a));return u.length&&(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u.toString()}
      Received: ${Object.keys(n).toString()}`)),b(c,d)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces chains don't satisfy required namespaces.
      Required: ${c.toString()}
      Approved: ${d.toString()}`)),Object.keys(n).forEach(a=>{if(!a.includes(":")||r)return;const g=T(n[a].accounts);g.includes(a)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces accounts don't satisfy namespace accounts for ${a}
        Required: ${a}
        Approved: ${g.toString()}`))}),c.forEach(a=>{r||(b(o[a].methods,s[a].methods)?b(o[a].events,s[a].events)||(r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces events don't satisfy namespace events for ${a}`)):r=N("NON_CONFORMING_NAMESPACES",`${t} namespaces methods don't satisfy namespace methods for ${a}`))}),r}function xt(e){const n={};return Object.keys(e).forEach(t=>{var r;t.includes(":")?n[t]=e[t]:(r=e[t].chains)==null||r.forEach(o=>{n[o]={methods:e[t].methods,events:e[t].events}})}),n}function an(e){return[...new Set(e.map(n=>n.includes(":")?n.split(":")[0]:n))]}function Ft(e){const n={};return Object.keys(e).forEach(t=>{if(t.includes(":"))n[t]=e[t];else{const r=T(e[t].accounts);r?.forEach(o=>{n[o]={accounts:e[t].accounts.filter(s=>s.includes(`${o}:`)),methods:e[t].methods,events:e[t].events}})}}),n}function Ht(e,n){return F(e,!1)&&e<=n.max&&e>=n.min}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/filter-obj/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/filter-obj/index.js ***!
  \*****************************************************************************************/
/***/ ((module) => {


module.exports = function (obj, predicate) {
	var ret = {};
	var keys = Object.keys(obj);
	var isArr = Array.isArray(predicate);

	for (var i = 0; i < keys.length; i++) {
		var key = keys[i];
		var val = obj[key];

		if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
			ret[key] = val;
		}
	}

	return ret;
};


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/query-string/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/query-string/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


const strictUriEncode = __webpack_require__(/*! strict-uri-encode */ "./node_modules/strict-uri-encode/index.js");
const decodeComponent = __webpack_require__(/*! decode-uri-component */ "./node_modules/decode-uri-component/index.js");
const splitOnFirst = __webpack_require__(/*! split-on-first */ "./node_modules/split-on-first/index.js");
const filterObject = __webpack_require__(/*! filter-obj */ "./node_modules/@walletconnect/universal-provider/node_modules/filter-obj/index.js");

const isNullOrUndefined = value => value === null || value === undefined;

const encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');

function encoderForArrayFormat(options) {
	switch (options.arrayFormat) {
		case 'index':
			return key => (result, value) => {
				const index = result.length;

				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[', index, ']'].join('')];
				}

				return [
					...result,
					[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')
				];
			};

		case 'bracket':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[]'].join('')];
				}

				return [...result, [encode(key, options), '[]=', encode(value, options)].join('')];
			};

		case 'colon-list-separator':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), ':list='].join('')];
				}

				return [...result, [encode(key, options), ':list=', encode(value, options)].join('')];
			};

		case 'comma':
		case 'separator':
		case 'bracket-separator': {
			const keyValueSep = options.arrayFormat === 'bracket-separator' ?
				'[]=' :
				'=';

			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				// Translate null to an empty string so that it doesn't serialize as 'null'
				value = value === null ? '' : value;

				if (result.length === 0) {
					return [[encode(key, options), keyValueSep, encode(value, options)].join('')];
				}

				return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
			};
		}

		default:
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, encode(key, options)];
				}

				return [...result, [encode(key, options), '=', encode(value, options)].join('')];
			};
	}
}

function parserForArrayFormat(options) {
	let result;

	switch (options.arrayFormat) {
		case 'index':
			return (key, value, accumulator) => {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return (key, value, accumulator) => {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'colon-list-separator':
			return (key, value, accumulator) => {
				result = /(:list)$/.exec(key);
				key = key.replace(/:list$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'comma':
		case 'separator':
			return (key, value, accumulator) => {
				const isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);
				const isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));
				value = isEncodedArray ? decode(value, options) : value;
				const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);
				accumulator[key] = newValue;
			};

		case 'bracket-separator':
			return (key, value, accumulator) => {
				const isArray = /(\[\])$/.test(key);
				key = key.replace(/\[\]$/, '');

				if (!isArray) {
					accumulator[key] = value ? decode(value, options) : value;
					return;
				}

				const arrayValue = value === null ?
					[] :
					value.split(options.arrayFormatSeparator).map(item => decode(item, options));

				if (accumulator[key] === undefined) {
					accumulator[key] = arrayValue;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], arrayValue);
			};

		default:
			return (key, value, accumulator) => {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function validateArrayFormatSeparator(value) {
	if (typeof value !== 'string' || value.length !== 1) {
		throw new TypeError('arrayFormatSeparator must be single character string');
	}
}

function encode(value, options) {
	if (options.encode) {
		return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function decode(value, options) {
	if (options.decode) {
		return decodeComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	}

	if (typeof input === 'object') {
		return keysSorter(Object.keys(input))
			.sort((a, b) => Number(a) - Number(b))
			.map(key => input[key]);
	}

	return input;
}

function removeHash(input) {
	const hashStart = input.indexOf('#');
	if (hashStart !== -1) {
		input = input.slice(0, hashStart);
	}

	return input;
}

function getHash(url) {
	let hash = '';
	const hashStart = url.indexOf('#');
	if (hashStart !== -1) {
		hash = url.slice(hashStart);
	}

	return hash;
}

function extract(input) {
	input = removeHash(input);
	const queryStart = input.indexOf('?');
	if (queryStart === -1) {
		return '';
	}

	return input.slice(queryStart + 1);
}

function parseValue(value, options) {
	if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {
		value = Number(value);
	} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
		value = value.toLowerCase() === 'true';
	}

	return value;
}

function parse(query, options) {
	options = Object.assign({
		decode: true,
		sort: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ',',
		parseNumbers: false,
		parseBooleans: false
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const formatter = parserForArrayFormat(options);

	// Create an object with no prototype
	const ret = Object.create(null);

	if (typeof query !== 'string') {
		return ret;
	}

	query = query.trim().replace(/^[?#&]/, '');

	if (!query) {
		return ret;
	}

	for (const param of query.split('&')) {
		if (param === '') {
			continue;
		}

		let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, ' ') : param, '=');

		// Missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		value = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);
		formatter(decode(key, options), value, ret);
	}

	for (const key of Object.keys(ret)) {
		const value = ret[key];
		if (typeof value === 'object' && value !== null) {
			for (const k of Object.keys(value)) {
				value[k] = parseValue(value[k], options);
			}
		} else {
			ret[key] = parseValue(value, options);
		}
	}

	if (options.sort === false) {
		return ret;
	}

	return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
		const value = ret[key];
		if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {
			// Sort object keys, not values
			result[key] = keysSorter(value);
		} else {
			result[key] = value;
		}

		return result;
	}, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = (object, options) => {
	if (!object) {
		return '';
	}

	options = Object.assign({
		encode: true,
		strict: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ','
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const shouldFilter = key => (
		(options.skipNull && isNullOrUndefined(object[key])) ||
		(options.skipEmptyString && object[key] === '')
	);

	const formatter = encoderForArrayFormat(options);

	const objectCopy = {};

	for (const key of Object.keys(object)) {
		if (!shouldFilter(key)) {
			objectCopy[key] = object[key];
		}
	}

	const keys = Object.keys(objectCopy);

	if (options.sort !== false) {
		keys.sort(options.sort);
	}

	return keys.map(key => {
		const value = object[key];

		if (value === undefined) {
			return '';
		}

		if (value === null) {
			return encode(key, options);
		}

		if (Array.isArray(value)) {
			if (value.length === 0 && options.arrayFormat === 'bracket-separator') {
				return encode(key, options) + '[]';
			}

			return value
				.reduce(formatter(key), [])
				.join('&');
		}

		return encode(key, options) + '=' + encode(value, options);
	}).filter(x => x.length > 0).join('&');
};

exports.parseUrl = (url, options) => {
	options = Object.assign({
		decode: true
	}, options);

	const [url_, hash] = splitOnFirst(url, '#');

	return Object.assign(
		{
			url: url_.split('?')[0] || '',
			query: parse(extract(url), options)
		},
		options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}
	);
};

exports.stringifyUrl = (object, options) => {
	options = Object.assign({
		encode: true,
		strict: true,
		[encodeFragmentIdentifier]: true
	}, options);

	const url = removeHash(object.url).split('?')[0] || '';
	const queryFromUrl = exports.extract(object.url);
	const parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});

	const query = Object.assign(parsedQueryFromUrl, object.query);
	let queryString = exports.stringify(query, options);
	if (queryString) {
		queryString = `?${queryString}`;
	}

	let hash = getHash(object.url);
	if (object.fragmentIdentifier) {
		hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
	}

	return `${url}${queryString}${hash}`;
};

exports.pick = (input, filter, options) => {
	options = Object.assign({
		parseFragmentIdentifier: true,
		[encodeFragmentIdentifier]: false
	}, options);

	const {url, query, fragmentIdentifier} = exports.parseUrl(input, options);
	return exports.stringifyUrl({
		url,
		query: filterObject(query, filter),
		fragmentIdentifier
	}, options);
};

exports.exclude = (input, filter, options) => {
	const exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);

	return exports.pick(input, exclusionFilter, options);
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,